#include "Insulation.h"
#include "Painter.h"
#include "CoreAdviser.h"
#include "CoilAdviser.h"
#include "InputsWrapper.h"
#include "TestingUtils.h"
#include "Settings.h"

#include <UnitTest++.h>
#include <vector>

SUITE(SolidInsulationRequirements) {

    auto standardCoordinator = OpenMagnetics::InsulationCoordinator();
    auto overvoltageCategory = OpenMagnetics::OvervoltageCategory::OVC_II;
    auto cti = OpenMagnetics::Cti::GROUP_I;
    double maximumVoltageRms = 666;
    double maximumVoltagePeak = 800;
    double frequency = 30000;
    OpenMagnetics::DimensionWithTolerance altitude;
    OpenMagnetics::DimensionWithTolerance mainSupplyVoltage;
    auto pollutionDegree = OpenMagnetics::PollutionDegree::P1;


    TEST(Test_CoilAdviser_Wires_Withstand_Voltage_Same_Isolation_Sides_Basic_No_FIW) {

        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_606641};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto insulationType = OpenMagnetics::InsulationType::BASIC;
        OpenMagnetics::InputsWrapper inputs = OpenMagneticsTesting::get_quick_insulation_inputs(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards, maximumVoltageRms, maximumVoltagePeak, frequency, OpenMagnetics::WiringTechnology::WOUND);
        OpenMagnetics::DimensionWithTolerance dimensionWithTolerance;
        dimensionWithTolerance.set_nominal(1);
        inputs.get_mutable_design_requirements().set_turns_ratios({dimensionWithTolerance});
        inputs.get_mutable_design_requirements().set_isolation_sides(std::vector<OpenMagnetics::IsolationSide>{OpenMagnetics::IsolationSide::PRIMARY, OpenMagnetics::IsolationSide::PRIMARY});

        OpenMagnetics::CoilAdviser coilAdviser;
        auto withstandVoltageForWires = coilAdviser.get_solid_insulation_requirements_for_wires(inputs, {0, 1}, 1);
        CHECK_EQUAL(2UL, withstandVoltageForWires.size());
        CHECK_EQUAL(2UL, withstandVoltageForWires[0].size());
        CHECK(withstandVoltageForWires[0][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][0].get_minimum_grade());

        CHECK(withstandVoltageForWires[0][0].get_minimum_grade().value() == 1);
        CHECK(withstandVoltageForWires[1][0].get_minimum_breakdown_voltage() > 0);
        CHECK(withstandVoltageForWires[1][1].get_minimum_breakdown_voltage() > 0);
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers().value() == 1);
        CHECK(!withstandVoltageForWires[1][0].get_minimum_grade());
    }

    TEST(Test_CoilAdviser_Wires_Withstand_Voltage_Different_Isolation_Sides_Functional_No_FIW) {
        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_606641};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto insulationType = OpenMagnetics::InsulationType::FUNCTIONAL;
        OpenMagnetics::InputsWrapper inputs = OpenMagneticsTesting::get_quick_insulation_inputs(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards, maximumVoltageRms, maximumVoltagePeak, frequency, OpenMagnetics::WiringTechnology::WOUND);
        OpenMagnetics::DimensionWithTolerance dimensionWithTolerance;
        dimensionWithTolerance.set_nominal(1);
        inputs.get_mutable_design_requirements().set_turns_ratios({dimensionWithTolerance});
        inputs.get_mutable_design_requirements().set_isolation_sides(std::vector<OpenMagnetics::IsolationSide>{OpenMagnetics::IsolationSide::PRIMARY, OpenMagnetics::IsolationSide::SECONDARY});

        OpenMagnetics::CoilAdviser coilAdviser;
        auto withstandVoltageForWires = coilAdviser.get_solid_insulation_requirements_for_wires(inputs, {0, 1}, 1);
        CHECK_EQUAL(1UL, withstandVoltageForWires.size());
        CHECK_EQUAL(2UL, withstandVoltageForWires[0].size());

        CHECK(withstandVoltageForWires[0][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][1].get_minimum_grade());
    }

    TEST(Test_CoilAdviser_Wires_Withstand_Voltage_Different_Isolation_Sides_Basic_No_FIW) {
        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_606641};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto insulationType = OpenMagnetics::InsulationType::BASIC;
        OpenMagnetics::InputsWrapper inputs = OpenMagneticsTesting::get_quick_insulation_inputs(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards, maximumVoltageRms, maximumVoltagePeak, frequency, OpenMagnetics::WiringTechnology::WOUND);
        OpenMagnetics::DimensionWithTolerance dimensionWithTolerance;
        dimensionWithTolerance.set_nominal(1);
        inputs.get_mutable_design_requirements().set_turns_ratios({dimensionWithTolerance});
        inputs.get_mutable_design_requirements().set_isolation_sides(std::vector<OpenMagnetics::IsolationSide>{OpenMagnetics::IsolationSide::PRIMARY, OpenMagnetics::IsolationSide::SECONDARY});

        OpenMagnetics::CoilAdviser coilAdviser;
        auto withstandVoltageForWires = coilAdviser.get_solid_insulation_requirements_for_wires(inputs, {0, 1}, 1);
        CHECK_EQUAL(3UL, withstandVoltageForWires.size());
        CHECK_EQUAL(2UL, withstandVoltageForWires[0].size());

        CHECK(withstandVoltageForWires[0][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][1].get_minimum_grade());

        CHECK(withstandVoltageForWires[1][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[1][1].get_minimum_breakdown_voltage() == 6000);
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][0].get_minimum_grade());
        CHECK(!withstandVoltageForWires[1][1].get_minimum_grade());

        CHECK(withstandVoltageForWires[2][0].get_minimum_breakdown_voltage() == 6000);
        CHECK(withstandVoltageForWires[2][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers().value() == 1);
        CHECK(!withstandVoltageForWires[2][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[2][1].get_minimum_grade());
    }

    TEST(Test_CoilAdviser_Wires_Withstand_Voltage_Different_Isolation_Sides_Supplementary_No_FIW) {
        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_606641};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto insulationType = OpenMagnetics::InsulationType::SUPPLEMENTARY;
        OpenMagnetics::InputsWrapper inputs = OpenMagneticsTesting::get_quick_insulation_inputs(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards, maximumVoltageRms, maximumVoltagePeak, frequency, OpenMagnetics::WiringTechnology::WOUND);
        OpenMagnetics::DimensionWithTolerance dimensionWithTolerance;
        dimensionWithTolerance.set_nominal(1);
        inputs.get_mutable_design_requirements().set_turns_ratios({dimensionWithTolerance});
        inputs.get_mutable_design_requirements().set_isolation_sides(std::vector<OpenMagnetics::IsolationSide>{OpenMagnetics::IsolationSide::PRIMARY, OpenMagnetics::IsolationSide::SECONDARY});

        OpenMagnetics::CoilAdviser coilAdviser;
        auto withstandVoltageForWires = coilAdviser.get_solid_insulation_requirements_for_wires(inputs, {0, 1}, 1);
        CHECK_EQUAL(3UL, withstandVoltageForWires.size());
        CHECK_EQUAL(2UL, withstandVoltageForWires[0].size());

        CHECK(withstandVoltageForWires[0][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][1].get_minimum_grade());

        CHECK(withstandVoltageForWires[1][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[1][1].get_minimum_breakdown_voltage() == 6000);
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][0].get_minimum_grade());
        CHECK(!withstandVoltageForWires[1][1].get_minimum_grade());

        CHECK(withstandVoltageForWires[2][0].get_minimum_breakdown_voltage() == 6000);
        CHECK(withstandVoltageForWires[2][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers().value() == 1);
        CHECK(!withstandVoltageForWires[2][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[2][1].get_minimum_grade());
    }

    TEST(Test_CoilAdviser_Wires_Withstand_Voltage_Different_Isolation_Sides_Reinforced_No_FIW) {
        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_606641};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto insulationType = OpenMagnetics::InsulationType::REINFORCED;
        OpenMagnetics::InputsWrapper inputs = OpenMagneticsTesting::get_quick_insulation_inputs(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards, maximumVoltageRms, maximumVoltagePeak, frequency, OpenMagnetics::WiringTechnology::WOUND);
        OpenMagnetics::DimensionWithTolerance dimensionWithTolerance;
        dimensionWithTolerance.set_nominal(1);
        inputs.get_mutable_design_requirements().set_turns_ratios({dimensionWithTolerance});
        inputs.get_mutable_design_requirements().set_isolation_sides(std::vector<OpenMagnetics::IsolationSide>{OpenMagnetics::IsolationSide::PRIMARY, OpenMagnetics::IsolationSide::SECONDARY});

        OpenMagnetics::CoilAdviser coilAdviser;
        auto withstandVoltageForWires = coilAdviser.get_solid_insulation_requirements_for_wires(inputs, {0, 1}, 1);
        CHECK_EQUAL(3UL, withstandVoltageForWires.size());
        CHECK_EQUAL(2UL, withstandVoltageForWires[0].size());

        CHECK(withstandVoltageForWires[0][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][1].get_minimum_grade());

        CHECK(withstandVoltageForWires[1][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[1][1].get_minimum_breakdown_voltage() == 8000);
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers().value() == 3);
        CHECK(withstandVoltageForWires[1][0].get_minimum_grade());
        CHECK(!withstandVoltageForWires[1][1].get_minimum_grade());

        CHECK(withstandVoltageForWires[2][0].get_minimum_breakdown_voltage() == 8000);
        CHECK(withstandVoltageForWires[2][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers().value() == 3);
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers().value() == 1);
        CHECK(!withstandVoltageForWires[2][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[2][1].get_minimum_grade());
    }

    TEST(Test_CoilAdviser_Wires_Withstand_Voltage_Same_Isolation_Sides_Basic_FIW) {

        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_623681};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto insulationType = OpenMagnetics::InsulationType::BASIC;
        OpenMagnetics::InputsWrapper inputs = OpenMagneticsTesting::get_quick_insulation_inputs(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards, maximumVoltageRms, maximumVoltagePeak, frequency, OpenMagnetics::WiringTechnology::WOUND);
        OpenMagnetics::DimensionWithTolerance dimensionWithTolerance;
        dimensionWithTolerance.set_nominal(1);
        inputs.get_mutable_design_requirements().set_turns_ratios({dimensionWithTolerance});
        inputs.get_mutable_design_requirements().set_isolation_sides(std::vector<OpenMagnetics::IsolationSide>{OpenMagnetics::IsolationSide::PRIMARY, OpenMagnetics::IsolationSide::PRIMARY});

        OpenMagnetics::CoilAdviser coilAdviser;
        auto withstandVoltageForWires = coilAdviser.get_solid_insulation_requirements_for_wires(inputs, {0, 1}, 1);
        CHECK_EQUAL(2UL, withstandVoltageForWires.size());
        CHECK_EQUAL(2UL, withstandVoltageForWires[0].size());
        CHECK(withstandVoltageForWires[0][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][0].get_minimum_grade());

        CHECK(withstandVoltageForWires[0][0].get_minimum_grade().value() == 1);
        CHECK(withstandVoltageForWires[1][0].get_minimum_breakdown_voltage() > 0);
        CHECK(withstandVoltageForWires[1][1].get_minimum_breakdown_voltage() > 0);
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[1][0].get_minimum_grade().value() == 3);
    }

    TEST(Test_CoilAdviser_Wires_Withstand_Voltage_Different_Isolation_Sides_Functional_FIW) {
        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_623681};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto insulationType = OpenMagnetics::InsulationType::FUNCTIONAL;
        OpenMagnetics::InputsWrapper inputs = OpenMagneticsTesting::get_quick_insulation_inputs(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards, maximumVoltageRms, maximumVoltagePeak, frequency, OpenMagnetics::WiringTechnology::WOUND);
        OpenMagnetics::DimensionWithTolerance dimensionWithTolerance;
        dimensionWithTolerance.set_nominal(1);
        inputs.get_mutable_design_requirements().set_turns_ratios({dimensionWithTolerance});
        inputs.get_mutable_design_requirements().set_isolation_sides(std::vector<OpenMagnetics::IsolationSide>{OpenMagnetics::IsolationSide::PRIMARY, OpenMagnetics::IsolationSide::SECONDARY});

        OpenMagnetics::CoilAdviser coilAdviser;
        auto withstandVoltageForWires = coilAdviser.get_solid_insulation_requirements_for_wires(inputs, {0, 1}, 1);
        CHECK_EQUAL(1UL, withstandVoltageForWires.size());
        CHECK_EQUAL(2UL, withstandVoltageForWires[0].size());

        CHECK(withstandVoltageForWires[0][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][1].get_minimum_grade());
    }

    TEST(Test_CoilAdviser_Wires_Withstand_Voltage_Different_Isolation_Sides_Basic_FIW) {
        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_623681};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto insulationType = OpenMagnetics::InsulationType::BASIC;
        OpenMagnetics::InputsWrapper inputs = OpenMagneticsTesting::get_quick_insulation_inputs(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards, maximumVoltageRms, maximumVoltagePeak, frequency, OpenMagnetics::WiringTechnology::WOUND);
        OpenMagnetics::DimensionWithTolerance dimensionWithTolerance;
        dimensionWithTolerance.set_nominal(1);
        inputs.get_mutable_design_requirements().set_turns_ratios({dimensionWithTolerance});
        inputs.get_mutable_design_requirements().set_isolation_sides(std::vector<OpenMagnetics::IsolationSide>{OpenMagnetics::IsolationSide::PRIMARY, OpenMagnetics::IsolationSide::SECONDARY});

        OpenMagnetics::CoilAdviser coilAdviser;
        auto withstandVoltageForWires = coilAdviser.get_solid_insulation_requirements_for_wires(inputs, {0, 1}, 1);
        CHECK_EQUAL(3UL, withstandVoltageForWires.size());
        CHECK_EQUAL(2UL, withstandVoltageForWires[0].size());

        CHECK(withstandVoltageForWires[0][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][1].get_minimum_grade());

        CHECK(withstandVoltageForWires[1][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[1][1].get_minimum_breakdown_voltage() == 2500);
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[1][1].get_minimum_grade());
        CHECK(withstandVoltageForWires[1][1].get_minimum_grade().value() == 3);

        CHECK(withstandVoltageForWires[2][0].get_minimum_breakdown_voltage() == 2500);
        CHECK(withstandVoltageForWires[2][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[2][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[2][0].get_minimum_grade().value() == 3);
        CHECK(withstandVoltageForWires[2][1].get_minimum_grade());
    }

    TEST(Test_CoilAdviser_Wires_Withstand_Voltage_Different_Isolation_Sides_Supplementary_FIW) {
        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_623681};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto insulationType = OpenMagnetics::InsulationType::SUPPLEMENTARY;
        OpenMagnetics::InputsWrapper inputs = OpenMagneticsTesting::get_quick_insulation_inputs(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards, maximumVoltageRms, maximumVoltagePeak, frequency, OpenMagnetics::WiringTechnology::WOUND);
        OpenMagnetics::DimensionWithTolerance dimensionWithTolerance;
        dimensionWithTolerance.set_nominal(1);
        inputs.get_mutable_design_requirements().set_turns_ratios({dimensionWithTolerance});
        inputs.get_mutable_design_requirements().set_isolation_sides(std::vector<OpenMagnetics::IsolationSide>{OpenMagnetics::IsolationSide::PRIMARY, OpenMagnetics::IsolationSide::SECONDARY});

        OpenMagnetics::CoilAdviser coilAdviser;
        auto withstandVoltageForWires = coilAdviser.get_solid_insulation_requirements_for_wires(inputs, {0, 1}, 1);
        CHECK_EQUAL(3UL, withstandVoltageForWires.size());
        CHECK_EQUAL(2UL, withstandVoltageForWires[0].size());

        CHECK(withstandVoltageForWires[0][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][1].get_minimum_grade());

        CHECK(withstandVoltageForWires[1][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[1][1].get_minimum_breakdown_voltage() == 2500);
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[1][1].get_minimum_grade());
        CHECK(withstandVoltageForWires[1][1].get_minimum_grade().value() == 3);

        CHECK(withstandVoltageForWires[2][0].get_minimum_breakdown_voltage() == 2500);
        CHECK(withstandVoltageForWires[2][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[2][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[2][0].get_minimum_grade().value() == 3);
        CHECK(withstandVoltageForWires[2][1].get_minimum_grade());
    }

    TEST(Test_CoilAdviser_Wires_Withstand_Voltage_Different_Isolation_Sides_Reinforced_FIW) {
        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_623681};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto insulationType = OpenMagnetics::InsulationType::REINFORCED;
        OpenMagnetics::InputsWrapper inputs = OpenMagneticsTesting::get_quick_insulation_inputs(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards, maximumVoltageRms, maximumVoltagePeak, frequency, OpenMagnetics::WiringTechnology::WOUND);
        OpenMagnetics::DimensionWithTolerance dimensionWithTolerance;
        dimensionWithTolerance.set_nominal(1);
        inputs.get_mutable_design_requirements().set_turns_ratios({dimensionWithTolerance});
        inputs.get_mutable_design_requirements().set_isolation_sides(std::vector<OpenMagnetics::IsolationSide>{OpenMagnetics::IsolationSide::PRIMARY, OpenMagnetics::IsolationSide::SECONDARY});

        OpenMagnetics::CoilAdviser coilAdviser;
        auto withstandVoltageForWires = coilAdviser.get_solid_insulation_requirements_for_wires(inputs, {0, 1}, 1);
        CHECK_EQUAL(3UL, withstandVoltageForWires.size());
        CHECK_EQUAL(2UL, withstandVoltageForWires[0].size());

        CHECK(withstandVoltageForWires[0][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][1].get_minimum_grade()); 

        CHECK(withstandVoltageForWires[1][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[1][1].get_minimum_breakdown_voltage() == 5000);
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers().value() == 3);
        CHECK(withstandVoltageForWires[1][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[1][1].get_minimum_grade());
        CHECK(withstandVoltageForWires[1][1].get_minimum_grade().value() == 3);

        CHECK(withstandVoltageForWires[2][0].get_minimum_breakdown_voltage() == 5000);
        CHECK(withstandVoltageForWires[2][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers().value() == 3);
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[2][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[2][0].get_minimum_grade().value() == 3);
        CHECK(withstandVoltageForWires[2][1].get_minimum_grade());
    }

    TEST(Test_CoilAdviser_Wires_Withstand_Voltage_Different_Isolation_Sides_Double_FIW) {
        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_623681};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto insulationType = OpenMagnetics::InsulationType::DOUBLE;
        OpenMagnetics::InputsWrapper inputs = OpenMagneticsTesting::get_quick_insulation_inputs(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards, maximumVoltageRms, maximumVoltagePeak, frequency, OpenMagnetics::WiringTechnology::WOUND);
        OpenMagnetics::DimensionWithTolerance dimensionWithTolerance;
        dimensionWithTolerance.set_nominal(1);
        inputs.get_mutable_design_requirements().set_turns_ratios({dimensionWithTolerance});
        inputs.get_mutable_design_requirements().set_isolation_sides(std::vector<OpenMagnetics::IsolationSide>{OpenMagnetics::IsolationSide::PRIMARY, OpenMagnetics::IsolationSide::SECONDARY});

        OpenMagnetics::CoilAdviser coilAdviser;
        auto withstandVoltageForWires = coilAdviser.get_solid_insulation_requirements_for_wires(inputs, {0, 1}, 1);
        CHECK_EQUAL(6UL, withstandVoltageForWires.size());
        CHECK_EQUAL(2UL, withstandVoltageForWires[0].size());

        CHECK(withstandVoltageForWires[0][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[0][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[0][1].get_minimum_grade());

        CHECK(withstandVoltageForWires[1][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[1][1].get_minimum_breakdown_voltage() == 5000);
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[1][1].get_minimum_number_layers().value() == 3);
        CHECK(withstandVoltageForWires[1][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[1][1].get_minimum_grade());
        CHECK(withstandVoltageForWires[1][1].get_minimum_grade().value() == 3);

        CHECK(withstandVoltageForWires[2][0].get_minimum_breakdown_voltage() == 5000);
        CHECK(withstandVoltageForWires[2][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][0].get_minimum_number_layers().value() == 3);
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[2][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[2][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[2][0].get_minimum_grade().value() == 3);
        CHECK(withstandVoltageForWires[2][1].get_minimum_grade());

        CHECK(withstandVoltageForWires[3][0].get_minimum_breakdown_voltage() == 2500);
        CHECK(withstandVoltageForWires[3][1].get_minimum_breakdown_voltage() == 2500);
        CHECK(withstandVoltageForWires[3][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[3][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[3][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[3][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[3][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[3][0].get_minimum_grade().value() == 3);
        CHECK(withstandVoltageForWires[3][1].get_minimum_grade());
        CHECK(withstandVoltageForWires[3][1].get_minimum_grade().value() == 3);

        CHECK(withstandVoltageForWires[4][0].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[4][1].get_minimum_breakdown_voltage() == 2500);
        CHECK(withstandVoltageForWires[4][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[4][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[4][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[4][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[4][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[4][1].get_minimum_grade());
        CHECK(withstandVoltageForWires[4][1].get_minimum_grade().value() == 3);

        CHECK(withstandVoltageForWires[5][0].get_minimum_breakdown_voltage() == 2500);
        CHECK(withstandVoltageForWires[5][1].get_minimum_breakdown_voltage() == 0);
        CHECK(withstandVoltageForWires[5][0].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[5][0].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[5][1].get_minimum_number_layers());
        CHECK(withstandVoltageForWires[5][1].get_minimum_number_layers().value() == 1);
        CHECK(withstandVoltageForWires[5][0].get_minimum_grade());
        CHECK(withstandVoltageForWires[5][0].get_minimum_grade().value() == 3);
        CHECK(withstandVoltageForWires[5][1].get_minimum_grade());
    }
}

SUITE(CoilAdviser) {
    auto settings = OpenMagnetics::Settings::GetInstance();

    TEST(Test_CoilAdviser_Insulation_No_Margin) {
        settings->reset();
        auto gapping = OpenMagneticsTesting::get_ground_gap(0.003);
        std::vector<double> turnsRatios;
        int64_t numberStacks = 1;


        double magnetizingInductance = 10e-6;
        double temperature = 25;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double dutyCycle = 0.5;
        double dcCurrent = 0;

        std::vector<int64_t> numberTurns = {82, 5};
        for (size_t windingIndex = 1; windingIndex < numberTurns.size(); ++windingIndex) {
            turnsRatios.push_back(double(numberTurns[0]) / numberTurns[windingIndex]);
        }
        double frequency = 175590;
        double peakToPeak = 20;

        auto magnetic = OpenMagneticsTesting::get_quick_magnetic("ETD 59", gapping, numberTurns, numberStacks, "3C91");
        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        OpenMagnetics::DimensionWithTolerance altitude;
        OpenMagnetics::DimensionWithTolerance mainSupplyVoltage;
        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_606641, OpenMagnetics::InsulationStandards::IEC_623681};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto cti = OpenMagnetics::Cti::GROUP_I;
        auto overvoltageCategory = OpenMagnetics::OvervoltageCategory::OVC_IV;
        auto insulationType = OpenMagnetics::InsulationType::BASIC;
        auto pollutionDegree = OpenMagnetics::PollutionDegree::P1;
        auto insulationRequirements = OpenMagneticsTesting::get_quick_insulation_requirements(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards);
        inputs.get_mutable_design_requirements().set_insulation(insulationRequirements);

        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        auto settings = OpenMagnetics::Settings::GetInstance();
        settings->set_coil_allow_margin_tape(false);
        settings->set_coil_allow_insulated_wire(true);
        settings->set_coil_try_rewind(false);
        settings->set_coil_adviser_maximum_number_wires(1000);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 1);


        CHECK(masMagneticsWithCoil.size() > 0);

        int currentIndex = 0;
        for (auto& masMagneticWithCoil : masMagneticsWithCoil) {
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto bobbin = masMagneticWithCoil.get_mutable_magnetic().get_bobbin();
            auto aux = bobbin.get_winding_window_dimensions();
            auto bobbinWindingWindowHeight = aux[1];

            auto standardCoordinator = OpenMagnetics::InsulationCoordinator();

            auto creepageDistance = standardCoordinator.calculate_creepage_distance(inputs);
            auto clearance = standardCoordinator.calculate_clearance(inputs);

            auto primarySectionHeight = masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil().get_sections_description().value()[0].get_dimensions()[1];

            int64_t numberMaximumLayers = 0;
            int64_t maximumGrade = 0;
            for (auto wire : masMagneticWithCoil.get_mutable_magnetic().get_wires()) {

                OpenMagnetics::InsulationWireCoating wireCoating;
                if (wire.get_type() == OpenMagnetics::WireType::LITZ) {
                    auto strand = wire.resolve_strand();
                    wireCoating = OpenMagnetics::WireWrapper::resolve_coating(strand).value();
                }
                else {
                    wireCoating = wire.resolve_coating().value();
                }
                if (wireCoating.get_number_layers()) {
                    numberMaximumLayers = std::max(numberMaximumLayers, wireCoating.get_number_layers().value());
                }
                else if (wireCoating.get_grade()) {
                    maximumGrade = std::max(maximumGrade, wireCoating.get_grade().value());
                }
                else {
                    throw std::invalid_argument("Wire must have either layers or grade: " + wire.get_name().value());
                }
            }

            CHECK(numberMaximumLayers >= 3 || maximumGrade >= 3);
            CHECK((bobbinWindingWindowHeight - primarySectionHeight) < std::max(creepageDistance, clearance));

            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser_No_Margin_" + std::to_string(currentIndex) + ".svg";
            currentIndex++;
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            // painter.paint_coil_sections(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
        settings->reset();
    }

    TEST(Test_CoilAdviser_Insulation_Margin) {
        auto gapping = OpenMagneticsTesting::get_ground_gap(0.003);
        std::vector<double> turnsRatios;
        int64_t numberStacks = 1;


        double magnetizingInductance = 10e-6;
        double temperature = 25;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double dutyCycle = 0.5;
        double dcCurrent = 0;

        std::vector<int64_t> numberTurns = {82, 55};
        std::vector<int64_t> numberParallels = {1, 1};
        for (size_t windingIndex = 1; windingIndex < numberTurns.size(); ++windingIndex) {
            turnsRatios.push_back(double(numberTurns[0]) / numberTurns[windingIndex]);
        }
        double frequency = 75590;
        double peakToPeak = 13;

        auto magnetic = OpenMagneticsTesting::get_quick_magnetic("ETD 54", gapping, numberTurns, numberStacks, "3C91");
        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        OpenMagnetics::DimensionWithTolerance altitude;
        OpenMagnetics::DimensionWithTolerance mainSupplyVoltage;
        auto standards = std::vector<OpenMagnetics::InsulationStandards>{OpenMagnetics::InsulationStandards::IEC_606641, OpenMagnetics::InsulationStandards::IEC_623681};
        altitude.set_maximum(2000);
        mainSupplyVoltage.set_nominal(400);
        auto cti = OpenMagnetics::Cti::GROUP_I;
        auto overvoltageCategory = OpenMagnetics::OvervoltageCategory::OVC_IV;
        auto insulationType = OpenMagnetics::InsulationType::BASIC;
        auto pollutionDegree = OpenMagnetics::PollutionDegree::P1;
        auto insulationRequirements = OpenMagneticsTesting::get_quick_insulation_requirements(altitude, cti, insulationType, mainSupplyVoltage, overvoltageCategory, pollutionDegree, standards);
        inputs.get_mutable_design_requirements().set_insulation(insulationRequirements);

        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        auto settings = OpenMagnetics::Settings::GetInstance();
        settings->set_coil_allow_margin_tape(true);
        settings->set_coil_allow_insulated_wire(false);
        settings->set_coil_try_rewind(false);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 1);


        CHECK(masMagneticsWithCoil.size() > 0);

        int currentIndex = 0;
        for (auto& masMagneticWithCoil : masMagneticsWithCoil) {
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto bobbin = masMagneticWithCoil.get_mutable_magnetic().get_bobbin();
            auto aux = bobbin.get_winding_window_dimensions();
            auto bobbinWindingWindowHeight = aux[1];

            auto standardCoordinator = OpenMagnetics::InsulationCoordinator();

            auto creepageDistance = standardCoordinator.calculate_creepage_distance(inputs);
            auto clearance = standardCoordinator.calculate_clearance(inputs);

            auto primarySectionHeight = masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil().get_sections_description().value()[0].get_dimensions()[1];

            int64_t numberMaximumLayers = 0;
            int64_t maximumGrade = 0;
            for (auto wire : masMagneticWithCoil.get_mutable_magnetic().get_wires()) {

                auto wireCoating = wire.resolve_coating().value();
                if (wireCoating.get_number_layers()) {
                    numberMaximumLayers = std::max(numberMaximumLayers, wireCoating.get_number_layers().value());
                }
                else if (wireCoating.get_grade()) {
                    maximumGrade = std::max(maximumGrade, wireCoating.get_grade().value());
                }
            }

            CHECK(numberMaximumLayers < 3);
            CHECK((bobbinWindingWindowHeight - primarySectionHeight) >= std::max(creepageDistance, clearance));

            CHECK_CLOSE(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil().get_sections_description().value()[0].get_margin().value()[0], std::max(creepageDistance, clearance) / 2, 0.00001);
            CHECK_CLOSE(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil().get_sections_description().value()[0].get_margin().value()[1], std::max(creepageDistance, clearance) / 2, 0.00001);

            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser_Margin_" + std::to_string(currentIndex) + ".svg";
            currentIndex++;
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            // painter.paint_coil_sections(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
        settings->reset();
    }

    TEST(Test_CoilAdviser_Random_Base) {
        auto settings = OpenMagnetics::Settings::GetInstance();
        settings->reset();
        srand (time(NULL));

        int count = 10;
        while (count > 0) {
            std::vector<double> turnsRatios;
            int64_t numberStacks = 1;

            std::vector<int64_t> numberTurns;
            std::vector<int64_t> numberParallels;
            std::vector<OpenMagnetics::IsolationSide> isolationSides;
            int64_t numberPhysicalTurns = std::numeric_limits<int64_t>::max();
            // for (size_t windingIndex = 0; windingIndex < std::rand() % 2 + 1UL; ++windingIndex)
            for (size_t windingIndex = 0; windingIndex < std::rand() % 4 + 1UL; ++windingIndex)
            {
                int64_t numberPhysicalTurnsThisWinding = std::rand() % 300 + 1UL;
                int64_t numberTurnsThisWinding = std::rand() % 100 + 1L;
                numberTurns.push_back(numberTurnsThisWinding);
                isolationSides.push_back(OpenMagnetics::get_isolation_side_from_index(static_cast<size_t>(std::rand() % 10 + 1L)));
                int64_t numberParallelsThisWinding = std::max(1.0, std::ceil(double(numberPhysicalTurnsThisWinding) / numberTurnsThisWinding));
                numberParallels.push_back(numberParallelsThisWinding);
                numberPhysicalTurns = std::min(numberPhysicalTurns, numberTurnsThisWinding * numberParallelsThisWinding);
            }
            for (size_t windingIndex = 1; windingIndex < numberTurns.size(); ++windingIndex) {
                turnsRatios.push_back(double(numberTurns[0]) / numberTurns[windingIndex]);
            }

            double frequency = std::rand() % 1000000 + 10000L;
            double magnetizingInductance = double(std::rand() % 10000) *  1e-6;
            double temperature = 25;
            OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
            double peakToPeak = std::rand() % 30 + 1L;
            double dutyCycle = double(std::rand() % 99 + 1L) / 100;
            double dcCurrent = 0;
            if (numberTurns.size() > 1) {
                dcCurrent = std::rand() % 30;
            }
            settings->set_use_toroidal_cores(false);
            auto coreShapeNames = OpenMagnetics::get_shape_names();
            std::string coreShapeName;
            OpenMagnetics::MagneticWrapper magnetic;

            double gapLength = 1;
            double columnHeight = 1;
            int numberGaps = 1;
            int gappingTypeIndex = std::rand() % 4;
            OpenMagnetics::GappingType gappingType = magic_enum::enum_cast<OpenMagnetics::GappingType>(gappingTypeIndex).value();
            if (gappingType == OpenMagnetics::GappingType::DISTRIBUTED) {
                numberGaps = std::rand() % 3;
                numberGaps *= 2;
                numberGaps += 3;
            }

            while (true) {
                coreShapeName = coreShapeNames[rand() % coreShapeNames.size()];
                auto shape = OpenMagnetics::find_core_shape_by_name(coreShapeName);
                if (shape.get_family() == OpenMagnetics::CoreShapeFamily::PQI || 
                    shape.get_family() == OpenMagnetics::CoreShapeFamily::UI || 
                    shape.get_family() == OpenMagnetics::CoreShapeFamily::EI) {
                    continue;
                }

                do {
                    auto shape = OpenMagnetics::find_core_shape_by_name(coreShapeName);
                    auto corePiece = OpenMagnetics::CorePiece::factory(shape);
                    gapLength = double(rand() % 10000 + 1.0) / 1000000;
                    columnHeight = corePiece->get_columns()[0].get_height();
                }
                while (columnHeight < (gapLength * numberGaps));

                std::vector<OpenMagnetics::CoreGap> gapping;
                switch (gappingType) {
                    case OpenMagnetics::GappingType::GROUND:
                        gapping = OpenMagneticsTesting::get_ground_gap(gapLength);
                        break;
                    case OpenMagnetics::GappingType::SPACER:
                        gapping = OpenMagneticsTesting::get_spacer_gap(gapLength);
                        break;
                    case OpenMagnetics::GappingType::RESIDUAL:
                        gapping = OpenMagneticsTesting::get_residual_gap();
                        break;
                    case OpenMagnetics::GappingType::DISTRIBUTED:
                        gapping = OpenMagneticsTesting::get_distributed_gap(gapLength, numberGaps);
                        break;
                }
                
                magnetic = OpenMagneticsTesting::get_quick_magnetic(coreShapeName, gapping, numberTurns, numberStacks, "3C91");
                break;
            }

            int turnsAlignmentIndex = std::rand() % 4;
            int windingOrientationIndex = std::rand() % 2;
            int layersOrientationIndex = std::rand() % 2;
            OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(turnsAlignmentIndex).value();
            OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(windingOrientationIndex).value();
            OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(layersOrientationIndex).value();


            magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
            magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
            magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

            auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                                  magnetizingInductance,
                                                                                                  temperature,
                                                                                                  waveShape,
                                                                                                  peakToPeak,
                                                                                                  dutyCycle,
                                                                                                  dcCurrent,
                                                                                                  turnsRatios);

            inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
            OpenMagnetics::MasWrapper masMagnetic;
            inputs.process_waveforms();
            masMagnetic.set_inputs(inputs);
            masMagnetic.set_magnetic(magnetic);

            OpenMagnetics::CoilAdviser coilAdviser;
            try {
                auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);
                if (masMagneticsWithCoil.size() > 0) {
                    auto masMagneticWithCoil = masMagneticsWithCoil[0];

                    OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());

                    if (!masMagneticWithCoil.get_magnetic().get_coil().get_turns_description()) {
                        continue;
                    }
                    bool result = OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
                    if (!result) {
                        throw std::invalid_argument("Just to trigger prints and return");
                    }
                    count--;
                }
            }
            catch(...) {
                for (size_t windingIndex = 0; windingIndex < numberTurns.size(); ++windingIndex) {
                    std::cout << "numberTurns: " << numberTurns[windingIndex] << std::endl;
                }
                for (size_t windingIndex = 0; windingIndex < numberParallels.size(); ++windingIndex) {
                    std::cout << "numberParallels: " << numberParallels[windingIndex] << std::endl;
                }
                for (size_t windingIndex = 0; windingIndex < numberTurns.size(); ++windingIndex) {
                    std::cout << "isolationSides: " << magic_enum::enum_name(isolationSides[windingIndex]) << std::endl;
                }
                std::cout << "frequency: " << frequency << std::endl;
                std::cout << "peakToPeak: " << peakToPeak << std::endl;
                std::cout << "magnetizingInductance: " << magnetizingInductance << std::endl;
                std::cout << "dutyCycle: " << dutyCycle << std::endl;
                std::cout << "dcCurrent: " << dcCurrent << std::endl;
                std::cout << "coreShapeName: " << coreShapeName << std::endl;
                std::cout << "gappingTypeIndex: " << gappingTypeIndex << std::endl;
                std::cout << "gapLength: " << gapLength << std::endl;
                std::cout << "numberGaps: " << numberGaps << std::endl;
                std::cout << "magnetic.get_mutable_core().get_shape_family(): " << magic_enum::enum_name(magnetic.get_mutable_core().get_shape_family()) << std::endl;
                std::cout << "turnsAlignmentIndex: " << turnsAlignmentIndex << std::endl;
                std::cout << "windingOrientationIndex: " << windingOrientationIndex << std::endl;
                std::cout << "layersOrientationIndex: " << layersOrientationIndex << std::endl;
                CHECK(false);
                return;
            }
        }
        settings->reset();
    }

    TEST(Test_CoilAdviser_Random_0) {
        auto gapping = OpenMagneticsTesting::get_ground_gap(0.003);
        std::vector<double> turnsRatios;
        int64_t numberStacks = 1;


        double magnetizingInductance = 10e-6;
        double temperature = 25;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double dutyCycle = 0.5;
        double dcCurrent = 0;

        std::vector<int64_t> numberTurns = {82, 5};
        std::vector<int64_t> numberParallels = {1, 1};
        for (size_t windingIndex = 1; windingIndex < numberTurns.size(); ++windingIndex) {
            turnsRatios.push_back(double(numberTurns[0]) / numberTurns[windingIndex]);
        }
        double frequency = 675590;
        double peakToPeak = 26;

        auto magnetic = OpenMagneticsTesting::get_quick_magnetic("EP 20", gapping, numberTurns, numberStacks, "3C91");
        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
        }
    }

    TEST(Test_CoilAdviser_Random_1) {
        std::vector<double> turnsRatios;
        int64_t numberStacks = 1;


        double magnetizingInductance = 10e-6;
        double temperature = 25;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double dutyCycle = 0.5;
        double dcCurrent = 0;

        std::vector<int64_t> numberTurns = {16, 34};
        std::vector<int64_t> numberParallels = {1, 1};
        for (size_t windingIndex = 1; windingIndex < numberTurns.size(); ++windingIndex) {
            turnsRatios.push_back(double(numberTurns[0]) / numberTurns[windingIndex]);
        }
        double frequency = 811022;
        double peakToPeak = 1;

        OpenMagnetics::MagneticWrapper magnetic;
        std::string coreShapeName  = "P 7.35X3.6";
        double gapLength = 1;
        double columnHeight = 1;
        do {
            auto shape = OpenMagnetics::find_core_shape_by_name(coreShapeName);
            auto corePiece = OpenMagnetics::CorePiece::factory(shape);
            gapLength = double(rand() % 10000 + 1.0) / 1000000;
            columnHeight = corePiece->get_columns()[0].get_height();
        }
        while (columnHeight < gapLength);
        auto gapping = OpenMagneticsTesting::get_ground_gap(gapLength);
        magnetic = OpenMagneticsTesting::get_quick_magnetic(coreShapeName, gapping, numberTurns, numberStacks, "3C91");
        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser" + std::to_string(std::rand()) + ".svg";
            outFile.append(filename);
            // OpenMagnetics::Painter painter(outFile);

            // painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            // painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            // painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            // painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_2) {
        srand (time(NULL));

        std::vector<double> turnsRatios;
        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {24, 78, 76};
        std::vector<int64_t> numberParallels = {1, 1, 1};

        for (size_t windingIndex = 1; windingIndex < numberTurns.size(); ++windingIndex) {
            turnsRatios.push_back(double(numberTurns[0]) / numberTurns[windingIndex]);
        }

        double frequency = 507026;
        double magnetizingInductance = 10e-6;
        double temperature = 25;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double peakToPeak = 10;
        double dutyCycle = 0.5;
        double dcCurrent = 0;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        auto gapping = OpenMagneticsTesting::get_residual_gap();
        magnetic = OpenMagneticsTesting::get_quick_magnetic("ETD 19", gapping, numberTurns, numberStacks, "3C91");


        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser" + std::to_string(std::rand()) + ".svg";
            outFile.append(filename);
            // OpenMagnetics::Painter painter(outFile);

            // painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            // painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            // painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            // painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_3) {
        srand (time(NULL));

        std::vector<double> turnsRatios;
        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {92, 70, 47};
        std::vector<int64_t> numberParallels = {1, 1, 1};

        for (size_t windingIndex = 1; windingIndex < numberTurns.size(); ++windingIndex) {
            turnsRatios.push_back(double(numberTurns[0]) / numberTurns[windingIndex]);
        }

        double frequency = 313655;
        double magnetizingInductance = 0.002571;
        double temperature = 25;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double peakToPeak = 18;
        double dutyCycle = 0.88;
        double dcCurrent = 6;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(3).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(1).value();
        auto gapping = OpenMagneticsTesting::get_ground_gap(0.00756);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("U 81/39/20", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser" + std::to_string(std::rand()) + ".svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_4) {
        srand (time(NULL));
        auto settings = OpenMagnetics::Settings::GetInstance();
        settings->set_coil_wind_even_if_not_fit(false);

        std::vector<double> turnsRatios;
        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {28};
        std::vector<int64_t> numberParallels = {76};
        std::vector<OpenMagnetics::IsolationSide> isolationSides = {OpenMagnetics::IsolationSide::OCTONARY, OpenMagnetics::IsolationSide::QUINARY};

        double frequency = 837961;
        double magnetizingInductance = 0.007191;
        double temperature = 25;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double peakToPeak = 3;
        double dutyCycle = 0.18;
        double dcCurrent = 28;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(2).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();
        auto gapping = OpenMagneticsTesting::get_distributed_gap(0.004025, 3);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("UR 39/35/15", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser" + std::to_string(std::rand()) + ".svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
        settings->reset();
    }

    TEST(Test_CoilAdviser_Random_5) {
        srand (time(NULL));

        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {15, 36, 87, 60};
        std::vector<int64_t> numberParallels = {1, 1, 1, 1};
        std::vector<double> turnsRatios = {15. / 36, 15. / 87, 15. / 60};
        std::vector<OpenMagnetics::IsolationSide> isolationSides = {OpenMagnetics::IsolationSide::DENARY,
                                                                    OpenMagnetics::IsolationSide::NONARY,
                                                                    OpenMagnetics::IsolationSide::QUATERNARY,
                                                                    OpenMagnetics::IsolationSide::OCTONARY};

        double frequency = 592535;
        double magnetizingInductance = 0.002575;
        double temperature = 23;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double peakToPeak = 3;
        double dutyCycle = 0.61;
        double dcCurrent = 5;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(3).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(1).value();
        auto gapping = OpenMagneticsTesting::get_distributed_gap(0.003175, 1);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("E 114/46/26", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser" + std::to_string(std::rand()) + ".svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_6) {
        srand (time(NULL));

        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {11, 82};
        std::vector<int64_t> numberParallels = {3, 3};
        std::vector<double> turnsRatios = {11. / 82};
        std::vector<OpenMagnetics::IsolationSide> isolationSides = {OpenMagnetics::IsolationSide::DENARY,
                                                                    OpenMagnetics::IsolationSide::NONARY};

        double frequency = 617645;
        double magnetizingInductance = 0.009088;
        double temperature = 23;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double peakToPeak = 26;
        double dutyCycle = 0.38;
        double dcCurrent = 16;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(1).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(1).value();
        auto gapping = OpenMagneticsTesting::get_ground_gap(0.001227);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("E 72/28/19", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser" + std::to_string(std::rand()) + ".svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_7) {
        srand (time(NULL));

        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {60, 18, 10};
        std::vector<int64_t> numberParallels = {1, 3, 3};
        std::vector<double> turnsRatios = {60. / 18, 60. / 10};
        std::vector<OpenMagnetics::IsolationSide> isolationSides = {OpenMagnetics::IsolationSide::SECONDARY,
                                                                    OpenMagnetics::IsolationSide::NONARY,
                                                                    OpenMagnetics::IsolationSide::TERTIARY};

        double frequency = 95989;
        double magnetizingInductance = 0.009266;
        double temperature = 23;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double peakToPeak = 9;
        double dutyCycle = 0.57;
        double dcCurrent = 1;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(1).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(1).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();
        auto gapping = OpenMagneticsTesting::get_ground_gap(0.007023);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("E 35", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser" + std::to_string(std::rand()) + ".svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_8) {
        srand (time(NULL));

        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {36, 3, 8};
        std::vector<int64_t> numberParallels = {2, 1, 2};
        std::vector<double> turnsRatios = {36. / 3, 36. / 8};
        std::vector<OpenMagnetics::IsolationSide> isolationSides = {OpenMagnetics::IsolationSide::UNDENARY,
                                                                    OpenMagnetics::IsolationSide::OCTONARY,
                                                                    OpenMagnetics::IsolationSide::DENARY};

        double frequency = 632226;
        double magnetizingInductance = 0.001529;
        double temperature = 23;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double peakToPeak = 3;
        double dutyCycle = 0.68;
        double dcCurrent = 7;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(0).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();
        auto gapping = OpenMagneticsTesting::get_ground_gap(0.009828);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("E 80/38/20", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser" + std::to_string(std::rand()) + ".svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_9) {
        srand (time(NULL));

        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {36, 55, 96};
        std::vector<int64_t> numberParallels = {2, 1, 2};
        std::vector<double> turnsRatios = {36. / 55, 36. / 96};
        std::vector<OpenMagnetics::IsolationSide> isolationSides = {OpenMagnetics::IsolationSide::SENARY,
                                                                    OpenMagnetics::IsolationSide::NONARY,
                                                                    OpenMagnetics::IsolationSide::NONARY};

        double frequency = 632226;
        double magnetizingInductance = 0.001529;
        double temperature = 23;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double peakToPeak = 3;
        double dutyCycle = 0.68;
        double dcCurrent = 7;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(2).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();
        auto gapping = OpenMagneticsTesting::get_ground_gap(0.009828);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("U 79/129/31", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser" + std::to_string(std::rand()) + ".svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_10) {
        srand (time(NULL));

        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {49, 80, 78, 1};
        std::vector<int64_t> numberParallels = {3, 1, 1, 2};
        std::vector<double> turnsRatios = {49. / 80, 49. / 78, 49};
        std::vector<OpenMagnetics::IsolationSide> isolationSides = {OpenMagnetics::IsolationSide::TERTIARY,
                                                                    OpenMagnetics::IsolationSide::SENARY,
                                                                    OpenMagnetics::IsolationSide::DENARY,
                                                                    OpenMagnetics::IsolationSide::NONARY};

        double frequency = 660462;
        double magnetizingInductance = 0.006606;
        double temperature = 23;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double peakToPeak = 24;
        double dutyCycle = 0.28;
        double dcCurrent = 2;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(2).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(1).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(1).value();
        auto gapping = OpenMagneticsTesting::get_distributed_gap(0.002048, 3);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("E 50/15", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            // OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            // OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser" + std::to_string(std::rand()) + ".svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_11) {
        srand (time(NULL));

        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {72};
        std::vector<int64_t> numberParallels = {4};
        std::vector<double> turnsRatios = {};
        std::vector<OpenMagnetics::IsolationSide> isolationSides = {OpenMagnetics::IsolationSide::NONARY};

        double frequency = 821021;
        double magnetizingInductance = 8.6e-05;
        double temperature = 23;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double peakToPeak = 19;
        double dutyCycle = 0.14;
        double dcCurrent = 0;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(3).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(1).value();
        auto gapping = OpenMagneticsTesting::get_distributed_gap(0.001424, 1);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("U 15/11/6", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            // OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser" + std::to_string(std::rand()) + ".svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_12) {
        srand (time(NULL));

        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {53, 100, 80, 98};
        std::vector<int64_t> numberParallels = {5, 2, 3, 2};
        std::vector<double> turnsRatios = {53.0 / 100, 53.0 / 80, 53.0 / 98};
        std::vector<OpenMagnetics::IsolationSide> isolationSides = {OpenMagnetics::IsolationSide::OCTONARY,
                                                                    OpenMagnetics::IsolationSide::SENARY,
                                                                    OpenMagnetics::IsolationSide::QUINARY,
                                                                    OpenMagnetics::IsolationSide::SENARY};


        double frequency = 460425;
        double magnetizingInductance = 0.005275;
        double temperature = 23;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        double peakToPeak = 28;
        double dutyCycle = 0.73;
        double dcCurrent = 5;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(0).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(1).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();

        auto gapping = OpenMagneticsTesting::get_spacer_gap(0.006456);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("U 81/39/20", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser_Random_12.svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_13) {
        srand (time(NULL));

        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {63};
        std::vector<int64_t> numberParallels = {3};
        std::vector<double> turnsRatios = {};
        std::vector<OpenMagnetics::IsolationSide> isolationSides = {OpenMagnetics::IsolationSide::NONARY};


        double frequency = 334200;
        double peakToPeak = 13;
        double magnetizingInductance = 0.008387;
        double dutyCycle = 0.33;
        double dcCurrent = 0;
        double temperature = 23;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(1).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(1).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(0).value();

        auto gapping = OpenMagneticsTesting::get_spacer_gap(0.002261);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("EQ 32/22/18", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser_Random_13.svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
    }

    TEST(Test_CoilAdviser_Random_14) {
        srand (time(NULL));

        int64_t numberStacks = 1;

        std::vector<int64_t> numberTurns = {73, 32, 1};
        std::vector<int64_t> numberParallels = {1, 10, 226};
        std::vector<double> turnsRatios = {32.0 / 73, 1.0 / 73};
        std::vector<OpenMagnetics::IsolationSide> isolationSides = {OpenMagnetics::IsolationSide::OCTONARY,
                                                                    OpenMagnetics::IsolationSide::DENARY,
                                                                    OpenMagnetics::IsolationSide::TERTIARY};


        double frequency = 53298;
        double peakToPeak = 13;
        double magnetizingInductance = 0.005401;
        double dutyCycle = 0.93;
        double dcCurrent = 8;
        double temperature = 23;
        OpenMagnetics::WaveformLabel waveShape = OpenMagnetics::WaveformLabel::SINUSOIDAL;
        settings->set_use_toroidal_cores(false);
        auto coreShapeNames = OpenMagnetics::get_shape_names();
        std::string coreShapeName;
        OpenMagnetics::MagneticWrapper magnetic;

        OpenMagnetics::CoilAlignment turnsAlignment = magic_enum::enum_cast<OpenMagnetics::CoilAlignment>(0).value();
        OpenMagnetics::WindingOrientation windingOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(1).value();
        OpenMagnetics::WindingOrientation layersOrientation = magic_enum::enum_cast<OpenMagnetics::WindingOrientation>(1).value();

        auto gapping = OpenMagneticsTesting::get_ground_gap(0.000503);
        magnetic = OpenMagneticsTesting::get_quick_magnetic("UR 35/27.5/13", gapping, numberTurns, numberStacks, "3C91");

        magnetic.get_mutable_coil().set_turns_alignment(turnsAlignment);
        magnetic.get_mutable_coil().set_winding_orientation(windingOrientation);
        magnetic.get_mutable_coil().set_layers_orientation(layersOrientation);

        auto inputs = OpenMagnetics::InputsWrapper::create_quick_operating_point_only_current(frequency,
                                                                                              magnetizingInductance,
                                                                                              temperature,
                                                                                              waveShape,
                                                                                              peakToPeak,
                                                                                              dutyCycle,
                                                                                              dcCurrent,
                                                                                              turnsRatios);

        inputs.get_mutable_design_requirements().set_isolation_sides(isolationSides);
        OpenMagnetics::MasWrapper masMagnetic;
        inputs.process_waveforms();
        masMagnetic.set_inputs(inputs);
        masMagnetic.set_magnetic(magnetic);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(masMagnetic, 2);

        if (masMagneticsWithCoil.size() > 0) {
            auto masMagneticWithCoil = masMagneticsWithCoil[0];
            OpenMagneticsTesting::check_wire_standards(masMagneticWithCoil.get_mutable_magnetic().get_mutable_coil());
            OpenMagneticsTesting::check_turns_description(masMagneticWithCoil.get_magnetic().get_coil());
            auto outputFilePath = std::filesystem::path{ __FILE__ }.parent_path().append("..").append("output");
            auto outFile = outputFilePath;
            std::string filename = "Test_CoilAdviser_Random_14.svg";
            outFile.append(filename);
            OpenMagnetics::Painter painter(outFile);

            painter.paint_core(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_bobbin(masMagneticWithCoil.get_mutable_magnetic());
            painter.paint_coil_turns(masMagneticWithCoil.get_mutable_magnetic());
            painter.export_svg();
        }
    }

    TEST(Test_SectionsAdviser_Web_0) {
        std::string patternString = "[0]";
        json patternJson = json::parse(patternString);
        std::vector<size_t> pattern; 
        for (auto& elem : patternJson) {
            pattern.push_back(elem);
        }
        int repetitions = 1;
        OpenMagnetics::MasWrapper mas(json::parse(R"({"inputs":{"designRequirements":{"magnetizingInductance":{"nominal":0.0001},"name":"My Design Requirements","turnsRatios":[]},"operatingPoints":[{"name":"Operating Point No. 1","conditions":{"ambientTemperature":42},"excitationsPerWinding":[{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"ancillaryLabel":null,"data":[-5,5,-5],"numberPeriods":null,"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular","acEffectiveFrequency":110746.40291779551,"effectiveFrequency":110746.40291779551,"peak":5,"rms":2.8874560332150576,"thd":0.12151487440704967},"harmonics":{"amplitudes":[1.1608769501236793e-14,4.05366124583194,1.787369544444173e-15,0.4511310569983995,9.749053004706756e-16,0.16293015292554872,4.036157626725542e-16,0.08352979924600704,3.4998295008010614e-16,0.0508569581336163,3.1489164048780735e-16,0.034320410449418075,3.142469873118059e-16,0.024811988673843106,2.3653352035940994e-16,0.018849001010678823,2.9306524147249266e-16,0.014866633059596499,1.796485796132569e-16,0.012077180559557785,1.6247782523152451e-16,0.010049063750920609,1.5324769149805092e-16,0.008529750975091871,1.0558579733068502e-16,0.007363501410705499,7.513269775674661e-17,0.006450045785294609,5.871414177162291e-17,0.005722473794997712,9.294731722001391e-17,0.005134763398167541,1.194820309200107e-16,0.004654430423785411,8.2422739080512e-17,0.004258029771397032,9.5067306351894e-17,0.0039283108282380024,1.7540347128474968e-16,0.0036523670873925395,9.623794010508822e-17,0.0034204021424253787,1.4083470894369491e-16,0.0032248884817922927,1.4749333016985644e-16,0.0030599828465501895,1.0448590642474364e-16,0.002921112944200383,7.575487373767413e-18,0.002804680975178716,7.419510610361002e-17,0.0027078483284668376,3.924741709073613e-17,0.0026283777262804953,2.2684279102637236e-17,0.0025645167846443107,8.997077625295079e-17,0.0025149120164513483,7.131074184849219e-17,0.0024785457043284276,9.354417496250849e-17,0.0024546904085875065,1.2488589642405877e-16,0.0024428775264784264],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]}},"voltage":{"waveform":{"ancillaryLabel":null,"data":[-50,50,50,-50,-50],"numberPeriods":null,"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular","acEffectiveFrequency":591485.536011839,"effectiveFrequency":591449.4202715514,"peak":50,"rms":50,"thd":0.48331514845248497},"harmonics":{"amplitudes":[0.78125,63.64919355013018,1.5625,21.18229569117569,1.5625,12.668415318245188,1.5625,9.004909382998164,1.5625,6.958128475647527,1.5625,5.646149502042871,1.5625,4.729755006746538,1.5625,4.050628933965765,1.5625,3.524943518639316,1.5625,3.104154363036517,1.5625,2.7581982345221827,1.5625,2.467457137437843,1.5625,2.2185795367095267,1.5625,2.0021587188071255,1.5625,1.8113717302085082,1.5625,1.6411450722498175,1.5625,1.487623666720196,1.5625,1.3478217691511587,1.5625,1.2193869682092893,1.5625,1.100436657601639,1.5625,0.9894422127774558,1.5625,0.8851453167661671,1.5625,0.7864964059364037,1.5625,0.6926086154544899,1.5625,0.60272275979863,1.5625,0.5161802771005264,1.5625,0.43240198459440116,1.5625,0.3508711083080249,1.5625,0.27111946896540395,1.5625,0.192715993963664,1.5625,0.11525692425384548,1.5625,0.03835722204524927],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]}}},{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"data":[-5,5,-5],"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular"}},"voltage":{"waveform":{"data":[-20.5,70.5,70.5,-20.5,-20.5],"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular"}}},{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"data":[-5,5,-5],"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular"}},"voltage":{"waveform":{"data":[-20.5,70.5,70.5,-20.5,-20.5],"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular"}}},{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"data":[-5,5,-5],"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular"}},"voltage":{"waveform":{"data":[-20.5,70.5,70.5,-20.5,-20.5],"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular"}}},{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"data":[-5,5,-5],"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular"}},"voltage":{"waveform":{"data":[-20.5,70.5,70.5,-20.5,-20.5],"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular"}}},{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"data":[-5,5,-5],"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular"}},"voltage":{"waveform":{"data":[-20.5,70.5,70.5,-20.5,-20.5],"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular"}}},{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"data":[-5,5,-5],"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular"}},"voltage":{"waveform":{"data":[-20.5,70.5,70.5,-20.5,-20.5],"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular"}}}]}]},"magnetic":{"coil":{"bobbin":"Dummy","functionalDescription":[{"connections":null,"isolationSide":"primary","name":"Primary","numberParallels":1,"numberTurns":1,"wire":"Dummy"}]},"core":{"distributorsInfo":null,"functionalDescription":{"coating":null,"gapping":[{"length":0.001,"type":"subtractive"},{"length":0.001,"type":"subtractive"},{"length":0.001,"type":"subtractive"},{"length":0.000005,"type":"residual"},{"length":0.000005,"type":"residual"}],"material":"3C98","numberStacks":1,"shape":{"aliases":[],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0414,"minimum":0.0396,"nominal":0.0405},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01525,"minimum":0.01505,"nominal":0.01515},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0286,"minimum":0.0274,"nominal":0.028},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01015,"minimum":0.00985,"nominal":0.01},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0376,"minimum":0.0364,"nominal":0.037},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0152,"minimum":0.0146,"nominal":0.0149},"G":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":0.028,"nominal":null}},"family":"pq","familySubtype":null,"magneticCircuit":"open","name":"PQ 40/30","type":"standard"},"type":"two-piece set"},"geometricalDescription":[{"coordinates":[0,0,0],"dimensions":null,"insulationMaterial":null,"machining":null,"material":"","rotation":[3.141592653589793,3.141592653589793,0],"shape":{"aliases":[],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0414,"minimum":0.0396,"nominal":0.0405},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01525,"minimum":0.01505,"nominal":0.01515},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0286,"minimum":0.0274,"nominal":0.028},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01015,"minimum":0.00985,"nominal":0.01},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0376,"minimum":0.0364,"nominal":0.037},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0152,"minimum":0.0146,"nominal":0.0149},"G":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":0.028,"nominal":null}},"family":"pq","familySubtype":null,"magneticCircuit":"open","name":"PQ 40/30","type":"standard"},"type":"half set"},{"coordinates":[0,0,0],"dimensions":null,"insulationMaterial":null,"machining":null,"material":"","rotation":[0,0,0],"shape":{"aliases":[],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0414,"minimum":0.0396,"nominal":0.0405},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01525,"minimum":0.01505,"nominal":0.01515},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0286,"minimum":0.0274,"nominal":0.028},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01015,"minimum":0.00985,"nominal":0.01},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0376,"minimum":0.0364,"nominal":0.037},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0152,"minimum":0.0146,"nominal":0.0149},"G":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":0.028,"nominal":null}},"family":"pq","familySubtype":null,"magneticCircuit":"open","name":"PQ 40/30","type":"standard"},"type":"half set"}],"manufacturerInfo":null,"name":"DummyCore","processedDescription":{"columns":[{"area":0.000175,"coordinates":[0,0,0],"depth":0.0149,"height":0.02,"minimumDepth":null,"minimumWidth":null,"shape":"round","type":"central","width":0.0149},{"area":0.000101,"coordinates":[0.020304,0,0],"depth":0.028,"height":0.02,"minimumDepth":null,"minimumWidth":0.001751,"shape":"irregular","type":"lateral","width":0.003608},{"area":0.000101,"coordinates":[-0.020304,0,0],"depth":0.028,"height":0.02,"minimumDepth":null,"minimumWidth":0.001751,"shape":"irregular","type":"lateral","width":0.003608}],"depth":0.028,"effectiveParameters":{"effectiveArea":0.00019510490157384353,"effectiveLength":0.0740608824164849,"effectiveVolume":0.000014449641174340287,"minimumArea":0.0001743662462558675},"height":0.0303,"width":0.0405,"windingWindows":[{"angle":null,"area":0.00022099999999999998,"coordinates":[0.00745,0],"height":0.02,"radialHeight":null,"sectionsOrientation":null,"shape":null,"width":0.011049999999999999}]}}},"outputs":[]})"));
        mas.get_mutable_magnetic().get_mutable_coil().set_bobbin(OpenMagnetics::BobbinWrapper::create_quick_bobbin(mas.get_mutable_magnetic().get_mutable_core()));
        auto sections = OpenMagnetics::CoilAdviser().get_advised_sections(mas, pattern, repetitions);
    }

    TEST(Test_SectionsAdviser_Web_1) {
        std::string patternString = "[0, 1]";
        json patternJson = json::parse(patternString);
        std::vector<size_t> pattern; 
        for (auto& elem : patternJson) {
            pattern.push_back(elem);
        }
        int repetitions = 1;
        OpenMagnetics::MasWrapper mas(json::parse(R"({"inputs":{"designRequirements":{"insulation":{"altitude":{"maximum":2000},"cti":"Group IIIB","pollutionDegree":"P2","overvoltageCategory":"OVC-III","insulationType":"Double","mainSupplyVoltage":{"maximum":400},"standards":["IEC 60664-1"]},"magnetizingInductance":{"nominal":0.0001},"name":"My Design Requirements","turnsRatios":[{"nominal":1}]},"operatingPoints":[{"name":"Operating Point No. 1","conditions":{"ambientTemperature":42},"excitationsPerWinding":[{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"data":[-5,5,-5],"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular","acEffectiveFrequency":110746.40291779551,"effectiveFrequency":110746.40291779551,"peak":5,"rms":2.8874560332150576,"thd":0.12151487440704967},"harmonics":{"amplitudes":[1.1608769501236793e-14,4.05366124583194,1.787369544444173e-15,0.4511310569983995,9.749053004706756e-16,0.16293015292554872,4.036157626725542e-16,0.08352979924600704,3.4998295008010614e-16,0.0508569581336163,3.1489164048780735e-16,0.034320410449418075,3.142469873118059e-16,0.024811988673843106,2.3653352035940994e-16,0.018849001010678823,2.9306524147249266e-16,0.014866633059596499,1.796485796132569e-16,0.012077180559557785,1.6247782523152451e-16,0.010049063750920609,1.5324769149805092e-16,0.008529750975091871,1.0558579733068502e-16,0.007363501410705499,7.513269775674661e-17,0.006450045785294609,5.871414177162291e-17,0.005722473794997712,9.294731722001391e-17,0.005134763398167541,1.194820309200107e-16,0.004654430423785411,8.2422739080512e-17,0.004258029771397032,9.5067306351894e-17,0.0039283108282380024,1.7540347128474968e-16,0.0036523670873925395,9.623794010508822e-17,0.0034204021424253787,1.4083470894369491e-16,0.0032248884817922927,1.4749333016985644e-16,0.0030599828465501895,1.0448590642474364e-16,0.002921112944200383,7.575487373767413e-18,0.002804680975178716,7.419510610361002e-17,0.0027078483284668376,3.924741709073613e-17,0.0026283777262804953,2.2684279102637236e-17,0.0025645167846443107,8.997077625295079e-17,0.0025149120164513483,7.131074184849219e-17,0.0024785457043284276,9.354417496250849e-17,0.0024546904085875065,1.2488589642405877e-16,0.0024428775264784264],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]}},"voltage":{"waveform":{"data":[-20.5,70.5,70.5,-20.5,-20.5],"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular","acEffectiveFrequency":591485.5360118389,"effectiveFrequency":553357.3374711702,"peak":70.5,"rms":51.572309672924284,"thd":0.4833151484524849},"harmonics":{"amplitudes":[24.2890625,57.92076613061847,1.421875,19.27588907896988,1.421875,11.528257939603122,1.421875,8.194467538528329,1.421875,6.331896912839248,1.421875,5.137996046859012,1.421875,4.304077056139349,1.421875,3.6860723299088454,1.421875,3.207698601961777,1.421875,2.8247804703632298,1.421875,2.509960393415185,1.421875,2.2453859950684323,1.421875,2.01890737840567,1.421875,1.8219644341144872,1.421875,1.6483482744897402,1.421875,1.4934420157473332,1.421875,1.3537375367153817,1.421875,1.2265178099275544,1.421875,1.1096421410704556,1.421875,1.0013973584174929,1.421875,0.9003924136274832,1.421875,0.8054822382572133,1.421875,0.7157117294021269,1.421875,0.6302738400635857,1.421875,0.5484777114167545,1.421875,0.46972405216147894,1.421875,0.3934858059809043,1.421875,0.31929270856030145,1.421875,0.24671871675852053,1.421875,0.17537155450693565,1.421875,0.10488380107099537,1.421875,0.034905072061178544],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]}}},{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"data":[-5,5,-5],"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular"}},"voltage":{"waveform":{"data":[-20.5,70.5,70.5,-20.5,-20.5],"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular"}}}]}]},"magnetic":{"coil":{"bobbin":"Dummy","functionalDescription":[{"isolationSide":"primary","name":"Primary","numberParallels":1,"numberTurns":24,"wire":{"coating":{"breakdownVoltage":70,"grade":1,"material":null,"numberLayers":null,"temperatureRating":null,"thickness":null,"thicknessLayers":null,"type":"enamelled"},"conductingArea":null,"conductingDiameter":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":null,"nominal":0.00001},"conductingHeight":null,"conductingWidth":null,"edgeRadius":null,"manufacturerInfo":{"cost":null,"datasheetUrl":null,"family":null,"name":"Elektrisola","orderCode":null,"reference":null,"status":null},"material":"copper","name":"Round 0.01 - Grade 1","numberConductors":1,"outerDiameter":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.000013000000000000001,"minimum":0.000012,"nominal":null},"outerHeight":null,"outerWidth":null,"standard":"IEC 60317","standardName":"0.01 mm","strand":null,"type":"round"}},{"name":"Secondary","numberTurns":1,"numberParallels":1,"isolationSide":"secondary","wire":"Dummy"}]},"core":{"distributorsInfo":[],"functionalDescription":{"coating":null,"gapping":[{"area":0.000071,"coordinates":[0,0.0005,0],"distanceClosestNormalSurface":0.01125,"distanceClosestParallelSurface":0.006625,"length":0.001,"sectionDimensions":[0.0095,0.0095],"shape":"round","type":"subtractive"},{"area":0.00006,"coordinates":[0.014533,0,0],"distanceClosestNormalSurface":0.012248,"distanceClosestParallelSurface":0.006625,"length":0.000005,"sectionDimensions":[0.006316,0.0095],"shape":"irregular","type":"residual"},{"area":0.00006,"coordinates":[-0.014533,0,0],"distanceClosestNormalSurface":0.012248,"distanceClosestParallelSurface":0.006625,"length":0.000005,"sectionDimensions":[0.006316,0.0095],"shape":"irregular","type":"residual"}],"material":"3C91","numberStacks":1,"shape":{"aliases":["EC 35/17/10"],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0353,"minimum":0.0337,"nominal":null},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01745,"minimum":0.01715,"nominal":null},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0098,"minimum":0.0092,"nominal":null},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0126,"minimum":0.0119,"nominal":null},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0233,"minimum":0.0222,"nominal":null},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0098,"minimum":0.0092,"nominal":null},"T":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0293,"minimum":0.0277,"nominal":null},"r":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":null,"nominal":0.0005},"s":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.003,"minimum":0.0025,"nominal":null}},"family":"ec","familySubtype":null,"magneticCircuit":"open","name":"EC 35/17/10","type":"standard"},"type":"two-piece set"},"geometricalDescription":[{"coordinates":[0,0,0],"dimensions":null,"insulationMaterial":null,"machining":[{"coordinates":[0,0.0005,0],"length":0.001}],"material":"3C91","rotation":[3.141592653589793,3.141592653589793,0],"shape":{"aliases":["EC 35/17/10"],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0353,"minimum":0.0337,"nominal":null},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01745,"minimum":0.01715,"nominal":null},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0098,"minimum":0.0092,"nominal":null},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0126,"minimum":0.0119,"nominal":null},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0233,"minimum":0.0222,"nominal":null},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0098,"minimum":0.0092,"nominal":null},"T":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0293,"minimum":0.0277,"nominal":null},"r":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":null,"nominal":0.0005},"s":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.003,"minimum":0.0025,"nominal":null}},"family":"ec","familySubtype":null,"magneticCircuit":"open","name":"EC 35/17/10","type":"standard"},"type":"half set"},{"coordinates":[0,0,0],"dimensions":null,"insulationMaterial":null,"machining":null,"material":"3C91","rotation":[0,0,0],"shape":{"aliases":["EC 35/17/10"],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0353,"minimum":0.0337,"nominal":null},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01745,"minimum":0.01715,"nominal":null},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0098,"minimum":0.0092,"nominal":null},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0126,"minimum":0.0119,"nominal":null},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0233,"minimum":0.0222,"nominal":null},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0098,"minimum":0.0092,"nominal":null},"T":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0293,"minimum":0.0277,"nominal":null},"r":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":null,"nominal":0.0005},"s":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.003,"minimum":0.0025,"nominal":null}},"family":"ec","familySubtype":null,"magneticCircuit":"open","name":"EC 35/17/10","type":"standard"},"type":"half set"}],"manufacturerInfo":{"cost":null,"datasheetUrl":"https://ferroxcube.com/upload/media/product/file/Pr_ds/EC35_17_10.pdf","family":null,"name":"Ferroxcube","orderCode":null,"reference":"EC35/17/10-3C91-G1000","status":"production"},"name":"EC 35/17/10 - 3C91 - Gapped 1.000 mm","processedDescription":{"columns":[{"area":0.000071,"coordinates":[0,0,0],"depth":0.0095,"height":0.0245,"minimumDepth":null,"minimumWidth":null,"shape":"round","type":"central","width":0.0095},{"area":0.00006,"coordinates":[0.014533,0,0],"depth":0.0095,"height":0.0245,"minimumDepth":null,"minimumWidth":0.005876,"shape":"irregular","type":"lateral","width":0.006316},{"area":0.00006,"coordinates":[-0.014533,0,0],"depth":0.0095,"height":0.0245,"minimumDepth":null,"minimumWidth":0.005876,"shape":"irregular","type":"lateral","width":0.006316}],"depth":0.0095,"effectiveParameters":{"effectiveArea":0.00008700294107630485,"effectiveLength":0.07610520812632617,"effectiveVolume":0.000006621376938214672,"minimumArea":0.0000708821842466197},"height":0.0346,"width":0.0345,"windingWindows":[{"angle":null,"area":0.0001623125,"coordinates":[0.00475,0],"height":0.0245,"radialHeight":null,"sectionsOrientation":null,"shape":null,"width":0.006625}]}}},"outputs":[]})"));

        auto bobbin = mas.get_magnetic().get_coil().get_bobbin();
        if (std::holds_alternative<std::string>(bobbin)) {
            auto bobbinString = std::get<std::string>(bobbin);
            if (bobbinString == "Dummy") {
                mas.get_mutable_magnetic().get_mutable_coil().set_bobbin(OpenMagnetics::BobbinWrapper::create_quick_bobbin(mas.get_mutable_magnetic().get_mutable_core()));
            }
        }
        mas.get_mutable_inputs().process_waveforms();

        auto sections = OpenMagnetics::CoilAdviser().get_advised_sections(mas, pattern, repetitions);
    }

    TEST(Test_SectionsAdviser_Web_2) {
        std::string patternString = "[0]";
        json patternJson = json::parse(patternString);
        std::vector<size_t> pattern; 
        for (auto& elem : patternJson) {
            pattern.push_back(elem);
        }
        int repetitions = 1;
        OpenMagnetics::MasWrapper mas(json::parse(R"({"inputs":{"designRequirements":{"insulation":null,"isolationSides":null,"leakageInductance":null,"magnetizingInductance":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":null,"nominal":0.0001},"market":null,"maximumDimensions":null,"maximumWeight":null,"name":"My Design Requirements","operatingTemperature":null,"strayCapacitance":null,"terminalType":null,"topology":null,"turnsRatios":[],"wiringTechnology":null},"operatingPoints":[{"conditions":{"ambientRelativeHumidity":null,"ambientTemperature":42.0,"cooling":null,"name":null},"excitationsPerWinding":[{"current":{"harmonics":{"amplitudes":[1.1608769501236793e-14,4.05366124583194,1.787369544444173e-15,0.4511310569983995,9.749053004706756e-16,0.16293015292554872,4.036157626725542e-16,0.08352979924600704,3.4998295008010614e-16,0.0508569581336163,3.1489164048780735e-16,0.034320410449418075,3.142469873118059e-16,0.024811988673843106,2.3653352035940994e-16,0.018849001010678823,2.9306524147249266e-16,0.014866633059596499,1.796485796132569e-16,0.012077180559557785,1.6247782523152451e-16,0.010049063750920609,1.5324769149805092e-16,0.008529750975091871,1.0558579733068502e-16,0.007363501410705499,7.513269775674661e-17,0.006450045785294609,5.871414177162291e-17,0.005722473794997712,9.294731722001391e-17,0.005134763398167541,1.194820309200107e-16,0.004654430423785411,8.2422739080512e-17,0.004258029771397032,9.5067306351894e-17,0.0039283108282380024,1.7540347128474968e-16,0.0036523670873925395,9.623794010508822e-17,0.0034204021424253787,1.4083470894369491e-16,0.0032248884817922927,1.4749333016985644e-16,0.0030599828465501895,1.0448590642474364e-16,0.002921112944200383,7.575487373767413e-18,0.002804680975178716,7.419510610361002e-17,0.0027078483284668376,3.924741709073613e-17,0.0026283777262804953,2.2684279102637236e-17,0.0025645167846443107,8.997077625295079e-17,0.0025149120164513483,7.131074184849219e-17,0.0024785457043284276,9.354417496250849e-17,0.0024546904085875065,1.2488589642405877e-16,0.0024428775264784264],"frequencies":[0.0,100000.0,200000.0,300000.0,400000.0,500000.0,600000.0,700000.0,800000.0,900000.0,1000000.0,1100000.0,1200000.0,1300000.0,1400000.0,1500000.0,1600000.0,1700000.0,1800000.0,1900000.0,2000000.0,2100000.0,2200000.0,2300000.0,2400000.0,2500000.0,2600000.0,2700000.0,2800000.0,2900000.0,3000000.0,3100000.0,3200000.0,3300000.0,3400000.0,3500000.0,3600000.0,3700000.0,3800000.0,3900000.0,4000000.0,4100000.0,4200000.0,4300000.0,4400000.0,4500000.0,4600000.0,4700000.0,4800000.0,4900000.0,5000000.0,5100000.0,5200000.0,5300000.0,5400000.0,5500000.0,5600000.0,5700000.0,5800000.0,5900000.0,6000000.0,6100000.0,6200000.0,6300000.0]},"processed":{"acEffectiveFrequency":110746.40291779551,"average":null,"dutyCycle":0.5,"effectiveFrequency":110746.40291779551,"label":"Triangular","offset":0.0,"peak":5.0,"peakToPeak":10.0,"phase":null,"rms":2.8874560332150576,"thd":0.12151487440704967},"waveform":{"ancillaryLabel":null,"data":[-5.0,5.0,-5.0],"numberPeriods":null,"time":[0.0,5e-06,1e-05]}},"frequency":100000.0,"magneticFieldStrength":null,"magneticFluxDensity":null,"magnetizingCurrent":null,"name":"Primary winding excitation","voltage":{"harmonics":{"amplitudes":[24.2890625,57.92076613061847,1.421875,19.27588907896988,1.421875,11.528257939603122,1.421875,8.194467538528329,1.421875,6.331896912839248,1.421875,5.137996046859012,1.421875,4.304077056139349,1.421875,3.6860723299088454,1.421875,3.207698601961777,1.421875,2.8247804703632298,1.421875,2.509960393415185,1.421875,2.2453859950684323,1.421875,2.01890737840567,1.421875,1.8219644341144872,1.421875,1.6483482744897402,1.421875,1.4934420157473332,1.421875,1.3537375367153817,1.421875,1.2265178099275544,1.421875,1.1096421410704556,1.421875,1.0013973584174929,1.421875,0.9003924136274832,1.421875,0.8054822382572133,1.421875,0.7157117294021269,1.421875,0.6302738400635857,1.421875,0.5484777114167545,1.421875,0.46972405216147894,1.421875,0.3934858059809043,1.421875,0.31929270856030145,1.421875,0.24671871675852053,1.421875,0.17537155450693565,1.421875,0.10488380107099537,1.421875,0.034905072061178544],"frequencies":[0.0,100000.0,200000.0,300000.0,400000.0,500000.0,600000.0,700000.0,800000.0,900000.0,1000000.0,1100000.0,1200000.0,1300000.0,1400000.0,1500000.0,1600000.0,1700000.0,1800000.0,1900000.0,2000000.0,2100000.0,2200000.0,2300000.0,2400000.0,2500000.0,2600000.0,2700000.0,2800000.0,2900000.0,3000000.0,3100000.0,3200000.0,3300000.0,3400000.0,3500000.0,3600000.0,3700000.0,3800000.0,3900000.0,4000000.0,4100000.0,4200000.0,4300000.0,4400000.0,4500000.0,4600000.0,4700000.0,4800000.0,4900000.0,5000000.0,5100000.0,5200000.0,5300000.0,5400000.0,5500000.0,5600000.0,5700000.0,5800000.0,5900000.0,6000000.0,6100000.0,6200000.0,6300000.0]},"processed":{"acEffectiveFrequency":591485.5360118389,"average":null,"dutyCycle":0.5,"effectiveFrequency":553357.3374711702,"label":"Rectangular","offset":0.0,"peak":70.5,"peakToPeak":100.0,"phase":null,"rms":51.572309672924284,"thd":0.4833151484524849},"waveform":{"ancillaryLabel":null,"data":[-20.5,70.5,70.5,-20.5,-20.5],"numberPeriods":null,"time":[0.0,0.0,5e-06,5e-06,1e-05]}}},{"current":{"harmonics":null,"processed":{"acEffectiveFrequency":null,"average":null,"dutyCycle":0.5,"effectiveFrequency":null,"label":"Triangular","offset":0.0,"peak":null,"peakToPeak":10.0,"phase":null,"rms":null,"thd":null},"waveform":{"ancillaryLabel":null,"data":[-5.0,5.0,-5.0],"numberPeriods":null,"time":[0.0,5e-06,1e-05]}},"frequency":100000.0,"magneticFieldStrength":null,"magneticFluxDensity":null,"magnetizingCurrent":null,"name":"Primary winding excitation","voltage":{"harmonics":null,"processed":{"acEffectiveFrequency":null,"average":null,"dutyCycle":0.5,"effectiveFrequency":null,"label":"Rectangular","offset":0.0,"peak":null,"peakToPeak":100.0,"phase":null,"rms":null,"thd":null},"waveform":{"ancillaryLabel":null,"data":[-20.5,70.5,70.5,-20.5,-20.5],"numberPeriods":null,"time":[0.0,0.0,5e-06,5e-06,1e-05]}}},{"current":{"harmonics":null,"processed":{"acEffectiveFrequency":null,"average":null,"dutyCycle":0.5,"effectiveFrequency":null,"label":"Triangular","offset":0.0,"peak":null,"peakToPeak":10.0,"phase":null,"rms":null,"thd":null},"waveform":{"ancillaryLabel":null,"data":[-5.0,5.0,-5.0],"numberPeriods":null,"time":[0.0,5e-06,1e-05]}},"frequency":100000.0,"magneticFieldStrength":null,"magneticFluxDensity":null,"magnetizingCurrent":null,"name":"Primary winding excitation","voltage":{"harmonics":null,"processed":{"acEffectiveFrequency":null,"average":null,"dutyCycle":0.5,"effectiveFrequency":null,"label":"Rectangular","offset":0.0,"peak":null,"peakToPeak":100.0,"phase":null,"rms":null,"thd":null},"waveform":{"ancillaryLabel":null,"data":[-20.5,70.5,70.5,-20.5,-20.5],"numberPeriods":null,"time":[0.0,0.0,5e-06,5e-06,1e-05]}}}],"name":"Operating Point No. 1"}]},"magnetic":{"coil":{"bobbin":{"distributorsInfo":null,"functionalDescription":null,"manufacturerInfo":null,"name":null,"processedDescription":{"columnDepth":0.003912540921738127,"columnShape":"round","columnThickness":0.0010750409217381266,"columnWidth":0.003912540921738127,"coordinates":[0.0,0.0,0.0],"pins":null,"wallThickness":0.0007636652757989004,"windingWindows":[{"angle":null,"area":2.0400047558919626e-05,"coordinates":[0.004956270460869064,0.0,0.0],"height":0.009772669448402199,"radialHeight":null,"sectionsOrientation":null,"shape":"rectangular","width":0.002087459078261874}]}},"functionalDescription":[{"connections":null,"isolationSide":"primary","name":"Primary","numberParallels":1,"numberTurns":32,"wire":{"coating":{"breakdownVoltage":70.0,"grade":1,"material":null,"numberLayers":null,"temperatureRating":null,"thickness":null,"thicknessLayers":null,"type":"enamelled"},"conductingArea":null,"conductingDiameter":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":null,"nominal":1e-05},"conductingHeight":null,"conductingWidth":null,"edgeRadius":null,"manufacturerInfo":{"cost":null,"datasheetUrl":null,"family":null,"name":"Elektrisola","orderCode":null,"reference":null,"status":null},"material":"copper","name":"Round 0.01 - Grade 1","numberConductors":1,"outerDiameter":{"excludeMaximum":null,"excludeMinimum":null,"maximum":1.3000000000000001e-05,"minimum":1.2e-05,"nominal":null},"outerHeight":null,"outerWidth":null,"standard":"IEC 60317","standardName":"0.01 mm","strand":null,"type":"round"}}],"layersDescription":null,"sectionsDescription":null,"turnsDescription":null},"core":{"distributorsInfo":[],"functionalDescription":{"coating":null,"gapping":[{"area":2.6e-05,"coordinates":[0.0,0.0,0.0],"distanceClosestNormalSurface":0.005443,"distanceClosestParallelSurface":0.0031625000000000004,"length":0.000414,"sectionDimensions":[0.005675,0.005675],"shape":"round","type":"subtractive"},{"area":0.000163,"coordinates":[0.0,0.0,-0.007038],"distanceClosestNormalSurface":0.005648,"distanceClosestParallelSurface":0.0031625000000000004,"length":5e-06,"sectionDimensions":[0.078555,0.002075],"shape":"irregular","type":"residual"}],"material":"3C91","numberStacks":1,"shape":{"aliases":[],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0184,"minimum":0.0176,"nominal":null},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0085,"minimum":0.0083,"nominal":null},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01125,"minimum":0.01075,"nominal":null},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0058,"minimum":0.0055,"nominal":null},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0124,"minimum":0.0116,"nominal":null},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.00585,"minimum":0.0055,"nominal":null},"K":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.002925,"minimum":null,"nominal":null}},"family":"ep","familySubtype":null,"magneticCircuit":"open","name":"EP 17","type":"standard"},"type":"two-piece set"},"geometricalDescription":[{"coordinates":[0.0,0.0,0.0],"dimensions":null,"insulationMaterial":null,"machining":[{"coordinates":[0.0,0.0001035,0.0],"length":0.000207}],"material":"3C91","rotation":[3.141592653589793,3.141592653589793,0.0],"shape":{"aliases":[],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0184,"minimum":0.0176,"nominal":null},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0085,"minimum":0.0083,"nominal":null},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01125,"minimum":0.01075,"nominal":null},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0058,"minimum":0.0055,"nominal":null},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0124,"minimum":0.0116,"nominal":null},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.00585,"minimum":0.0055,"nominal":null},"K":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.002925,"minimum":null,"nominal":null}},"family":"ep","familySubtype":null,"magneticCircuit":"open","name":"EP 17","type":"standard"},"type":"half set"},{"coordinates":[0.0,0.0,0.0],"dimensions":null,"insulationMaterial":null,"machining":[{"coordinates":[0.0,-0.0001035,0.0],"length":0.000207}],"material":"3C91","rotation":[0.0,0.0,0.0],"shape":{"aliases":[],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0184,"minimum":0.0176,"nominal":null},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0085,"minimum":0.0083,"nominal":null},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01125,"minimum":0.01075,"nominal":null},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0058,"minimum":0.0055,"nominal":null},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0124,"minimum":0.0116,"nominal":null},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.00585,"minimum":0.0055,"nominal":null},"K":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.002925,"minimum":null,"nominal":null}},"family":"ep","familySubtype":null,"magneticCircuit":"open","name":"EP 17","type":"standard"},"type":"half set"}],"manufacturerInfo":{"cost":null,"datasheetUrl":"https://ferroxcube.com/upload/media/product/file/Pr_ds/EP17.pdf","family":null,"name":"Ferroxcube","orderCode":null,"reference":"EP17-3C91-A100","status":"production"},"name":"EP 17 - 3C91 - Gapped 0.414 mm","processedDescription":{"columns":[{"area":2.6e-05,"coordinates":[0.0,0.0,0.0],"depth":0.005675,"height":0.0113,"minimumDepth":null,"minimumWidth":null,"shape":"round","type":"central","width":0.005675},{"area":0.000163,"coordinates":[0.0,0.0,-0.007038],"depth":0.002075,"height":0.0113,"minimumDepth":null,"minimumWidth":0.003001,"shape":"irregular","type":"lateral","width":0.078555}],"depth":0.011,"effectiveParameters":{"effectiveArea":3.4461049794381896e-05,"effectiveLength":0.02849715978271948,"effectiveVolume":9.820420422707531e-07,"minimumArea":2.5790801226066944e-05},"height":0.016800000000000002,"width":0.018000000000000002,"windingWindows":[{"angle":null,"area":3.573625e-05,"coordinates":[0.0028374999999999997,0.0],"height":0.0113,"radialHeight":null,"sectionsOrientation":null,"shape":null,"width":0.0031625000000000004}]}},"distributorsInfo":null,"manufacturerInfo":null,"rotation":null},"outputs":[]})"));

        auto bobbin = mas.get_magnetic().get_coil().get_bobbin();
        if (std::holds_alternative<std::string>(bobbin)) {
            auto bobbinString = std::get<std::string>(bobbin);
            if (bobbinString == "Dummy") {
                mas.get_mutable_magnetic().get_mutable_coil().set_bobbin(OpenMagnetics::BobbinWrapper::create_quick_bobbin(mas.get_mutable_magnetic().get_mutable_core()));
            }
        }
        mas.get_mutable_inputs().process_waveforms();

        auto sections = OpenMagnetics::CoilAdviser().get_advised_sections(mas, pattern, repetitions);
    }

    TEST(Test_SectionsAdviser_Web_3) {
        OpenMagnetics::MasWrapper mas(json::parse(R"({"inputs":{"designRequirements":{"insulation":null,"isolationSides":["primary","secondary"],"leakageInductance":null,"magnetizingInductance":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":null,"nominal":0.001},"market":null,"maximumDimensions":null,"maximumWeight":null,"name":"My Design Requirements","operatingTemperature":null,"strayCapacitance":null,"terminalType":null,"topology":null,"turnsRatios":[{"nominal":1}],"wiringTechnology":null},"operatingPoints":[{"conditions":{"ambientRelativeHumidity":null,"ambientTemperature":42,"cooling":null,"name":null},"excitationsPerWinding":[{"current":{"harmonics":{"amplitudes":[1.1608769501236793e-14,4.05366124583194,1.787369544444173e-15,0.4511310569983995,9.749053004706756e-16,0.16293015292554872,4.036157626725542e-16,0.08352979924600704,3.4998295008010614e-16,0.0508569581336163,3.1489164048780735e-16,0.034320410449418075,3.142469873118059e-16,0.024811988673843106,2.3653352035940994e-16,0.018849001010678823,2.9306524147249266e-16,0.014866633059596499,1.796485796132569e-16,0.012077180559557785,1.6247782523152451e-16,0.010049063750920609,1.5324769149805092e-16,0.008529750975091871,1.0558579733068502e-16,0.007363501410705499,7.513269775674661e-17,0.006450045785294609,5.871414177162291e-17,0.005722473794997712,9.294731722001391e-17,0.005134763398167541,1.194820309200107e-16,0.004654430423785411,8.2422739080512e-17,0.004258029771397032,9.5067306351894e-17,0.0039283108282380024,1.7540347128474968e-16,0.0036523670873925395,9.623794010508822e-17,0.0034204021424253787,1.4083470894369491e-16,0.0032248884817922927,1.4749333016985644e-16,0.0030599828465501895,1.0448590642474364e-16,0.002921112944200383,7.575487373767413e-18,0.002804680975178716,7.419510610361002e-17,0.0027078483284668376,3.924741709073613e-17,0.0026283777262804953,2.2684279102637236e-17,0.0025645167846443107,8.997077625295079e-17,0.0025149120164513483,7.131074184849219e-17,0.0024785457043284276,9.354417496250849e-17,0.0024546904085875065,1.2488589642405877e-16,0.0024428775264784264],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]},"processed":{"acEffectiveFrequency":110746.40291779551,"average":-1.2073675392798577e-14,"dutyCycle":0.5,"effectiveFrequency":110746.40291779551,"label":"Triangular","offset":0,"peak":5,"peakToPeak":10,"phase":null,"rms":2.8874560332150576,"thd":0.12151487440704967},"waveform":{"ancillaryLabel":null,"data":[-5,-4.84375,-4.6875,-4.53125,-4.375,-4.21875,-4.0625,-3.90625,-3.75,-3.59375,-3.4375,-3.28125,-3.125,-2.96875,-2.8125,-2.65625,-2.5,-2.34375,-2.1875,-2.03125,-1.875,-1.71875,-1.5625,-1.40625,-1.25,-1.09375,-0.9375,-0.7812499999999996,-0.6249999999999991,-0.4687499999999991,-0.3124999999999982,-0.15624999999999822,1.7763568394002505e-15,0.15625000000000355,0.31250000000000355,0.46875000000000355,0.6250000000000044,0.7812500000000044,0.9375000000000044,1.0937500000000053,1.2500000000000053,1.4062500000000069,1.5625000000000069,1.7187500000000069,1.875000000000008,2.031250000000008,2.187500000000008,2.343750000000009,2.500000000000009,2.656250000000009,2.8125000000000098,2.9687500000000098,3.12500000000001,3.2812500000000107,3.4375000000000107,3.5937500000000124,3.7500000000000124,3.9062500000000124,4.062500000000014,4.218750000000014,4.375000000000014,4.531250000000014,4.687500000000014,4.843750000000014,4.999999999999984,4.843749999999984,4.687499999999984,4.531249999999984,4.374999999999984,4.218749999999982,4.062499999999982,3.9062499999999822,3.7499999999999822,3.593749999999981,3.4374999999999805,3.2812499999999805,3.1249999999999805,2.96874999999998,2.8124999999999787,2.6562499999999787,2.499999999999978,2.343749999999978,2.187499999999978,2.031249999999978,1.874999999999977,1.718749999999977,1.5624999999999756,1.4062499999999754,1.2499999999999751,1.0937499999999751,0.9374999999999742,0.7812499999999738,0.6249999999999738,0.46874999999997335,0.3124999999999729,0.15624999999997247,-2.7533531010703882e-14,-0.15625000000002842,-0.3125000000000284,-0.4687500000000284,-0.6250000000000302,-0.7812500000000302,-0.9375000000000302,-1.093750000000031,-1.250000000000031,-1.406250000000031,-1.562500000000032,-1.718750000000032,-1.875000000000032,-2.0312500000000338,-2.1875000000000338,-2.3437500000000346,-2.5000000000000346,-2.6562500000000346,-2.8125000000000355,-2.9687500000000355,-3.1250000000000355,-3.281250000000037,-3.437500000000037,-3.593750000000037,-3.7500000000000373,-3.9062500000000373,-4.062500000000037,-4.218750000000039,-4.375000000000039,-4.531250000000039,-4.687500000000039,-4.843750000000039],"numberPeriods":null,"time":[0,7.8125e-8,1.5625e-7,2.3437500000000003e-7,3.125e-7,3.90625e-7,4.6875e-7,5.468750000000001e-7,6.25e-7,7.03125e-7,7.8125e-7,8.59375e-7,9.375e-7,0.0000010156250000000001,0.0000010937500000000001,0.0000011718750000000001,0.00000125,0.000001328125,0.00000140625,0.000001484375,0.0000015625,0.000001640625,0.00000171875,0.000001796875,0.000001875,0.000001953125,0.0000020312500000000002,0.0000021093750000000005,0.0000021875000000000007,0.000002265625000000001,0.000002343750000000001,0.0000024218750000000013,0.0000025000000000000015,0.0000025781250000000017,0.000002656250000000002,0.000002734375000000002,0.0000028125000000000023,0.0000028906250000000025,0.0000029687500000000027,0.000003046875000000003,0.000003125000000000003,0.0000032031250000000033,0.0000032812500000000035,0.0000033593750000000037,0.000003437500000000004,0.000003515625000000004,0.0000035937500000000043,0.0000036718750000000045,0.0000037500000000000048,0.000003828125000000005,0.000003906250000000005,0.000003984375000000005,0.0000040625000000000056,0.000004140625000000006,0.000004218750000000006,0.000004296875000000006,0.000004375000000000006,0.000004453125000000007,0.000004531250000000007,0.000004609375000000007,0.000004687500000000007,0.000004765625000000007,0.000004843750000000008,0.000004921875000000008,0.000005000000000000008,0.000005078125000000008,0.0000051562500000000084,0.000005234375000000009,0.000005312500000000009,0.000005390625000000009,0.000005468750000000009,0.0000055468750000000095,0.00000562500000000001,0.00000570312500000001,0.00000578125000000001,0.00000585937500000001,0.0000059375000000000105,0.000006015625000000011,0.000006093750000000011,0.000006171875000000011,0.000006250000000000011,0.0000063281250000000115,0.000006406250000000012,0.000006484375000000012,0.000006562500000000012,0.000006640625000000012,0.0000067187500000000125,0.000006796875000000013,0.000006875000000000013,0.000006953125000000013,0.000007031250000000013,0.0000071093750000000136,0.000007187500000000014,0.000007265625000000014,0.000007343750000000014,0.000007421875000000014,0.000007500000000000015,0.000007578125000000015,0.000007656250000000015,0.000007734375000000015,0.000007812500000000015,0.000007890625000000016,0.000007968750000000016,0.000008046875000000016,0.000008125000000000016,0.000008203125000000016,0.000008281250000000017,0.000008359375000000017,0.000008437500000000017,0.000008515625000000017,0.000008593750000000017,0.000008671875000000018,0.000008750000000000018,0.000008828125000000018,0.000008906250000000018,0.000008984375000000018,0.000009062500000000019,0.000009140625000000019,0.000009218750000000019,0.00000929687500000002,0.00000937500000000002,0.00000945312500000002,0.00000953125000000002,0.00000960937500000002,0.00000968750000000002,0.00000976562500000002,0.00000984375000000002,0.000009921875000000021]}},"frequency":100000,"magneticFieldStrength":null,"magneticFluxDensity":{"harmonics":{"amplitudes":[9.231136303857917e-16,0.3223416528853849,1.4212920575579306e-16,0.035873330740282525,7.752314929708582e-17,0.01295598512403848,3.209497887970786e-17,0.006642176521737548,2.783017025078808e-17,0.004044076441357465,2.5039756831925073e-17,0.002729112562956602,2.498849488434527e-17,0.0019730157394685327,1.880882523024028e-17,0.0014988470354467304,2.3304151139079725e-17,0.001182174528815948,1.4285411774501716e-17,0.000960361043431031,1.2920016638342367e-17,0.0007990879412415138,1.218604890311036e-17,0.0006782742467291576,8.396039621660411e-18,0.0005855356606798908,5.97445038249055e-18,0.000512898906329696,4.668869044218206e-18,0.00045504336692403984,7.391044798024947e-18,0.00040830943203321675,9.501049298695066e-18,0.0003701140043672049,6.554144596535075e-18,0.00033859276128674347,7.559623462947164e-18,0.0003123739574252256,1.3947846508855625e-17,0.00029043128483042965,7.652710673753453e-18,0.0002719857465287119,1.1198985339789002e-17,0.0002564387649956738,1.1728469882727942e-17,0.0002433256921929797,8.308577786269185e-18,0.00023228294561283675,6.023924973956222e-19,0.00022302443310596805,5.899894363900111e-18,0.00021532443216818188,3.120901459024997e-18,0.00020900503749974922,1.803823155665986e-18,0.00020392690189998967,7.154354291093534e-18,0.00019998239790702357,5.670533624278814e-18,0.00019709059801350726,7.438506117455859e-18,0.00019519365720053114,9.930757365775466e-18,0.00019425431281197466],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]},"processed":{"acEffectiveFrequency":null,"average":null,"dutyCycle":0.4999999999999997,"effectiveFrequency":null,"label":"Triangular","offset":-6.106226635438361e-16,"peak":0.3975932291047055,"peakToPeak":0.7951864582094098,"phase":null,"rms":null,"thd":null},"waveform":{"ancillaryLabel":null,"data":[-0.3975932291047055,0.3975932291047043,-0.3975932291047055],"numberPeriods":null,"time":[0,0.000005000000000000008,0.000010000000000000021]}},"magnetizingCurrent":{"harmonics":{"amplitudes":[1.1608769501236793e-14,4.05366124583194,1.787369544444173e-15,0.4511310569983995,9.749053004706756e-16,0.16293015292554872,4.036157626725542e-16,0.08352979924600704,3.4998295008010614e-16,0.0508569581336163,3.1489164048780735e-16,0.034320410449418075,3.142469873118059e-16,0.024811988673843106,2.3653352035940994e-16,0.018849001010678823,2.9306524147249266e-16,0.014866633059596499,1.796485796132569e-16,0.012077180559557785,1.6247782523152451e-16,0.010049063750920609,1.5324769149805092e-16,0.008529750975091871,1.0558579733068502e-16,0.007363501410705499,7.513269775674661e-17,0.006450045785294609,5.871414177162291e-17,0.005722473794997712,9.294731722001391e-17,0.005134763398167541,1.194820309200107e-16,0.004654430423785411,8.2422739080512e-17,0.004258029771397032,9.5067306351894e-17,0.0039283108282380024,1.7540347128474968e-16,0.0036523670873925395,9.623794010508822e-17,0.0034204021424253787,1.4083470894369491e-16,0.0032248884817922927,1.4749333016985644e-16,0.0030599828465501895,1.0448590642474364e-16,0.002921112944200383,7.575487373767413e-18,0.002804680975178716,7.419510610361002e-17,0.0027078483284668376,3.924741709073613e-17,0.0026283777262804953,2.2684279102637236e-17,0.0025645167846443107,8.997077625295079e-17,0.0025149120164513483,7.131074184849219e-17,0.0024785457043284276,9.354417496250849e-17,0.0024546904085875065,1.2488589642405877e-16,0.0024428775264784264],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]},"processed":{"acEffectiveFrequency":110746.40291779551,"average":-1.2073675392798577e-14,"dutyCycle":0.5,"effectiveFrequency":110746.40291779551,"label":"Triangular","offset":0,"peak":5,"peakToPeak":10,"phase":null,"rms":2.8874560332150576,"thd":0.12151487440704967},"waveform":{"ancillaryLabel":null,"data":[-5,-4.84375,-4.6875,-4.53125,-4.375,-4.21875,-4.0625,-3.90625,-3.75,-3.59375,-3.4375,-3.28125,-3.125,-2.96875,-2.8125,-2.65625,-2.5,-2.34375,-2.1875,-2.03125,-1.875,-1.71875,-1.5625,-1.40625,-1.25,-1.09375,-0.9375,-0.7812499999999996,-0.6249999999999991,-0.4687499999999991,-0.3124999999999982,-0.15624999999999822,1.7763568394002505e-15,0.15625000000000355,0.31250000000000355,0.46875000000000355,0.6250000000000044,0.7812500000000044,0.9375000000000044,1.0937500000000053,1.2500000000000053,1.4062500000000069,1.5625000000000069,1.7187500000000069,1.875000000000008,2.031250000000008,2.187500000000008,2.343750000000009,2.500000000000009,2.656250000000009,2.8125000000000098,2.9687500000000098,3.12500000000001,3.2812500000000107,3.4375000000000107,3.5937500000000124,3.7500000000000124,3.9062500000000124,4.062500000000014,4.218750000000014,4.375000000000014,4.531250000000014,4.687500000000014,4.843750000000014,4.999999999999984,4.843749999999984,4.687499999999984,4.531249999999984,4.374999999999984,4.218749999999982,4.062499999999982,3.9062499999999822,3.7499999999999822,3.593749999999981,3.4374999999999805,3.2812499999999805,3.1249999999999805,2.96874999999998,2.8124999999999787,2.6562499999999787,2.499999999999978,2.343749999999978,2.187499999999978,2.031249999999978,1.874999999999977,1.718749999999977,1.5624999999999756,1.4062499999999754,1.2499999999999751,1.0937499999999751,0.9374999999999742,0.7812499999999738,0.6249999999999738,0.46874999999997335,0.3124999999999729,0.15624999999997247,-2.7533531010703882e-14,-0.15625000000002842,-0.3125000000000284,-0.4687500000000284,-0.6250000000000302,-0.7812500000000302,-0.9375000000000302,-1.093750000000031,-1.250000000000031,-1.406250000000031,-1.562500000000032,-1.718750000000032,-1.875000000000032,-2.0312500000000338,-2.1875000000000338,-2.3437500000000346,-2.5000000000000346,-2.6562500000000346,-2.8125000000000355,-2.9687500000000355,-3.1250000000000355,-3.281250000000037,-3.437500000000037,-3.593750000000037,-3.7500000000000373,-3.9062500000000373,-4.062500000000037,-4.218750000000039,-4.375000000000039,-4.531250000000039,-4.687500000000039,-4.843750000000039],"numberPeriods":null,"time":[0,7.8125e-8,1.5625e-7,2.3437500000000003e-7,3.125e-7,3.90625e-7,4.6875e-7,5.468750000000001e-7,6.25e-7,7.03125e-7,7.8125e-7,8.59375e-7,9.375e-7,0.0000010156250000000001,0.0000010937500000000001,0.0000011718750000000001,0.00000125,0.000001328125,0.00000140625,0.000001484375,0.0000015625,0.000001640625,0.00000171875,0.000001796875,0.000001875,0.000001953125,0.0000020312500000000002,0.0000021093750000000005,0.0000021875000000000007,0.000002265625000000001,0.000002343750000000001,0.0000024218750000000013,0.0000025000000000000015,0.0000025781250000000017,0.000002656250000000002,0.000002734375000000002,0.0000028125000000000023,0.0000028906250000000025,0.0000029687500000000027,0.000003046875000000003,0.000003125000000000003,0.0000032031250000000033,0.0000032812500000000035,0.0000033593750000000037,0.000003437500000000004,0.000003515625000000004,0.0000035937500000000043,0.0000036718750000000045,0.0000037500000000000048,0.000003828125000000005,0.000003906250000000005,0.000003984375000000005,0.0000040625000000000056,0.000004140625000000006,0.000004218750000000006,0.000004296875000000006,0.000004375000000000006,0.000004453125000000007,0.000004531250000000007,0.000004609375000000007,0.000004687500000000007,0.000004765625000000007,0.000004843750000000008,0.000004921875000000008,0.000005000000000000008,0.000005078125000000008,0.0000051562500000000084,0.000005234375000000009,0.000005312500000000009,0.000005390625000000009,0.000005468750000000009,0.0000055468750000000095,0.00000562500000000001,0.00000570312500000001,0.00000578125000000001,0.00000585937500000001,0.0000059375000000000105,0.000006015625000000011,0.000006093750000000011,0.000006171875000000011,0.000006250000000000011,0.0000063281250000000115,0.000006406250000000012,0.000006484375000000012,0.000006562500000000012,0.000006640625000000012,0.0000067187500000000125,0.000006796875000000013,0.000006875000000000013,0.000006953125000000013,0.000007031250000000013,0.0000071093750000000136,0.000007187500000000014,0.000007265625000000014,0.000007343750000000014,0.000007421875000000014,0.000007500000000000015,0.000007578125000000015,0.000007656250000000015,0.000007734375000000015,0.000007812500000000015,0.000007890625000000016,0.000007968750000000016,0.000008046875000000016,0.000008125000000000016,0.000008203125000000016,0.000008281250000000017,0.000008359375000000017,0.000008437500000000017,0.000008515625000000017,0.000008593750000000017,0.000008671875000000018,0.000008750000000000018,0.000008828125000000018,0.000008906250000000018,0.000008984375000000018,0.000009062500000000019,0.000009140625000000019,0.000009218750000000019,0.00000929687500000002,0.00000937500000000002,0.00000945312500000002,0.00000953125000000002,0.00000960937500000002,0.00000968750000000002,0.00000976562500000002,0.00000984375000000002,0.000009921875000000021]}},"name":"Primary winding excitation","voltage":{"harmonics":{"amplitudes":[24.2890625,57.92076613061847,1.421875,19.27588907896988,1.421875,11.528257939603122,1.421875,8.194467538528329,1.421875,6.331896912839248,1.421875,5.137996046859012,1.421875,4.304077056139349,1.421875,3.6860723299088454,1.421875,3.207698601961777,1.421875,2.8247804703632298,1.421875,2.509960393415185,1.421875,2.2453859950684323,1.421875,2.01890737840567,1.421875,1.8219644341144872,1.421875,1.6483482744897402,1.421875,1.4934420157473332,1.421875,1.3537375367153817,1.421875,1.2265178099275544,1.421875,1.1096421410704556,1.421875,1.0013973584174929,1.421875,0.9003924136274832,1.421875,0.8054822382572133,1.421875,0.7157117294021269,1.421875,0.6302738400635857,1.421875,0.5484777114167545,1.421875,0.46972405216147894,1.421875,0.3934858059809043,1.421875,0.31929270856030145,1.421875,0.24671871675852053,1.421875,0.17537155450693565,1.421875,0.10488380107099537,1.421875,0.034905072061178544],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]},"processed":{"acEffectiveFrequency":591485.5360118389,"average":24.2890625,"dutyCycle":0.4921874999999997,"effectiveFrequency":553357.3374711702,"label":"Unipolar Rectangular","offset":-20.5,"peak":70.5,"peakToPeak":111.5,"phase":null,"rms":51.572309672924284,"thd":0.4833151484524849},"waveform":{"ancillaryLabel":null,"data":[-20.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5],"numberPeriods":null,"time":[0,7.8125e-8,1.5625e-7,2.3437500000000003e-7,3.125e-7,3.90625e-7,4.6875e-7,5.468750000000001e-7,6.25e-7,7.03125e-7,7.8125e-7,8.59375e-7,9.375e-7,0.0000010156250000000001,0.0000010937500000000001,0.0000011718750000000001,0.00000125,0.000001328125,0.00000140625,0.000001484375,0.0000015625,0.000001640625,0.00000171875,0.000001796875,0.000001875,0.000001953125,0.0000020312500000000002,0.0000021093750000000005,0.0000021875000000000007,0.000002265625000000001,0.000002343750000000001,0.0000024218750000000013,0.0000025000000000000015,0.0000025781250000000017,0.000002656250000000002,0.000002734375000000002,0.0000028125000000000023,0.0000028906250000000025,0.0000029687500000000027,0.000003046875000000003,0.000003125000000000003,0.0000032031250000000033,0.0000032812500000000035,0.0000033593750000000037,0.000003437500000000004,0.000003515625000000004,0.0000035937500000000043,0.0000036718750000000045,0.0000037500000000000048,0.000003828125000000005,0.000003906250000000005,0.000003984375000000005,0.0000040625000000000056,0.000004140625000000006,0.000004218750000000006,0.000004296875000000006,0.000004375000000000006,0.000004453125000000007,0.000004531250000000007,0.000004609375000000007,0.000004687500000000007,0.000004765625000000007,0.000004843750000000008,0.000004921875000000008,0.000005000000000000008,0.000005078125000000008,0.0000051562500000000084,0.000005234375000000009,0.000005312500000000009,0.000005390625000000009,0.000005468750000000009,0.0000055468750000000095,0.00000562500000000001,0.00000570312500000001,0.00000578125000000001,0.00000585937500000001,0.0000059375000000000105,0.000006015625000000011,0.000006093750000000011,0.000006171875000000011,0.000006250000000000011,0.0000063281250000000115,0.000006406250000000012,0.000006484375000000012,0.000006562500000000012,0.000006640625000000012,0.0000067187500000000125,0.000006796875000000013,0.000006875000000000013,0.000006953125000000013,0.000007031250000000013,0.0000071093750000000136,0.000007187500000000014,0.000007265625000000014,0.000007343750000000014,0.000007421875000000014,0.000007500000000000015,0.000007578125000000015,0.000007656250000000015,0.000007734375000000015,0.000007812500000000015,0.000007890625000000016,0.000007968750000000016,0.000008046875000000016,0.000008125000000000016,0.000008203125000000016,0.000008281250000000017,0.000008359375000000017,0.000008437500000000017,0.000008515625000000017,0.000008593750000000017,0.000008671875000000018,0.000008750000000000018,0.000008828125000000018,0.000008906250000000018,0.000008984375000000018,0.000009062500000000019,0.000009140625000000019,0.000009218750000000019,0.00000929687500000002,0.00000937500000000002,0.00000945312500000002,0.00000953125000000002,0.00000960937500000002,0.00000968750000000002,0.00000976562500000002,0.00000984375000000002,0.000009921875000000021]}}},{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"data":[-5,5,-5],"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular"}},"voltage":{"waveform":{"data":[-20.5,70.5,70.5,-20.5,-20.5],"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular"}}},{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"data":[-5,5,-5],"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular"}},"voltage":{"waveform":{"data":[-20.5,70.5,70.5,-20.5,-20.5],"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular"}}},{"name":"Primary winding excitation","frequency":100000,"current":{"waveform":{"data":[-5,5,-5],"time":[0,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":10,"offset":0,"label":"Triangular"}},"voltage":{"waveform":{"data":[-20.5,70.5,70.5,-20.5,-20.5],"time":[0,0,0.000005,0.000005,0.00001]},"processed":{"dutyCycle":0.5,"peakToPeak":100,"offset":0,"label":"Rectangular"}}}],"name":"Operating Point No. 1"}]},"magnetic":{"coil":{"bobbin":{"distributorsInfo":null,"functionalDescription":null,"manufacturerInfo":null,"name":null,"processedDescription":{"columnDepth":0.006874805318637798,"columnShape":"rectangular","columnThickness":0.0018748053186377978,"columnWidth":0.006874805318637798,"coordinates":[0,0,0],"pins":null,"wallThickness":0.0013500000000000005,"windingWindows":[{"angle":null,"area":0.0001254418413943771,"coordinates":[0.0096874026593189,0,0],"height":0.0223,"radialHeight":null,"sectionsAlignment":"inner or top","sectionsOrientation":"overlapping","shape":"rectangular","width":0.005625194681362203}]}},"functionalDescription":[{"connections":null,"isolationSide":"primary","name":"primary","numberParallels":1,"numberTurns":81,"wire":{"coating":{"breakdownVoltage":null,"grade":null,"material":null,"numberLayers":null,"temperatureRating":null,"thickness":null,"thicknessLayers":null,"type":"bare"},"conductingArea":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":null,"nominal":6.283185307179586e-7},"conductingDiameter":null,"conductingHeight":null,"conductingWidth":null,"edgeRadius":null,"manufacturerInfo":{"cost":null,"datasheetUrl":null,"family":null,"name":"Elektrisola","orderCode":null,"reference":null,"status":null},"material":null,"name":"Litz 20x0.2 - Grade 1 - Unserved","numberConductors":20,"outerDiameter":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.001284,"minimum":0.0012150000000000002,"nominal":null},"outerHeight":null,"outerWidth":null,"standard":"IEC 60317","standardName":null,"strand":{"coating":{"breakdownVoltage":1800,"grade":1,"material":null,"numberLayers":null,"temperatureRating":null,"thickness":null,"thicknessLayers":null,"type":"enamelled"},"conductingArea":null,"conductingDiameter":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.000203,"minimum":0.00019700000000000002,"nominal":0.0002},"manufacturerInfo":{"cost":null,"datasheetUrl":null,"family":null,"name":"Elektrisola","orderCode":null,"reference":null,"status":null},"material":"copper","name":"Round 0.2 - Grade 1","numberConductors":1,"outerDiameter":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.00022600000000000002,"minimum":0.000214,"nominal":null},"standard":"IEC 60317","standardName":"0.2 mm","type":"round"},"type":"litz"}},{"connections":null,"isolationSide":"secondary","name":"Secondary","numberParallels":1,"numberTurns":81,"wire":{"coating":{"breakdownVoltage":70,"grade":1,"material":null,"numberLayers":null,"temperatureRating":null,"thickness":null,"thicknessLayers":null,"type":"enamelled"},"conductingArea":null,"conductingDiameter":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":null,"nominal":0.00001},"conductingHeight":null,"conductingWidth":null,"edgeRadius":null,"manufacturerInfo":{"cost":null,"datasheetUrl":null,"family":null,"name":"Elektrisola","orderCode":null,"reference":null,"status":null},"material":"copper","name":"Round 0.01 - Grade 1","numberConductors":1,"outerDiameter":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.000013000000000000001,"minimum":0.000012,"nominal":null},"outerHeight":null,"outerWidth":null,"standard":"IEC 60317","standardName":"0.01 mm","strand":null,"type":"round"}}],"layersDescription":[{"additionalCoordinates":null,"coordinateSystem":"cartesian","coordinates":[0.007499555,0,0],"dimensions":[0.0012495000000000002,0.0223],"fillingFactor":1.176659192825112,"insulationMaterial":null,"name":"primary section 0 layer 0","orientation":"overlapping","partialWindings":[{"connections":null,"parallelsProportion":[0.25925925925925924],"winding":"primary"}],"section":"primary section 0","turnsAlignment":"centered","type":"conduction","windingStyle":"windByConsecutiveTurns"},{"additionalCoordinates":null,"coordinateSystem":"cartesian","coordinates":[0.008749055,0,0],"dimensions":[0.0012495000000000002,0.0223],"fillingFactor":1.120627802690583,"insulationMaterial":null,"name":"primary section 0 layer 1","orientation":"overlapping","partialWindings":[{"connections":null,"parallelsProportion":[0.24691358024691357],"winding":"primary"}],"section":"primary section 0","turnsAlignment":"centered","type":"conduction","windingStyle":"windByConsecutiveTurns"},{"additionalCoordinates":null,"coordinateSystem":"cartesian","coordinates":[0.009998555,0,0],"dimensions":[0.0012495000000000002,0.0223],"fillingFactor":1.120627802690583,"insulationMaterial":null,"name":"primary section 0 layer 2","orientation":"overlapping","partialWindings":[{"connections":null,"parallelsProportion":[0.24691358024691357],"winding":"primary"}],"section":"primary section 0","turnsAlignment":"centered","type":"conduction","windingStyle":"windByConsecutiveTurns"},{"additionalCoordinates":null,"coordinateSystem":"cartesian","coordinates":[0.011248055,0,0],"dimensions":[0.0012495000000000002,0.0223],"fillingFactor":1.120627802690583,"insulationMaterial":null,"name":"primary section 0 layer 3","orientation":"overlapping","partialWindings":[{"connections":null,"parallelsProportion":[0.24691358024691357],"winding":"primary"}],"section":"primary section 0","turnsAlignment":"centered","type":"conduction","windingStyle":"windByConsecutiveTurns"},{"additionalCoordinates":null,"coordinateSystem":"cartesian","coordinates":[0.012487388,0,0],"dimensions":[0.000025,0.0223],"fillingFactor":1,"insulationMaterial":null,"name":"Insulation between primary and primary section 1 layer 0","orientation":"overlapping","partialWindings":[],"section":"Insulation between primary and primary section 1","turnsAlignment":"spread","type":"insulation","windingStyle":null},{"additionalCoordinates":null,"coordinateSystem":"cartesian","coordinates":[0.012506138,0,0],"dimensions":[0.0000125,0.0223],"fillingFactor":0.04540358744394618,"insulationMaterial":null,"name":"Secondary section 0 layer 0","orientation":"overlapping","partialWindings":[{"connections":null,"parallelsProportion":[1],"winding":"Secondary"}],"section":"Secondary section 0","turnsAlignment":"centered","type":"conduction","windingStyle":"windByConsecutiveTurns"},{"additionalCoordinates":null,"coordinateSystem":"cartesian","coordinates":[0.0125125,0,0],"dimensions":[0.000025,0.0223],"fillingFactor":1,"insulationMaterial":null,"name":"Insulation between Secondary and Secondary section 3 layer 0","orientation":"overlapping","partialWindings":[],"section":"Insulation between Secondary and Secondary section 3","turnsAlignment":"spread","type":"insulation","windingStyle":null}],"sectionsDescription":[{"coordinateSystem":"cartesian","coordinates":[0.009674846818637797,0,0],"dimensions":[0.005600083,0.0223],"fillingFactor":1.012647308945355,"layersAlignment":null,"layersOrientation":"overlapping","margin":[0,0],"name":"primary section 0","partialWindings":[{"connections":null,"parallelsProportion":[1],"winding":"primary"}],"type":"conduction","windingStyle":"windByConsecutiveTurns"},{"coordinateSystem":"cartesian","coordinates":[0.012487388318637797,0,0],"dimensions":[0.000025,0.0223],"fillingFactor":1,"layersAlignment":null,"layersOrientation":"overlapping","margin":null,"name":"Insulation between primary and primary section 1","partialWindings":[],"type":"insulation","windingStyle":null},{"coordinateSystem":"cartesian","coordinates":[0.012499944318637797,0,0],"dimensions":[1.1199999999999994e-7,0.0223],"fillingFactor":5.067364670083282,"layersAlignment":null,"layersOrientation":"overlapping","margin":[0,0],"name":"Secondary section 0","partialWindings":[{"connections":null,"parallelsProportion":[1],"winding":"Secondary"}],"type":"conduction","windingStyle":"windByConsecutiveTurns"},{"coordinateSystem":"cartesian","coordinates":[0.012512500318637798,0,0],"dimensions":[0.000025,0.0223],"fillingFactor":1,"layersAlignment":null,"layersOrientation":"overlapping","margin":null,"name":"Insulation between Secondary and Secondary section 3","partialWindings":[],"type":"insulation","windingStyle":null}],"turnsDescription":[{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.039454750000000025],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 0","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.038205250000000024],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 1","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.03695575000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 2","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.03570625000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 3","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.03445675000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 4","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.03320725000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 5","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.03195775000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 6","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.03070825000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 7","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.02945875000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 8","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.02820925000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 9","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.02695975000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 10","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.025710250000000018],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 11","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.024460750000000017],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 12","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.023211250000000017],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 13","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.021961750000000016],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 14","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.020712250000000015],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 15","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.019462750000000015],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 16","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.018213250000000014],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 17","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.016963750000000014],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 18","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.015714250000000013],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 19","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.014464750000000014],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 20","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.013215250000000013],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 21","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.011965750000000015],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 22","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.010716250000000014],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 23","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.009466750000000013],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 24","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.008217250000000013],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 25","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.006967750000000012],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 26","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.0057182500000000115],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 27","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.004468750000000011],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 28","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.0032192500000000103],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 29","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.0019697500000000097],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 30","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,0.0007202500000000091],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 31","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,-0.0005292499999999915],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 32","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,-0.0017787499999999921],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 33","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,-0.0030282499999999928],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 34","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,-0.004277749999999993],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 35","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,-0.005527249999999994],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 36","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,-0.006776749999999995],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 37","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,-0.008026249999999995],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 38","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,-0.009275749999999996],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 39","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.007499555318637798,-0.010525249999999996],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 0","length":0.058923862569762835,"name":"primary parallel 0 turn 40","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.03883000000000003],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 41","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.03758050000000003],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 42","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.03633100000000003],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 43","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.03508150000000003],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 44","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.03383200000000003],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 45","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.03258250000000003],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 46","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.03133300000000003],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 47","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.030083500000000023],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 48","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.028834000000000023],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 49","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.027584500000000022],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 50","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.02633500000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 51","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.02508550000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 52","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.02383600000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 53","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.02258650000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 54","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.02133700000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 55","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.02008750000000002],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 56","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.018838000000000018],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 57","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.017588500000000017],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 58","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.016339000000000017],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 59","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.015089500000000018],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 60","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.013840000000000017],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 61","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.012590500000000017],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 62","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.011341000000000018],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 63","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.010091500000000017],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 64","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.008842000000000017],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 65","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.007592500000000016],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 66","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.006343000000000015],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 67","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.005093500000000015],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 68","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.003844000000000014],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 69","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.0025945000000000135],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 70","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.0013450000000000129],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 71","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,0.00009550000000001224],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 72","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,-0.0011539999999999884],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 73","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,-0.002403499999999989],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 74","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,-0.0036529999999999896],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 75","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,-0.00490249999999999],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 76","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,-0.006151999999999991],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 77","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,-0.007401499999999991],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 78","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,-0.008650999999999992],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 79","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.008749055318637799,-0.009900499999999993],"dimensions":[0.0012495000000000002,0.0012495000000000002],"layer":"primary section 0 layer 1","length":0.06677470261108373,"name":"primary parallel 0 turn 80","orientation":"clockwise","parallel":0,"rotation":0,"section":"primary section 0","winding":"primary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0004999999999999997],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 0","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0004874999999999997],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 1","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00047499999999999973],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 2","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00046249999999999975],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 3","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00044999999999999977],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 4","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0004374999999999998],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 5","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0004249999999999998],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 6","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00041249999999999984],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 7","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00039999999999999986],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 8","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0003874999999999999],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 9","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0003749999999999999],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 10","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0003624999999999999],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 11","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00034999999999999994],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 12","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00033749999999999996],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 13","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.000325],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 14","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0003125],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 15","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00030000000000000003],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 16","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00028750000000000005],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 17","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00027500000000000007],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 18","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0002625000000000001],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 19","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0002500000000000001],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 20","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0002375000000000001],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 21","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0002250000000000001],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 22","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0002125000000000001],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 23","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.0002000000000000001],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 24","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00018750000000000009],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 25","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00017500000000000008],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 26","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00016250000000000007],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 27","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00015000000000000007],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 28","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00013750000000000006],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 29","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00012500000000000006],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 30","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00011250000000000005],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 31","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00010000000000000005],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 32","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00008750000000000004],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 33","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00007500000000000003],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 34","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00006250000000000003],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 35","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00005000000000000003],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 36","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00003750000000000003],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 37","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.00002500000000000003],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 38","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,0.000012500000000000031],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 39","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,3.049318610115481e-20],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 40","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00001249999999999997],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 41","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00002499999999999997],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 42","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00003749999999999997],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 43","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00004999999999999997],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 44","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00006249999999999997],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 45","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00007499999999999998],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 46","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00008749999999999999],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 47","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00009999999999999999],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 48","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0001125],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 49","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.000125],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 50","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0001375],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 51","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00015000000000000001],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 52","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00016250000000000002],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 53","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00017500000000000003],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 54","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00018750000000000003],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 55","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00020000000000000004],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 56","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00021250000000000004],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 57","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00022500000000000005],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 58","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00023750000000000005],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 59","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00025000000000000006],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 60","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00026250000000000004],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 61","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.000275],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 62","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0002875],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 63","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0003],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 64","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00031249999999999995],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 65","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00032499999999999993],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 66","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0003374999999999999],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 67","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0003499999999999999],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 68","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00036249999999999987],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 69","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00037499999999999985],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 70","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0003874999999999998],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 71","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0003999999999999998],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 72","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0004124999999999998],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 73","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00042499999999999976],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 74","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00043749999999999974],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 75","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0004499999999999997],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 76","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0004624999999999997],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 77","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0004749999999999997],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 78","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.00048749999999999965],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 79","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"},{"additionalCoordinates":null,"angle":null,"coordinateSystem":"cartesian","coordinates":[0.0094050553186378,-0.0004999999999999997],"dimensions":[0.0000125,0.0000125],"layer":"Secondary section 0 layer 0","length":0.07089647217259354,"name":"Secondary parallel 0 turn 80","orientation":"clockwise","parallel":0,"rotation":0,"section":"Secondary section 0","winding":"Secondary"}]},"core":{"distributorsInfo":[],"functionalDescription":{"coating":null,"gapping":[{"area":0.0001,"coordinates":[0,0,0],"distanceClosestNormalSurface":0.012498,"distanceClosestParallelSurface":0.007500000000000001,"length":0.000005,"sectionDimensions":[0.01,0.01],"shape":"rectangular","type":"residual"},{"area":0.000051,"coordinates":[0.015001,0,0],"distanceClosestNormalSurface":0.012498,"distanceClosestParallelSurface":0.007500000000000001,"length":0.000005,"sectionDimensions":[0.005001,0.01],"shape":"rectangular","type":"residual"},{"area":0.000051,"coordinates":[-0.015001,0,0],"distanceClosestNormalSurface":0.012498,"distanceClosestParallelSurface":0.007500000000000001,"length":0.000005,"sectionDimensions":[0.005001,0.01],"shape":"rectangular","type":"residual"}],"material":"Mix 70","numberStacks":1,"shape":{"aliases":["E 35"],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0355,"minimum":0.0345,"nominal":null},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01775,"minimum":0.01725,"nominal":null},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0103,"minimum":0.0097,"nominal":null},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01275,"minimum":0.01225,"nominal":null},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0255,"minimum":0.0245,"nominal":null},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0103,"minimum":0.0097,"nominal":null}},"family":"e","familySubtype":null,"magneticCircuit":"open","name":"E 35","type":"standard"},"type":"two-piece set"},"geometricalDescription":[{"coordinates":[0,0,0],"dimensions":null,"insulationMaterial":null,"machining":null,"material":"Mix 70","rotation":[3.141592653589793,3.141592653589793,0],"shape":{"aliases":["E 35"],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0355,"minimum":0.0345,"nominal":null},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01775,"minimum":0.01725,"nominal":null},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0103,"minimum":0.0097,"nominal":null},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01275,"minimum":0.01225,"nominal":null},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0255,"minimum":0.0245,"nominal":null},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0103,"minimum":0.0097,"nominal":null}},"family":"e","familySubtype":null,"magneticCircuit":"open","name":"E 35","type":"standard"},"type":"half set"},{"coordinates":[0,0,0],"dimensions":null,"insulationMaterial":null,"machining":null,"material":"Mix 70","rotation":[0,0,0],"shape":{"aliases":["E 35"],"dimensions":{"A":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0355,"minimum":0.0345,"nominal":null},"B":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01775,"minimum":0.01725,"nominal":null},"C":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0103,"minimum":0.0097,"nominal":null},"D":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.01275,"minimum":0.01225,"nominal":null},"E":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0255,"minimum":0.0245,"nominal":null},"F":{"excludeMaximum":null,"excludeMinimum":null,"maximum":0.0103,"minimum":0.0097,"nominal":null}},"family":"e","familySubtype":null,"magneticCircuit":"open","name":"E 35","type":"standard"},"type":"half set"}],"manufacturerInfo":{"cost":null,"datasheetUrl":"https://datasheets.micrometals.com/E137-70-DataSheet.pdf","family":null,"name":"Micrometals","orderCode":null,"reference":"E137-70","status":"production"},"name":"E 35 - Mix 70 - Ungapped","processedDescription":{"columns":[{"area":0.0001,"coordinates":[0,0,0],"depth":0.01,"height":0.025,"minimumDepth":null,"minimumWidth":null,"shape":"rectangular","type":"central","width":0.01},{"area":0.000051,"coordinates":[0.015001,0,0],"depth":0.01,"height":0.025,"minimumDepth":null,"minimumWidth":null,"shape":"rectangular","type":"lateral","width":0.005001},{"area":0.000051,"coordinates":[-0.015001,0,0],"depth":0.01,"height":0.025,"minimumDepth":null,"minimumWidth":null,"shape":"rectangular","type":"lateral","width":0.005001}],"depth":0.01,"effectiveParameters":{"effectiveArea":0.00010000000000000002,"effectiveLength":0.08070796326794898,"effectiveVolume":0.000008070796326794898,"minimumArea":0.0001},"height":0.035,"width":0.035,"windingWindows":[{"angle":null,"area":0.00018750000000000003,"coordinates":[0.005,0],"height":0.025,"radialHeight":null,"sectionsAlignment":null,"sectionsOrientation":null,"shape":null,"width":0.007500000000000001}]}},"distributorsInfo":null,"manufacturerInfo":{"cost":null,"datasheetUrl":null,"family":null,"name":"","recommendations":null,"reference":"ETD 39/20/13 - N87 - Distributed gapped 0.610 mm, Turns: 100, Order: 0, Non-Interleaved, Margin Taped 01","status":null},"rotation":null},"outputs":[{"coreLosses":{"coreLosses":59.7865702887395,"eddyCurrentCoreLosses":null,"hysteresisCoreLosses":null,"magneticFluxDensity":{"harmonics":{"amplitudes":[9.231136303857917e-16,0.3223416528853849,1.4212920575579306e-16,0.035873330740282525,7.752314929708582e-17,0.01295598512403848,3.209497887970786e-17,0.006642176521737548,2.783017025078808e-17,0.004044076441357465,2.5039756831925073e-17,0.002729112562956602,2.498849488434527e-17,0.0019730157394685327,1.880882523024028e-17,0.0014988470354467304,2.3304151139079725e-17,0.001182174528815948,1.4285411774501716e-17,0.000960361043431031,1.2920016638342367e-17,0.0007990879412415138,1.218604890311036e-17,0.0006782742467291576,8.396039621660411e-18,0.0005855356606798908,5.97445038249055e-18,0.000512898906329696,4.668869044218206e-18,0.00045504336692403984,7.391044798024947e-18,0.00040830943203321675,9.501049298695066e-18,0.0003701140043672049,6.554144596535075e-18,0.00033859276128674347,7.559623462947164e-18,0.0003123739574252256,1.3947846508855625e-17,0.00029043128483042965,7.652710673753453e-18,0.0002719857465287119,1.1198985339789002e-17,0.0002564387649956738,1.1728469882727942e-17,0.0002433256921929797,8.308577786269185e-18,0.00023228294561283675,6.023924973956222e-19,0.00022302443310596805,5.899894363900111e-18,0.00021532443216818188,3.120901459024997e-18,0.00020900503749974922,1.803823155665986e-18,0.00020392690189998967,7.154354291093534e-18,0.00019998239790702357,5.670533624278814e-18,0.00019709059801350726,7.438506117455859e-18,0.00019519365720053114,9.930757365775466e-18,0.00019425431281197466],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]},"processed":{"acEffectiveFrequency":null,"average":null,"dutyCycle":0.4999999999999997,"effectiveFrequency":null,"label":"Triangular","offset":-6.106226635438361e-16,"peak":0.3975932291047055,"peakToPeak":0.7951864582094098,"phase":null,"rms":null,"thd":null},"waveform":{"ancillaryLabel":null,"data":[-0.3975932291047055,0.3975932291047043,-0.3975932291047055],"numberPeriods":null,"time":[0,0.000005000000000000008,0.000010000000000000021]}},"methodUsed":"Steinmetz","origin":"simulation","temperature":880.3971829821239,"volumetricLosses":5096703.647477362},"impedance":null,"insulation":null,"insulationCoordination":null,"leakageInductance":{"leakageInductancePerWinding":[],"methodUsed":"","origin":"manufacturer"},"magnetizingInductance":{"coreReluctance":10062218.989929749,"gappingReluctance":9841317.63000899,"magnetizingInductance":{"excludeMaximum":null,"excludeMinimum":null,"maximum":null,"minimum":null,"nominal":0.000993816573661136},"maximumFringingFactor":1.239813380992307,"maximumMagneticEnergyCore":null,"maximumStorableMagneticEnergyGapping":0.01743569972364834,"methodUsed":"Default","origin":"simulation","reluctancePerGap":[{"fringingFactor":1.1968438911405217,"maximumStorableMagneticEnergy":0.0057167944418751,"methodUsed":"Zhang","origin":"simulation","reluctance":3297443.4165504244},{"fringingFactor":1.239813380992307,"maximumStorableMagneticEnergy":0.005922040708805373,"methodUsed":"Zhang","origin":"simulation","reluctance":3183160.522369289},{"fringingFactor":1.1968438911405217,"maximumStorableMagneticEnergy":0.0057167944418751,"methodUsed":"Zhang","origin":"simulation","reluctance":3297443.4165504244},{"fringingFactor":1.0143053860884843,"maximumStorableMagneticEnergy":0.000040035065546383376,"methodUsed":"Zhang","origin":"simulation","reluctance":126540.54907770373},{"fringingFactor":1.0143053860884843,"maximumStorableMagneticEnergy":0.000040035065546383376,"methodUsed":"Zhang","origin":"simulation","reluctance":126540.54907770373}],"ungappedCoreReluctance":220901.3599207589},"strayCapacitance":null,"temperature":null,"windingLosses":{"currentDividerPerTurn":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"currentPerWinding":{"conditions":{"ambientRelativeHumidity":null,"ambientTemperature":42,"cooling":null,"name":null},"excitationsPerWinding":[{"current":{"harmonics":{"amplitudes":[1.1608769501236793e-14,4.05366124583194,1.787369544444173e-15,0.4511310569983995,9.749053004706756e-16,0.16293015292554872,4.036157626725542e-16,0.08352979924600704,3.4998295008010614e-16,0.0508569581336163,3.1489164048780735e-16,0.034320410449418075,3.142469873118059e-16,0.024811988673843106,2.3653352035940994e-16,0.018849001010678823,2.9306524147249266e-16,0.014866633059596499,1.796485796132569e-16,0.012077180559557785,1.6247782523152451e-16,0.010049063750920609,1.5324769149805092e-16,0.008529750975091871,1.0558579733068502e-16,0.007363501410705499,7.513269775674661e-17,0.006450045785294609,5.871414177162291e-17,0.005722473794997712,9.294731722001391e-17,0.005134763398167541,1.194820309200107e-16,0.004654430423785411,8.2422739080512e-17,0.004258029771397032,9.5067306351894e-17,0.0039283108282380024,1.7540347128474968e-16,0.0036523670873925395,9.623794010508822e-17,0.0034204021424253787,1.4083470894369491e-16,0.0032248884817922927,1.4749333016985644e-16,0.0030599828465501895,1.0448590642474364e-16,0.002921112944200383,7.575487373767413e-18,0.002804680975178716,7.419510610361002e-17,0.0027078483284668376,3.924741709073613e-17,0.0026283777262804953,2.2684279102637236e-17,0.0025645167846443107,8.997077625295079e-17,0.0025149120164513483,7.131074184849219e-17,0.0024785457043284276,9.354417496250849e-17,0.0024546904085875065,1.2488589642405877e-16,0.0024428775264784264],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]},"processed":{"acEffectiveFrequency":110746.40291779551,"average":-1.2073675392798577e-14,"dutyCycle":0.5,"effectiveFrequency":110746.40291779551,"label":"Triangular","offset":0,"peak":5,"peakToPeak":10,"phase":null,"rms":2.8874560332150576,"thd":0.12151487440704967},"waveform":{"ancillaryLabel":null,"data":[-5,-4.84375,-4.6875,-4.53125,-4.375,-4.21875,-4.0625,-3.90625,-3.75,-3.59375,-3.4375,-3.28125,-3.125,-2.96875,-2.8125,-2.65625,-2.5,-2.34375,-2.1875,-2.03125,-1.875,-1.71875,-1.5625,-1.40625,-1.25,-1.09375,-0.9375,-0.7812499999999996,-0.6249999999999991,-0.4687499999999991,-0.3124999999999982,-0.15624999999999822,1.7763568394002505e-15,0.15625000000000355,0.31250000000000355,0.46875000000000355,0.6250000000000044,0.7812500000000044,0.9375000000000044,1.0937500000000053,1.2500000000000053,1.4062500000000069,1.5625000000000069,1.7187500000000069,1.875000000000008,2.031250000000008,2.187500000000008,2.343750000000009,2.500000000000009,2.656250000000009,2.8125000000000098,2.9687500000000098,3.12500000000001,3.2812500000000107,3.4375000000000107,3.5937500000000124,3.7500000000000124,3.9062500000000124,4.062500000000014,4.218750000000014,4.375000000000014,4.531250000000014,4.687500000000014,4.843750000000014,4.999999999999984,4.843749999999984,4.687499999999984,4.531249999999984,4.374999999999984,4.218749999999982,4.062499999999982,3.9062499999999822,3.7499999999999822,3.593749999999981,3.4374999999999805,3.2812499999999805,3.1249999999999805,2.96874999999998,2.8124999999999787,2.6562499999999787,2.499999999999978,2.343749999999978,2.187499999999978,2.031249999999978,1.874999999999977,1.718749999999977,1.5624999999999756,1.4062499999999754,1.2499999999999751,1.0937499999999751,0.9374999999999742,0.7812499999999738,0.6249999999999738,0.46874999999997335,0.3124999999999729,0.15624999999997247,-2.7533531010703882e-14,-0.15625000000002842,-0.3125000000000284,-0.4687500000000284,-0.6250000000000302,-0.7812500000000302,-0.9375000000000302,-1.093750000000031,-1.250000000000031,-1.406250000000031,-1.562500000000032,-1.718750000000032,-1.875000000000032,-2.0312500000000338,-2.1875000000000338,-2.3437500000000346,-2.5000000000000346,-2.6562500000000346,-2.8125000000000355,-2.9687500000000355,-3.1250000000000355,-3.281250000000037,-3.437500000000037,-3.593750000000037,-3.7500000000000373,-3.9062500000000373,-4.062500000000037,-4.218750000000039,-4.375000000000039,-4.531250000000039,-4.687500000000039,-4.843750000000039],"numberPeriods":null,"time":[0,7.8125e-8,1.5625e-7,2.3437500000000003e-7,3.125e-7,3.90625e-7,4.6875e-7,5.468750000000001e-7,6.25e-7,7.03125e-7,7.8125e-7,8.59375e-7,9.375e-7,0.0000010156250000000001,0.0000010937500000000001,0.0000011718750000000001,0.00000125,0.000001328125,0.00000140625,0.000001484375,0.0000015625,0.000001640625,0.00000171875,0.000001796875,0.000001875,0.000001953125,0.0000020312500000000002,0.0000021093750000000005,0.0000021875000000000007,0.000002265625000000001,0.000002343750000000001,0.0000024218750000000013,0.0000025000000000000015,0.0000025781250000000017,0.000002656250000000002,0.000002734375000000002,0.0000028125000000000023,0.0000028906250000000025,0.0000029687500000000027,0.000003046875000000003,0.000003125000000000003,0.0000032031250000000033,0.0000032812500000000035,0.0000033593750000000037,0.000003437500000000004,0.000003515625000000004,0.0000035937500000000043,0.0000036718750000000045,0.0000037500000000000048,0.000003828125000000005,0.000003906250000000005,0.000003984375000000005,0.0000040625000000000056,0.000004140625000000006,0.000004218750000000006,0.000004296875000000006,0.000004375000000000006,0.000004453125000000007,0.000004531250000000007,0.000004609375000000007,0.000004687500000000007,0.000004765625000000007,0.000004843750000000008,0.000004921875000000008,0.000005000000000000008,0.000005078125000000008,0.0000051562500000000084,0.000005234375000000009,0.000005312500000000009,0.000005390625000000009,0.000005468750000000009,0.0000055468750000000095,0.00000562500000000001,0.00000570312500000001,0.00000578125000000001,0.00000585937500000001,0.0000059375000000000105,0.000006015625000000011,0.000006093750000000011,0.000006171875000000011,0.000006250000000000011,0.0000063281250000000115,0.000006406250000000012,0.000006484375000000012,0.000006562500000000012,0.000006640625000000012,0.0000067187500000000125,0.000006796875000000013,0.000006875000000000013,0.000006953125000000013,0.000007031250000000013,0.0000071093750000000136,0.000007187500000000014,0.000007265625000000014,0.000007343750000000014,0.000007421875000000014,0.000007500000000000015,0.000007578125000000015,0.000007656250000000015,0.000007734375000000015,0.000007812500000000015,0.000007890625000000016,0.000007968750000000016,0.000008046875000000016,0.000008125000000000016,0.000008203125000000016,0.000008281250000000017,0.000008359375000000017,0.000008437500000000017,0.000008515625000000017,0.000008593750000000017,0.000008671875000000018,0.000008750000000000018,0.000008828125000000018,0.000008906250000000018,0.000008984375000000018,0.000009062500000000019,0.000009140625000000019,0.000009218750000000019,0.00000929687500000002,0.00000937500000000002,0.00000945312500000002,0.00000953125000000002,0.00000960937500000002,0.00000968750000000002,0.00000976562500000002,0.00000984375000000002,0.000009921875000000021]}},"frequency":100000,"magneticFieldStrength":null,"magneticFluxDensity":{"harmonics":{"amplitudes":[9.231136303857917e-16,0.3223416528853849,1.4212920575579306e-16,0.035873330740282525,7.752314929708582e-17,0.01295598512403848,3.209497887970786e-17,0.006642176521737548,2.783017025078808e-17,0.004044076441357465,2.5039756831925073e-17,0.002729112562956602,2.498849488434527e-17,0.0019730157394685327,1.880882523024028e-17,0.0014988470354467304,2.3304151139079725e-17,0.001182174528815948,1.4285411774501716e-17,0.000960361043431031,1.2920016638342367e-17,0.0007990879412415138,1.218604890311036e-17,0.0006782742467291576,8.396039621660411e-18,0.0005855356606798908,5.97445038249055e-18,0.000512898906329696,4.668869044218206e-18,0.00045504336692403984,7.391044798024947e-18,0.00040830943203321675,9.501049298695066e-18,0.0003701140043672049,6.554144596535075e-18,0.00033859276128674347,7.559623462947164e-18,0.0003123739574252256,1.3947846508855625e-17,0.00029043128483042965,7.652710673753453e-18,0.0002719857465287119,1.1198985339789002e-17,0.0002564387649956738,1.1728469882727942e-17,0.0002433256921929797,8.308577786269185e-18,0.00023228294561283675,6.023924973956222e-19,0.00022302443310596805,5.899894363900111e-18,0.00021532443216818188,3.120901459024997e-18,0.00020900503749974922,1.803823155665986e-18,0.00020392690189998967,7.154354291093534e-18,0.00019998239790702357,5.670533624278814e-18,0.00019709059801350726,7.438506117455859e-18,0.00019519365720053114,9.930757365775466e-18,0.00019425431281197466],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]},"processed":{"acEffectiveFrequency":null,"average":null,"dutyCycle":0.4999999999999997,"effectiveFrequency":null,"label":"Triangular","offset":-6.106226635438361e-16,"peak":0.3975932291047055,"peakToPeak":0.7951864582094098,"phase":null,"rms":null,"thd":null},"waveform":{"ancillaryLabel":null,"data":[-0.3975932291047055,0.3975932291047043,-0.3975932291047055],"numberPeriods":null,"time":[0,0.000005000000000000008,0.000010000000000000021]}},"magnetizingCurrent":{"harmonics":{"amplitudes":[1.1608769501236793e-14,4.05366124583194,1.787369544444173e-15,0.4511310569983995,9.749053004706756e-16,0.16293015292554872,4.036157626725542e-16,0.08352979924600704,3.4998295008010614e-16,0.0508569581336163,3.1489164048780735e-16,0.034320410449418075,3.142469873118059e-16,0.024811988673843106,2.3653352035940994e-16,0.018849001010678823,2.9306524147249266e-16,0.014866633059596499,1.796485796132569e-16,0.012077180559557785,1.6247782523152451e-16,0.010049063750920609,1.5324769149805092e-16,0.008529750975091871,1.0558579733068502e-16,0.007363501410705499,7.513269775674661e-17,0.006450045785294609,5.871414177162291e-17,0.005722473794997712,9.294731722001391e-17,0.005134763398167541,1.194820309200107e-16,0.004654430423785411,8.2422739080512e-17,0.004258029771397032,9.5067306351894e-17,0.0039283108282380024,1.7540347128474968e-16,0.0036523670873925395,9.623794010508822e-17,0.0034204021424253787,1.4083470894369491e-16,0.0032248884817922927,1.4749333016985644e-16,0.0030599828465501895,1.0448590642474364e-16,0.002921112944200383,7.575487373767413e-18,0.002804680975178716,7.419510610361002e-17,0.0027078483284668376,3.924741709073613e-17,0.0026283777262804953,2.2684279102637236e-17,0.0025645167846443107,8.997077625295079e-17,0.0025149120164513483,7.131074184849219e-17,0.0024785457043284276,9.354417496250849e-17,0.0024546904085875065,1.2488589642405877e-16,0.0024428775264784264],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]},"processed":{"acEffectiveFrequency":110746.40291779551,"average":-1.2073675392798577e-14,"dutyCycle":0.5,"effectiveFrequency":110746.40291779551,"label":"Triangular","offset":0,"peak":5,"peakToPeak":10,"phase":null,"rms":2.8874560332150576,"thd":0.12151487440704967},"waveform":{"ancillaryLabel":null,"data":[-5,-4.84375,-4.6875,-4.53125,-4.375,-4.21875,-4.0625,-3.90625,-3.75,-3.59375,-3.4375,-3.28125,-3.125,-2.96875,-2.8125,-2.65625,-2.5,-2.34375,-2.1875,-2.03125,-1.875,-1.71875,-1.5625,-1.40625,-1.25,-1.09375,-0.9375,-0.7812499999999996,-0.6249999999999991,-0.4687499999999991,-0.3124999999999982,-0.15624999999999822,1.7763568394002505e-15,0.15625000000000355,0.31250000000000355,0.46875000000000355,0.6250000000000044,0.7812500000000044,0.9375000000000044,1.0937500000000053,1.2500000000000053,1.4062500000000069,1.5625000000000069,1.7187500000000069,1.875000000000008,2.031250000000008,2.187500000000008,2.343750000000009,2.500000000000009,2.656250000000009,2.8125000000000098,2.9687500000000098,3.12500000000001,3.2812500000000107,3.4375000000000107,3.5937500000000124,3.7500000000000124,3.9062500000000124,4.062500000000014,4.218750000000014,4.375000000000014,4.531250000000014,4.687500000000014,4.843750000000014,4.999999999999984,4.843749999999984,4.687499999999984,4.531249999999984,4.374999999999984,4.218749999999982,4.062499999999982,3.9062499999999822,3.7499999999999822,3.593749999999981,3.4374999999999805,3.2812499999999805,3.1249999999999805,2.96874999999998,2.8124999999999787,2.6562499999999787,2.499999999999978,2.343749999999978,2.187499999999978,2.031249999999978,1.874999999999977,1.718749999999977,1.5624999999999756,1.4062499999999754,1.2499999999999751,1.0937499999999751,0.9374999999999742,0.7812499999999738,0.6249999999999738,0.46874999999997335,0.3124999999999729,0.15624999999997247,-2.7533531010703882e-14,-0.15625000000002842,-0.3125000000000284,-0.4687500000000284,-0.6250000000000302,-0.7812500000000302,-0.9375000000000302,-1.093750000000031,-1.250000000000031,-1.406250000000031,-1.562500000000032,-1.718750000000032,-1.875000000000032,-2.0312500000000338,-2.1875000000000338,-2.3437500000000346,-2.5000000000000346,-2.6562500000000346,-2.8125000000000355,-2.9687500000000355,-3.1250000000000355,-3.281250000000037,-3.437500000000037,-3.593750000000037,-3.7500000000000373,-3.9062500000000373,-4.062500000000037,-4.218750000000039,-4.375000000000039,-4.531250000000039,-4.687500000000039,-4.843750000000039],"numberPeriods":null,"time":[0,7.8125e-8,1.5625e-7,2.3437500000000003e-7,3.125e-7,3.90625e-7,4.6875e-7,5.468750000000001e-7,6.25e-7,7.03125e-7,7.8125e-7,8.59375e-7,9.375e-7,0.0000010156250000000001,0.0000010937500000000001,0.0000011718750000000001,0.00000125,0.000001328125,0.00000140625,0.000001484375,0.0000015625,0.000001640625,0.00000171875,0.000001796875,0.000001875,0.000001953125,0.0000020312500000000002,0.0000021093750000000005,0.0000021875000000000007,0.000002265625000000001,0.000002343750000000001,0.0000024218750000000013,0.0000025000000000000015,0.0000025781250000000017,0.000002656250000000002,0.000002734375000000002,0.0000028125000000000023,0.0000028906250000000025,0.0000029687500000000027,0.000003046875000000003,0.000003125000000000003,0.0000032031250000000033,0.0000032812500000000035,0.0000033593750000000037,0.000003437500000000004,0.000003515625000000004,0.0000035937500000000043,0.0000036718750000000045,0.0000037500000000000048,0.000003828125000000005,0.000003906250000000005,0.000003984375000000005,0.0000040625000000000056,0.000004140625000000006,0.000004218750000000006,0.000004296875000000006,0.000004375000000000006,0.000004453125000000007,0.000004531250000000007,0.000004609375000000007,0.000004687500000000007,0.000004765625000000007,0.000004843750000000008,0.000004921875000000008,0.000005000000000000008,0.000005078125000000008,0.0000051562500000000084,0.000005234375000000009,0.000005312500000000009,0.000005390625000000009,0.000005468750000000009,0.0000055468750000000095,0.00000562500000000001,0.00000570312500000001,0.00000578125000000001,0.00000585937500000001,0.0000059375000000000105,0.000006015625000000011,0.000006093750000000011,0.000006171875000000011,0.000006250000000000011,0.0000063281250000000115,0.000006406250000000012,0.000006484375000000012,0.000006562500000000012,0.000006640625000000012,0.0000067187500000000125,0.000006796875000000013,0.000006875000000000013,0.000006953125000000013,0.000007031250000000013,0.0000071093750000000136,0.000007187500000000014,0.000007265625000000014,0.000007343750000000014,0.000007421875000000014,0.000007500000000000015,0.000007578125000000015,0.000007656250000000015,0.000007734375000000015,0.000007812500000000015,0.000007890625000000016,0.000007968750000000016,0.000008046875000000016,0.000008125000000000016,0.000008203125000000016,0.000008281250000000017,0.000008359375000000017,0.000008437500000000017,0.000008515625000000017,0.000008593750000000017,0.000008671875000000018,0.000008750000000000018,0.000008828125000000018,0.000008906250000000018,0.000008984375000000018,0.000009062500000000019,0.000009140625000000019,0.000009218750000000019,0.00000929687500000002,0.00000937500000000002,0.00000945312500000002,0.00000953125000000002,0.00000960937500000002,0.00000968750000000002,0.00000976562500000002,0.00000984375000000002,0.000009921875000000021]}},"name":"Primary winding excitation","voltage":{"harmonics":{"amplitudes":[24.2890625,57.92076613061847,1.421875,19.27588907896988,1.421875,11.528257939603122,1.421875,8.194467538528329,1.421875,6.331896912839248,1.421875,5.137996046859012,1.421875,4.304077056139349,1.421875,3.6860723299088454,1.421875,3.207698601961777,1.421875,2.8247804703632298,1.421875,2.509960393415185,1.421875,2.2453859950684323,1.421875,2.01890737840567,1.421875,1.8219644341144872,1.421875,1.6483482744897402,1.421875,1.4934420157473332,1.421875,1.3537375367153817,1.421875,1.2265178099275544,1.421875,1.1096421410704556,1.421875,1.0013973584174929,1.421875,0.9003924136274832,1.421875,0.8054822382572133,1.421875,0.7157117294021269,1.421875,0.6302738400635857,1.421875,0.5484777114167545,1.421875,0.46972405216147894,1.421875,0.3934858059809043,1.421875,0.31929270856030145,1.421875,0.24671871675852053,1.421875,0.17537155450693565,1.421875,0.10488380107099537,1.421875,0.034905072061178544],"frequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000]},"processed":{"acEffectiveFrequency":591485.5360118389,"average":24.2890625,"dutyCycle":0.4921874999999997,"effectiveFrequency":553357.3374711702,"label":"Unipolar Rectangular","offset":-20.5,"peak":70.5,"peakToPeak":111.5,"phase":null,"rms":51.572309672924284,"thd":0.4833151484524849},"waveform":{"ancillaryLabel":null,"data":[-20.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,70.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5,-20.5],"numberPeriods":null,"time":[0,7.8125e-8,1.5625e-7,2.3437500000000003e-7,3.125e-7,3.90625e-7,4.6875e-7,5.468750000000001e-7,6.25e-7,7.03125e-7,7.8125e-7,8.59375e-7,9.375e-7,0.0000010156250000000001,0.0000010937500000000001,0.0000011718750000000001,0.00000125,0.000001328125,0.00000140625,0.000001484375,0.0000015625,0.000001640625,0.00000171875,0.000001796875,0.000001875,0.000001953125,0.0000020312500000000002,0.0000021093750000000005,0.0000021875000000000007,0.000002265625000000001,0.000002343750000000001,0.0000024218750000000013,0.0000025000000000000015,0.0000025781250000000017,0.000002656250000000002,0.000002734375000000002,0.0000028125000000000023,0.0000028906250000000025,0.0000029687500000000027,0.000003046875000000003,0.000003125000000000003,0.0000032031250000000033,0.0000032812500000000035,0.0000033593750000000037,0.000003437500000000004,0.000003515625000000004,0.0000035937500000000043,0.0000036718750000000045,0.0000037500000000000048,0.000003828125000000005,0.000003906250000000005,0.000003984375000000005,0.0000040625000000000056,0.000004140625000000006,0.000004218750000000006,0.000004296875000000006,0.000004375000000000006,0.000004453125000000007,0.000004531250000000007,0.000004609375000000007,0.000004687500000000007,0.000004765625000000007,0.000004843750000000008,0.000004921875000000008,0.000005000000000000008,0.000005078125000000008,0.0000051562500000000084,0.000005234375000000009,0.000005312500000000009,0.000005390625000000009,0.000005468750000000009,0.0000055468750000000095,0.00000562500000000001,0.00000570312500000001,0.00000578125000000001,0.00000585937500000001,0.0000059375000000000105,0.000006015625000000011,0.000006093750000000011,0.000006171875000000011,0.000006250000000000011,0.0000063281250000000115,0.000006406250000000012,0.000006484375000000012,0.000006562500000000012,0.000006640625000000012,0.0000067187500000000125,0.000006796875000000013,0.000006875000000000013,0.000006953125000000013,0.000007031250000000013,0.0000071093750000000136,0.000007187500000000014,0.000007265625000000014,0.000007343750000000014,0.000007421875000000014,0.000007500000000000015,0.000007578125000000015,0.000007656250000000015,0.000007734375000000015,0.000007812500000000015,0.000007890625000000016,0.000007968750000000016,0.000008046875000000016,0.000008125000000000016,0.000008203125000000016,0.000008281250000000017,0.000008359375000000017,0.000008437500000000017,0.000008515625000000017,0.000008593750000000017,0.000008671875000000018,0.000008750000000000018,0.000008828125000000018,0.000008906250000000018,0.000008984375000000018,0.000009062500000000019,0.000009140625000000019,0.000009218750000000019,0.00000929687500000002,0.00000937500000000002,0.00000945312500000002,0.00000953125000000002,0.00000960937500000002,0.00000968750000000002,0.00000976562500000002,0.00000984375000000002,0.000009921875000000021]}}}],"name":"Operating Point No. 1"},"dcResistancePerTurn":[0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0016033026259511004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0018316084615733004,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0020599142971955008,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0022882201328177005,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002,0.0025165259684399002],"dcResistancePerWinding":[0.20599142971955017],"methodUsed":"AnalyticalModels","origin":"simulation","resistanceMatrix":null,"temperature":42,"windingLosses":17.125626680633783,"windingLossesPerLayer":null,"windingLossesPerSection":null,"windingLossesPerTurn":[{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0016033026259511004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0018316084615733004,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0020599142971955008,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0022882201328177005,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null},{"ohmicLosses":{"losses":0.0025165259684399002,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":null,"skinEffectLosses":null}],"windingLossesPerWinding":[{"ohmicLosses":{"losses":1.7174334289361983,"methodUsed":"Ohm","origin":"simulation"},"proximityEffectLosses":{"harmonicFrequencies":[0,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000],"lossesPerHarmonic":[0,0.2848467634194178,1.8558126703042228e-32,0.002592388567608125,2.0784375241549728e-32,0.0008688695926974773,7.303878084485423e-33,0.00040271781936784514,8.693903724190337e-33,0.000217988245564717,9.65580454889624e-33,0.00012967669314389244,1.2077616678133898e-32,0.00008246206562701285,8.112039216735706e-33,0.0000552251480110898,1.419763968882981e-32,0.000038594180621414645,5.9196977363629445e-33,0.000027968143337515662,5.2704200768666266e-33,0.000020918357201068832,5.032639768113388e-33,0.00001608804850853617,2.538079120009347e-33,0.000012685070722677361,1.3548233373747759e-33,0.00001022855482846659,8.671138015977193e-34,0.000008417109343089475,2.2668963392446918e-33,0.000007056130607319376,3.893515055023434e-33,0.000006016770342422942,1.9201389286413844e-33,0.000005211927330087669,2.6408609062132004e-33,0.000004581171864976908,9.275126607711196e-33,0.000004082092819155452,2.875692927441165e-33,0.0000036843176637100104,6.333195756788915e-33,0.0000033658114392842144,7.133897005753274e-33,0.000003110383352214864,3.672518507150572e-33,0.0000029060467828223096,1.9782195424439177e-35,0.0000027438645451029744,1.9426119196380463e-33,0.0000026171445344034052,5.559724552124235e-34,0.0000025209800913929275,1.898105909586541e-34,0.0000024517435261302274,3.0491583571628942e-33,0.0000024068995766449617,1.954709851122112e-33,0.0000023848071026034688,3.430117972861359e-33,0.000002384604771143745,6.230661735614583e-33,0.0000024061732817225046,0.310171633629549,1.6093523046401004e-32,0.002248107571718894,1.8024115650643415e-32,0.000753479757851941,6.333889845762299e-33,0.0003492350607850044,7.53931375657179e-33,0.0001890384148129132,8.373469775574454e-33,0.00011245503832831313,1.0473654235978557e-32,0.00007151072814933476,7.034723502908492e-33,0.000047890997107573636,1.2312128545777404e-32,0.00003346869785008416,5.133534945219844e-33,0.000024253846660803803,4.5704843128031395e-33,0.000018140304196385416,4.364282310837431e-33,0.000013951482473783328,2.2010106658428838e-33,0.000011000435619785312,1.174896634382206e-33,0.000008870156212281823,7.519571437982291e-34,0.0000072992789285613325,1.9658421921139248e-33,0.000006119044360694783,3.376438542110879e-33,0.00000521771586756179,1.6651357432168054e-33,0.000004519759668910062,2.290142563231579e-33,0.000003972771399197511,8.043347596878809e-33,0.000003539972321228782,2.4937878236686497e-33,0.0000031950235161105616,5.49211854731777e-33,0.000002918816367337381,6.186483027617257e-33,0.0000026973102923047778,3.184791341222661e-33,0.0000025201105489598585,1.7155029872677327e-35,0.000002379466850260183,1.684624218767898e-33,0.000002269575833496117,4.8213678375514636e-34,0.0000021861824660190143,1.646028809331998e-34,0.000002126140831615997,2.6442162551397458e-33,0.0000020872523626405984,1.695115489911159e-33,0.000002068093869661861,2.9745827006919366e-33,0.000002067918408740496,5.4032015106354635e-33,0.0000020866225229881357,0.320353049992474,1.4553415775954208e-32,0.0020329696677330415,1.6299255812502661e-32,0.0006813737528549944,5.7277534657078914e-33,0.00031581419608936554,6.817821520397165e-33,0.00017094794225400316,7.572151031192216e-33,0.00010169339082400615,9.471353435186294e-33,0.00006466734202311523,6.361519209406386e-33,0.00004330795630155107,1.1133890652597897e-32,0.000030265832651290506,4.6422693305107106e-33,0.00002193281816561927,4.1331011432313755e-33,0.000016404325424029704,3.94663212337856e-33,0.000012616362778149635,1.9903798102482406e-33,0.000009947723244299455,1.0624621572687465e-33,0.000008021305899448118,6.799968489088485e-34,0.000006600757385796316,1.777716332791732e-33,0.0000055334681210534625,3.0533223709699295e-33,0.000004718394362905008,1.5057866897488315e-33,0.000004087230712590752,2.0709820225703863e-33,0.0000035925877627068397,7.273620665307163e-33,0.000003201206403201648,2.255138974245798e-33,0.000002889268279533524,4.9665374374208116e-33,0.0000026394934188770255,5.5944530872581295e-33,0.0000024391848849684052,2.8800152965162837e-33,0.00000227894268486992,1.5513339227598172e-35,0.000002151758213356571,1.5234101701214527e-33,0.00000205238347406557,4.359975783201258e-34,0.0000019769706296341807,1.488508238521742e-34,0.000001922674819648042,2.3911718056781327e-33,0.000001887507873525836,1.5328974545728376e-33,0.0000018701827972727142,2.689923062732466e-33,0.0000018700241274939653,4.886129524207999e-33,0.000001886938307849753,0.24104120065589466,1.342987142249969e-32,0.001876021524005869,1.5040930130369298e-32,0.0006287707320660725,5.285562768798892e-33,0.0002914328919186119,6.291476022540963e-33,0.00015775051848689698,6.987570224488571e-33,0.00009384251671974703,8.740151507370978e-33,0.00005967493143707055,5.8704008975850276e-33,0.0000399645206084227,1.027433849197214e-32,0.000027929267414547862,4.283879549458199e-33,0.000020239573474153673,3.814019868895312e-33,0.000015137888218761952,3.6419465220291774e-33,0.000011642361665370017,1.8367196639663508e-33,0.000009179744891112603,9.804385707832476e-34,0.000007402049699433075,6.275001270587984e-34,0.000006091169547208752,1.6404741088011182e-33,0.000005106276528499473,2.817601550374138e-33,0.000004354127621307986,1.389537820148778e-33,0.000003771690700603695,1.9110992710991275e-33,0.0000033152348884937456,6.712086826551693e-33,0.000002954068725426903,2.081039044732654e-33,0.000002666212667637335,4.583113698283616e-33,0.0000024357207807270527,5.162553368757647e-33,0.000002250876349932534,2.6576740280417137e-33,0.0000021030050751121733,1.4315687421264785e-35,0.000001985639425311593,1.4058007428237622e-33,0.0000018939365569356614,4.023379464658092e-34,0.0000018243456911272441,1.3735932898795925e-34,0.0000017742415947336576,2.2065699485080656e-33,0.000001741789586764262,1.4145555954502712e-33,0.000001725802030987229,2.4822571845024467e-33,0.0000017256556107405992,4.508913390093163e-33,0.000001741263992366754,0.0914818962217621,1.2584156008613964e-32,0.0017578833624613674,1.40937619818254e-32,0.0005891753343753988,4.952716551288215e-33,0.0002730805725958862,5.8952847202593076e-33,0.0001478165406522825,6.547543983093698e-33,0.00008793299902066041,8.189760471080302e-33,0.00005591703921672114,5.50072583752014e-33,0.000037447846395855586,9.627335541848369e-33,0.000026170485724989196,4.01411203998399e-33,0.000018965032659943965,3.573840697366742e-33,0.00001418461435652395,3.412603275669615e-33,0.000010909210587099823,1.7210564471018187e-33,0.00000860167146764362,9.18697695863899e-34,0.000006935922561784454,5.879847428102349e-34,0.0000057075920867398906,1.5371690065966977e-33,0.000004784720451612539,2.6401695418034856e-33,0.000004079936400296254,1.3020348563669944e-33,0.0000035341771115632202,1.7907521687190898e-33,0.000003106465559462522,6.289408521602028e-33,0.0000027680430088600435,1.9499903740745068e-33,0.0000024983140274507588,4.294502603188871e-33,0.000002282336839557552,4.8374533866646395e-33,0.0000021091325637113505,2.4903130891400125e-33,0.0000019705731439677973,1.3414189772355792e-35,0.0000018605983273311744,1.3172736587098938e-33,0.0000017746702371972082,3.770016351778836e-34,0.0000017094616968801016,1.2870943963968905e-34,0.0000016625127912761955,2.0676162565059287e-33,0.0000016321043742309315,1.3254771945307831e-33,0.0000016171235981858579,2.3259427198199856e-33,0.0000016169863984191252,4.224974889573418e-33,0.0000016316118779375998,0.02610248787029293,1.194664312473206e-32,0.0016688290555087475,1.3379772514464356e-32,0.0005593277334498669,4.701812111649983e-33,0.00025924632075980324,5.5966298115991784e-33,0.00014032816010040605,6.215845643995837e-33,0.00008347831650117534,7.774867504667096e-33,0.00005308428405183059,5.222059267452134e-33,0.00003555073986486163,9.13961507484357e-33,0.000024844689873784897,3.810757270614982e-33,0.000018004264797905437,3.39279005813808e-33,0.000013466022311178176,3.239720918336493e-33,0.000010356550377110662,1.6338677903365676e-33,0.000008165911105185576,8.721565041379739e-34,0.000006584548978071882,5.581974572099194e-34,0.0000054184456800402,1.459296080852728e-33,0.000004542326688249448,2.5064186492223558e-33,0.000003873246971237428,1.236073818087662e-33,0.000003355135828143035,1.7000327292416688e-33,0.0000029490921276537334,5.970787315557436e-33,0.00000262781405110717,1.8512039329284147e-33,0.0000023717495300468396,4.076943258126461e-33,0.0000021667137386058276,4.592388174737365e-33,0.000002002283985049383,2.364153918978759e-33,0.0000018707439804504972,1.2734627408311682e-35,0.0000017663404840089193,1.2505406232603198e-33,0.0000016847655077834494,3.5790274610610747e-34,0.0000016228604297376961,1.2218902412740877e-34,0.00000157828995397733,1.9628708924510078e-33,0.0000015494220262292063,1.2583285682560778e-33,0.0000015352001757515478,2.208110546566447e-33,0.0000015350699265199885,4.010937815943936e-33,0.0000015489544797801108,0.018750617833038215,1.1474769016438738e-32,0.001602912863467158,1.2851291989976273e-32,0.0005372351445351631,4.516097733612317e-33,0.00024900648810056823,5.375571504740666e-33,0.00013478541267550497,5.970329260027077e-33,0.00008018105083838246,7.467772144693687e-33,0.000050987536125252806,5.015795923468706e-33,0.00003414654008273449,8.778614275827675e-33,0.000023863362671020624,3.6602381942335125e-33,0.00001729312391018608,3.258780046572906e-33,0.000012934135051803154,3.111756903382833e-33,0.000009947482497274454,1.5693325147294678e-33,0.000007843370121837309,8.377076578482295e-34,0.000006324469377040772,5.361495124757845e-34,0.000005204425373506425,1.4016561204304755e-33,0.000004362911740199534,2.40741895091689e-33,0.0000037202596473783273,1.1872507952012306e-33,0.000003222613100998838,1.6328840398730504e-33,0.0000028326075048620342,5.7349503602787584e-33,0.0000025240194203326235,1.778084212518313e-33,0.000002278069055716017,3.915910242876494e-33,0.0000020811318640443534,4.4109958746355264e-33,0.000001923196833945054,2.2707734596531786e-33,0.0000017968524580869738,1.223162912753902e-35,0.0000016965727398709367,1.2011461837240862e-33,0.0000016182198502821516,3.437661357285092e-34,0.0000015587599280175392,1.173627447951009e-34,0.0000015159499177943156,1.8853404981469585e-33,0.0000014882222289837904,1.208626516819e-33,0.0000014745621198206059,2.1208935614857547e-33,0.000001474437015234229,3.852511914579202e-33,0.0000014877731499034327,0.034525169102782936,1.11408982468433e-32,0.001556274386426485,1.2477369801142474e-32,0.000521603709087294,4.3846970035645666e-33,0.00024176137600312269,5.219163459164157e-33,0.0001308636858507,5.796616096657273e-33,0.00007784809676218009,7.25048926696949e-33,0.00004950399881818147,4.869855936118804e-33,0.00003315300970315897,8.523191033751671e-33,0.000023169032419257404,3.553739619747121e-33,0.00001678996183517334,3.163962329498788e-33,0.000012557802454814896,3.0212169830900617e-33,0.000009658049774738232,1.5236710941210657e-33,0.000007615158816228612,8.133336508402368e-34,0.000006140452125349666,5.205496646625459e-34,0.0000050529970090430295,1.3608734252001093e-33,0.0000042359681217013675,2.3373725023365493e-33,0.000003612014684034348,1.1527064539488038e-33,0.000003128847700179226,1.5853735191582983e-33,0.000002750189737126994,5.568085799638381e-33,0.000002450580355447479,1.7263489363146253e-33,0.0000022117861817223144,3.801972614625954e-33,0.0000020205790898592993,4.282653196431107e-33,0.0000018672393496494778,2.2047028588885634e-33,0.000001744571099554048,1.1875736697428489e-35,0.000001647209127799629,1.1661975411690975e-33,0.0000015711359999654864,3.3376388957156253e-34,0.000001513406128212403,1.1394794926671705e-34,0.0000014718417213681352,1.8304844847349246e-33,0.00000144492079954255,1.1734602259119046e-33,0.000001431658145975425,2.059183877866954e-33,0.0000014315366814417992,3.740418929007684e-33,0.000001444484786901957,0.05338698592487429,1.0927170005423958e-32,0.0015264186440610854,1.2238002539540145e-32,0.0005115972050343,4.300580484504349e-33,0.00023712339865233686,5.119038442034293e-33,0.00012835318222497588,5.68541316336842e-33,0.00007635465014322923,7.111395067729473e-33,0.00004855430855297931,4.7764320736858844e-33,0.000032516998646903045,8.35968118108418e-33,0.000022724555102919053,3.485564280329943e-33,0.00001646786132433292,3.1032645213312626e-33,0.000012316892164164005,2.9632576176569342e-33,0.000009472768664709237,1.4944408169717121e-33,0.0000074690687554579116,7.977305668671368e-34,0.000006022653003125163,5.105633815160074e-34,0.000004956059747727859,1.3347662767890967e-33,0.000004154704834190763,2.2925320861153647e-33,0.000003542721389248335,1.1305928040602041e-33,0.000003068823534998674,1.5549595357671015e-33,0.000002697429788776131,5.461267017197213e-33,0.0000024035681470759538,1.693230464710307e-33,0.0000021693550275603012,3.729035145595686e-33,0.0000019818160739914643,4.2004942972111554e-33,0.0000018314180205548833,2.1624075919861868e-33,0.0000017111030519265301,1.1647911232760973e-35,0.0000016156088831573929,1.1438250767502381e-33,0.000001540995150739224,3.273609256823964e-34,0.0000014843727753202574,1.117619590287202e-34,0.0000014436057447183383,1.795368265090909e-33,0.0000014172012768762386,1.1509484333344295e-33,0.0000014041930555425502,2.0196802634164534e-33,0.0000014040739211981602,3.668662312785563e-33,0.0000014167736287510404,0.045473411017023964,1.082283551596455e-32,0.001511844137592312,1.2121151996688518e-32,0.0005067123873578458,4.259517805969366e-33,0.00023485930385697902,5.070160986837053e-33,0.00012712764407271085,5.63112786539361e-33,0.00007562560287512678,7.043494250466868e-33,0.000048090703704567926,4.730825882732676e-33,0.00003220652077835221,8.279861514359965e-33,0.00002250757716135886,3.452283516007097e-33,0.00001631062336583957,3.0736340205401265e-33,0.000012199288369674058,2.9349639267450618e-33,0.000009382321048180075,1.4801716402691762e-33,0.000007397752808606975,7.901136988785424e-34,0.000005965147681439828,5.056884349634507e-34,0.0000049087384409985915,1.322021699925434e-33,0.000004115035001332423,2.2706425973771634e-33,0.000003508894879066771,1.1197977104596152e-33,0.000003039521882639813,1.5401125159793832e-33,0.0000026716742674723684,5.409121904989943e-33,0.000002380618467023243,1.6770632104271792e-33,0.00000214864165445964,3.693429679779853e-33,0.000001962893354917843,4.1603872587227665e-33,0.0000018139313278369595,2.141760554189481e-33,0.0000016947651471216646,1.1536694982703967e-35,0.0000016001827730203095,1.1329036391452257e-33,0.0000015262814652898349,3.242352275342869e-34,0.0000014701997300026118,1.1069483671521574e-34,0.0000014298219499863908,1.778225781608277e-33,0.0000014036695965225226,1.1399589807015478e-33,0.00000139078557991256,2.0003960105815284e-33,0.000001390667583083281,3.6336332971105554e-33,0.0000014032460316548191,0.04547341101702388,1.0822835515964553e-32,0.0015118441375923113,1.2121151996688518e-32,0.0005067123873578458,4.2595178059693635e-33,0.00023485930385697915,5.070160986837053e-33,0.00012712764407271085,5.631127865393607e-33,0.00007562560287512678,7.043494250466869e-33,0.000048090703704567926,4.7308258827326746e-33,0.00003220652077835221,8.279861514359965e-33,0.00002250757716135886,3.452283516007099e-33,0.00001631062336583957,3.0736340205401245e-33,0.000012199288369674058,2.9349639267450628e-33,0.000009382321048180073,1.4801716402691767e-33,0.000007397752808606975,7.901136988785424e-34,0.000005965147681439828,5.056884349634507e-34,0.000004908738440998593,1.3220216999254344e-33,0.000004115035001332421,2.2706425973771634e-33,0.000003508894879066771,1.1197977104596156e-33,0.000003039521882639813,1.5401125159793832e-33,0.000002671674267472367,5.409121904989943e-33,0.000002380618467023241,1.6770632104271792e-33,0.00000214864165445964,3.693429679779856e-33,0.000001962893354917843,4.1603872587227665e-33,0.0000018139313278369604,2.1417605541894803e-33,0.0000016947651471216646,1.1536694982703972e-35,0.0000016001827730203095,1.132903639145225e-33,0.0000015262814652898349,3.242352275342868e-34,0.0000014701997300026118,1.1069483671521574e-34,0.0000014298219499863908,1.778225781608277e-33,0.0000014036695965225217,1.1399589807015471e-33,0.0000013907855799125609,2.0003960105815284e-33,0.000001390667583083281,3.6336332971105575e-33,0.0000014032460316548191,0.05338698592487416,1.0927170005423961e-32,0.0015264186440610854,1.2238002539540148e-32,0.0005115972050342997,4.3005804845043505e-33,0.00023712339865233697,5.1190384420342905e-33,0.00012835318222497588,5.68541316336842e-33,0.00007635465014322923,7.111395067729472e-33,0.000048554308552979285,4.7764320736858844e-33,0.000032516998646903045,8.359681181084178e-33,0.000022724555102919053,3.485564280329945e-33,0.000016467861324332912,3.103264521331261e-33,0.000012316892164164008,2.9632576176569335e-33,0.000009472768664709232,1.4944408169717121e-33,0.000007469068755457907,7.977305668671368e-34,0.00000602265300312516,5.105633815160074e-34,0.0000049560597477278584,1.3347662767890959e-33,0.000004154704834190762,2.292532086115366e-33,0.000003542721389248335,1.1305928040602046e-33,0.0000030688235349986724,1.554959535767101e-33,0.0000026974297887761327,5.4612670171972156e-33,0.0000024035681470759538,1.6932304647103078e-33,0.0000021693550275603012,3.729035145595686e-33,0.0000019818160739914643,4.2004942972111534e-33,0.000001831418020554884,2.1624075919861874e-33,0.0000017111030519265293,1.1647911232760981e-35,0.0000016156088831573929,1.143825076750238e-33,0.0000015409951507392236,3.2736092568239636e-34,0.0000014843727753202565,1.1176195902872017e-34,0.0000014436057447183383,1.795368265090908e-33,0.000001417201276876238,1.1509484333344293e-33,0.0000014041930555425506,2.0196802634164524e-33,0.0000014040739211981604,3.668662312785563e-33,0.00000141677362875104,0.03452516910278292,1.1140898246843309e-32,0.001556274386426485,1.2477369801142474e-32,0.0005216037090872943,4.384697003564568e-33,0.00024176137600312274,5.219163459164157e-33,0.00013086368585070004,5.796616096657273e-33,0.00007784809676218009,7.25048926696949e-33,0.00004950399881818151,4.869855936118804e-33,0.000033153009703158984,8.523191033751671e-33,0.00002316903241925741,3.5537396197471226e-33,0.000016789961835173355,3.163962329498789e-33,0.000012557802454814908,3.0212169830900614e-33,0.000009658049774738233,1.5236710941210662e-33,0.000007615158816228612,8.133336508402372e-34,0.000006140452125349666,5.20549664662546e-34,0.00000505299700904303,1.3608734252001086e-33,0.000004235968121701369,2.3373725023365503e-33,0.000003612014684034351,1.1527064539488036e-33,0.0000031288477001792273,1.5853735191582983e-33,0.0000027501897371269943,5.568085799638381e-33,0.000002450580355447481,1.7263489363146256e-33,0.0000022117861817223144,3.801972614625953e-33,0.0000020205790898593,4.2826531964311085e-33,0.0000018672393496494784,2.2047028588885634e-33,0.0000017445710995540488,1.1875736697428495e-35,0.000001647209127799629,1.1661975411690975e-33,0.0000015711359999654872,3.3376388957156245e-34,0.0000015134061282124032,1.1394794926671711e-34,0.0000014718417213681356,1.8304844847349246e-33,0.0000014449207995425512,1.1734602259119052e-33,0.0000014316581459754255,2.0591838778669555e-33,0.0000014315366814417994,3.740418929007684e-33,0.0000014444847869019583,0.018750617833038302,1.1474769016438746e-32,0.001602912863467158,1.285129198997627e-32,0.0005372351445351633,4.516097733612317e-33,0.0002490064881005682,5.375571504740666e-33,0.00013478541267550494,5.970329260027077e-33,0.00008018105083838238,7.467772144693687e-33,0.00005098753612525286,5.015795923468709e-33,0.000034146540082734504,8.778614275827675e-33,0.000023863362671020634,3.6602381942335146e-33,0.00001729312391018608,3.258780046572906e-33,0.000012934135051803162,3.111756903382833e-33,0.000009947482497274454,1.5693325147294678e-33,0.000007843370121837304,8.3770765784823e-34,0.000006324469377040778,5.361495124757845e-34,0.000005204425373506429,1.4016561204304757e-33,0.0000043629117401995356,2.4074189509168915e-33,0.00000372025964737833,1.18725079520123e-33,0.000003222613100998838,1.632884039873051e-33,0.0000028326075048620355,5.7349503602787584e-33,0.0000025240194203326235,1.7780842125183146e-33,0.0000022780690557160164,3.915910242876494e-33,0.0000020811318640443534,4.410995874635529e-33,0.000001923196833945055,2.2707734596531786e-33,0.0000017968524580869744,1.223162912753902e-35,0.0000016965727398709367,1.2011461837240862e-33,0.0000016182198502821526,3.437661357285093e-34,0.0000015587599280175388,1.1736274479510086e-34,0.0000015159499177943156,1.88534049814696e-33,0.0000014882222289837912,1.208626516819e-33,0.000001474562119820606,2.1208935614857564e-33,0.000001474437015234228,3.8525119145792004e-33,0.0000014877731499034336,0.026102487870292942,1.194664312473206e-32,0.0016688290555087475,1.3379772514464353e-32,0.0005593277334498672,4.701812111649983e-33,0.00025924632075980314,5.5966298115991784e-33,0.00014032816010040605,6.215845643995837e-33,0.00008347831650117531,7.774867504667093e-33,0.000053084284051830616,5.2220592674521365e-33,0.00003555073986486163,9.13961507484357e-33,0.000024844689873784897,3.810757270614988e-33,0.000018004264797905448,3.392790058138081e-33,0.000013466022311178178,3.239720918336493e-33,0.000010356550377110662,1.633867790336567e-33,0.000008165911105185572,8.721565041379739e-34,0.000006584548978071887,5.581974572099198e-34,0.0000054184456800402,1.459296080852727e-33,0.000004542326688249448,2.506418649222356e-33,0.000003873246971237427,1.2360738180876622e-33,0.0000033551358281430344,1.7000327292416688e-33,0.0000029490921276537326,5.970787315557436e-33,0.0000026278140511071703,1.8512039329284164e-33,0.0000023717495300468375,4.076943258126459e-33,0.000002166713738605827,4.5923881747373694e-33,0.0000020022839850493834,2.364153918978759e-33,0.0000018707439804504979,1.2734627408311682e-35,0.0000017663404840089193,1.2505406232603198e-33,0.0000016847655077834494,3.5790274610610747e-34,0.0000016228604297376961,1.2218902412740877e-34,0.0000015782899539773293,1.962870892451007e-33,0.0000015494220262292058,1.2583285682560778e-33,0.000001535200175751548,2.2081105465664492e-33,0.0000015350699265199881,4.010937815943936e-33,0.0000015489544797801115,0.0914818962217621,1.2584156008613964e-32,0.0017578833624613667,1.4093761981825396e-32,0.000589175334375399,4.952716551288217e-33,0.0002730805725958863,5.8952847202593076e-33,0.0001478165406522825,6.5475439830937e-33,0.00008793299902066033,8.189760471080298e-33,0.00005591703921672114,5.5007258375201435e-33,0.00003744784639585559,9.627335541848369e-33,0.000026170485724989196,4.01411203998399e-33,0.00001896503265994397,3.573840697366743e-33,0.000014184614356523953,3.412603275669616e-33,0.000010909210587099821,1.7210564471018187e-33,0.000008601671467643617,9.18697695863899e-34,0.000006935922561784459,5.879847428102352e-34,0.0000057075920867398906,1.5371690065966977e-33,0.000004784720451612542,2.640169541803485e-33,0.000004079936400296254,1.3020348563669949e-33,0.0000035341771115632185,1.7907521687190898e-33,0.000003106465559462522,6.289408521602031e-33,0.000002768043008860045,1.9499903740745074e-33,0.000002498314027450758,4.294502603188871e-33,0.000002282336839557552,4.8374533866646436e-33,0.0000021091325637113505,2.4903130891400125e-33,0.0000019705731439677973,1.3414189772355794e-35,0.0000018605983273311736,1.3172736587098941e-33,0.0000017746702371972094,3.770016351778836e-34,0.0000017094616968801016,1.287094396396891e-34,0.0000016625127912761955,2.067616256505929e-33,0.0000016321043742309315,1.3254771945307835e-33,0.0000016171235981858583,2.3259427198199873e-33,0.0000016169863984191252,4.2249748895734145e-33,0.0000016316118779376008,0.2410412006558948,1.342987142249969e-32,0.001876021524005868,1.504093013036929e-32,0.0006287707320660729,5.285562768798893e-33,0.00029143289191861194,6.291476022540963e-33,0.00015775051848689698,6.987570224488573e-33,0.00009384251671974695,8.740151507370978e-33,0.00005967493143707055,5.870400897585029e-33,0.00003996452060842269,1.0274338491972141e-32,0.00002792926741454785,4.283879549458202e-33,0.00002023957347415368,3.814019868895312e-33,0.00001513788821876196,3.6419465220291794e-33,0.00001164236166537002,1.8367196639663494e-33,0.000009179744891112603,9.804385707832476e-34,0.000007402049699433075,6.275001270587984e-34,0.000006091169547208758,1.6404741088011182e-33,0.0000051062765284994734,2.817601550374139e-33,0.000004354127621307986,1.3895378201487785e-33,0.000003771690700603695,1.9110992710991275e-33,0.000003315234888493748,6.712086826551692e-33,0.000002954068725426903,2.081039044732655e-33,0.0000026662126676373325,4.583113698283616e-33,0.0000024357207807270527,5.1625533687576465e-33,0.000002250876349932534,2.6576740280417123e-33,0.0000021030050751121725,1.4315687421264785e-35,0.000001985639425311593,1.4058007428237617e-33,0.000001893936556935662,4.02337946465809e-34,0.0000018243456911272441,1.3735932898795925e-34,0.0000017742415947336574,2.206569948508065e-33,0.000001741789586764262,1.4145555954502712e-33,0.0000017258020309872303,2.4822571845024467e-33,0.0000017256556107405992,4.50891339009316e-33,0.0000017412639923667549,0.320353049992474,1.4553415775954216e-32,0.0020329696677330415,1.629925581250266e-32,0.0006813737528549944,5.7277534657078976e-33,0.00031581419608936554,6.81782152039717e-33,0.00017094794225400305,7.572151031192216e-33,0.00010169339082400611,9.471353435186298e-33,0.00006466734202311522,6.361519209406389e-33,0.000043307956301551047,1.1133890652597901e-32,0.0000302658326512905,4.642269330510714e-33,0.000021932818165619275,4.133101143231374e-33,0.000016404325424029704,3.946632123378561e-33,0.000012616362778149639,1.9903798102482406e-33,0.000009947723244299455,1.0624621572687465e-33,0.000008021305899448111,6.799968489088485e-34,0.000006600757385796316,1.777716332791731e-33,0.00000553346812105346,3.0533223709699295e-33,0.00000471839436290501,1.5057866897488315e-33,0.000004087230712590749,2.0709820225703863e-33,0.0000035925877627068397,7.273620665307163e-33,0.0000032012064032016485,2.255138974245798e-33,0.0000028892682795335226,4.9665374374208116e-33,0.0000026394934188770263,5.594453087258126e-33,0.0000024391848849684052,2.8800152965162854e-33,0.000002278942684869919,1.5513339227598175e-35,0.000002151758213356571,1.5234101701214513e-33,0.000002052383474065573,4.359975783201257e-34,0.0000019769706296341807,1.4885082385217428e-34,0.0000019226748196480413,2.391171805678132e-33,0.0000018875078735258353,1.5328974545728383e-33,0.0000018701827972727146,2.6899230627324676e-33,0.0000018700241274939662,4.8861295242079955e-33,0.0000018869383078497537,0.310171633629549,1.6093523046401007e-32,0.002248107571718896,1.8024115650643415e-32,0.0007534797578519412,6.333889845762299e-33,0.00034923506078500435,7.539313756571796e-33,0.0001890384148129132,8.373469775574454e-33,0.00011245503832831308,1.0473654235978554e-32,0.00007151072814933476,7.034723502908493e-33,0.000047890997107573636,1.2312128545777408e-32,0.000033468697850084175,5.1335349452198426e-33,0.00002425384666080381,4.57048431280314e-33,0.000018140304196385423,4.3642823108374344e-33,0.000013951482473783331,2.2010106658428835e-33,0.000011000435619785312,1.174896634382206e-33,0.000008870156212281825,7.5195714379822924e-34,0.0000072992789285613325,1.9658421921139248e-33,0.000006119044360694783,3.376438542110881e-33,0.0000052177158675617905,1.6651357432168054e-33,0.000004519759668910061,2.290142563231579e-33,0.000003972771399197511,8.043347596878806e-33,0.000003539972321228782,2.493787823668651e-33,0.0000031950235161105616,5.492118547317774e-33,0.0000029188163673373818,6.186483027617257e-33,0.000002697310292304776,3.184791341222661e-33,0.0000025201105489598585,1.715502987267733e-35,0.000002379466850260183,1.684624218767898e-33,0.000002269575833496119,4.821367837551463e-34,0.0000021861824660190134,1.646028809331998e-34,0.000002126140831615997,2.6442162551397458e-33,0.0000020872523626405984,1.695115489911158e-33,0.0000020680938696618616,2.974582700691939e-33,0.000002067918408740496,5.403201510635465e-33,0.0000020866225229881353,0.28484676341941756,1.855812670304224e-32,0.002592388567608125,2.0784375241549722e-32,0.0008688695926974773,7.303878084485425e-33,0.00040271781936784487,8.693903724190337e-33,0.000217988245564717,9.65580454889624e-33,0.00012967669314389253,1.2077616678133893e-32,0.00008246206562701292,8.112039216735712e-33,0.000055225148011089795,1.4197639688829808e-32,0.000038594180621414645,5.919697736362941e-33,0.000027968143337515662,5.270420076866627e-33,0.000020918357201068832,5.032639768113388e-33,0.000016088048508536176,2.538079120009347e-33,0.000012685070722677361,1.3548233373747752e-33,0.000010228554828466593,8.671138015977193e-34,0.00000841710934308947,2.2668963392446914e-33,0.000007056130607319381,3.893515055023433e-33,0.0000060167703424229396,1.920138928641386e-33,0.000005211927330087673,2.640860906213198e-33,0.000004581171864976908,9.275126607711196e-33,0.000004082092819155451,2.8756929274411663e-33,0.0000036843176637100104,6.333195756788916e-33,0.0000033658114392842136,7.133897005753274e-33,0.0000031103833522148635,3.672518507150572e-33,0.0000029060467828223096,1.9782195424439177e-35,0.0000027438645451029735,1.9426119196380466e-33,0.0000026171445344034074,5.5597245521242305e-34,0.0000025209800913929275,1.8981059095865419e-34,0.0000024517435261302274,3.0491583571628953e-33,0.0000024068995766449617,1.954709851122112e-33,0.0000023848071026034696,3.430117972861358e-33,0.0000023846047711437432,6.230661735614583e-33,0.0000024061732817225046,0.27959743970402745,2.088129884046538e-32,0.0029169129652486634,2.3386237068853693e-32,0.0009776377707096523,8.218203454310094e-33,0.0004531314646764434,9.782237434842686e-33,0.00024527678747873955,1.0864552417220813e-32,0.00014591008163216478,1.3589535580407492e-32,0.00009278495954429764,9.127533064124679e-33,0.0000621384279556331,1.59749505925675e-32,0.000043425537068164726,6.66074649969696e-33,0.000031469294740179664,5.9301899594100495e-33,0.00002353699136537927,5.6626434680586086e-33,0.000018102007494731507,2.8558048683314885e-33,0.00001427303287724847,1.5244249291132214e-33,0.000011509001608674383,9.756621834511893e-34,0.000009470792951160971,2.5506744650237613e-33,0.000007939442069044441,4.3809190822297574e-33,0.000006769970998957933,2.1605087316059252e-33,0.000005864374883080667,2.9714532431605925e-33,0.000005154659211181772,1.0436219860866667e-32,0.000004593103679873547,3.2356823698950214e-33,0.000004145533619323889,7.126007669243779e-33,0.000003787155655793059,8.026943541118054e-33,0.0000034997521746287084,4.1322574024877e-33,0.000003269836028575994,2.2258600826908117e-35,0.0000030873512429818855,2.1857949713406404e-33,0.000002944767971791547,6.2557105952158076e-34,0.0000028365653226524194,2.1357175410615464e-34,0.0000027586614785267687,3.43086281749458e-33,0.000002708203804356722,2.1994073648064574e-33,0.0000026833457160395467,3.859512309376997e-33,0.0000026831180560099036,7.010638075549558e-33,0.000002707386589259277,0.26876841280628294,1.4636721856061203e-32,0.0020446067113386477,1.6392555360272352e-32,0.0006852740452201683,5.7605400428519215e-33,0.000317621967070651,6.856847821471574e-33,0.0001719264756231292,7.615495235061451e-33,0.00010227550006164187,9.52556897744387e-33,0.00006503750823411474,6.397933563055005e-33,0.00004355585797167917,1.1197622823854924e-32,0.00003043907911921042,4.6688424228128534e-33,0.000022058365125536147,4.1567596753745505e-33,0.000016498226407064477,3.969223277021424e-33,0.000012688580857014127,2.0017730626962243e-33,0.000010004665603552405,1.0685438606259979e-33,0.000008067221137637503,6.838892596555622e-34,0.0000066385411770391,1.78789226547358e-33,0.0000055651425778035845,3.070800076681378e-33,0.0000047454032070707965,1.5144060536515325e-33,0.000004110626675050743,2.0828366549761656e-33,0.000003613152309790416,7.315256033604221e-33,0.0000032195306207715788,2.2680477505037652e-33,0.0000029058069133807855,4.994966692242196e-33,0.000002654602301463767,5.6264766317109766e-33,0.0000024531471694623806,2.896500964808492e-33,0.0000022919877173755325,1.5602140063107646e-35,0.000002164075221600709,1.5321304136451507e-33,0.000002064131645404378,4.384932982078247e-34,0.000001988287125787174,1.4970286978054731e-34,0.000001933680517898616,2.404859255625284e-33,0.0000018983122705509214,1.5416720048304795e-33,0.0000018808880227897198,2.705320612668196e-33,0.0000018807284447597772,4.9140985112707756e-33,0.0000018977394445897912,0.2427966924198309,1.0797875581550175e-32,0.0015083574791779414,1.2093197847480778e-32,0.0005055437926825642,4.2496943835476735e-33,0.00023431766457841563,5.058468035806326e-33,0.00012683445864513705,5.6181411964202266e-33,0.00007545119293560335,7.027250341531863e-33,0.00004797979554111703,4.71991551607463e-33,0.000032132245174222616,8.260766259696448e-33,0.000022455669539835318,3.4443217605122196e-33,0.0000162730073373165,3.0665455173975526e-33,0.000012171154020116594,2.9281952285594468e-33,0.000009360683269644887,1.4767580258786927e-33,0.000007380691898400562,7.88291515951081e-34,0.0000059513906863638834,5.045222017566182e-34,0.000004897417767283839,1.3189728154740493e-33,0.000004105544789308542,2.265405976140017e-33,0.000003500802564818878,1.1172152007865053e-33,0.0000030325120498903614,1.5365606642180857e-33,0.0000026655127754683194,5.3966472325449285e-33,0.0000023751282162738045,1.6731955190371276e-33,0.0000021436863953044743,3.684911786069326e-33,0.0000019583664738311896,4.150792454019055e-33,0.0000018097479872596943,2.1368211644255874e-33,0.000001690856631016293,1.1510088725064538e-35,0.0000015964923855052557,1.130290904202598e-33,0.0000015227615110952686,3.234874669310561e-34,0.000001466809113118267,1.104395491003992e-34,0.0000014265244534991484,1.7741247861882295e-33,0.0000014004324133446955,1.1373299745273865e-33,0.0000013875781102242434,1.9957826397922165e-33,0.0000013874603855226458,3.625253307536844e-33,0.0000014000098253144664,0.18458626571618322,8.242443839271457e-33,0.0011513886891706888,9.231214357143826e-33,0.0003859014940492683,3.2439591497339975e-33,0.00017886390487188464,3.861327942055959e-33,0.00009681773922763197,4.2885485152018265e-33,0.000057594868146134324,5.3641770408565996e-33,0.000036624868214179695,3.602897465666665e-33,0.000024527808667360933,6.305768338471767e-33,0.00001714129725402516,2.6291864970097057e-33,0.000012421827614226644,2.3408150072507387e-33,0.000009290721374984736,2.235206781143418e-33,0.000007145378326000241,1.1272675815320918e-33,0.000005633972905881438,6.017339707361351e-34,0.000004542930980028496,3.8512167344750042e-34,0.000003738391927136104,1.006823914108283e-33,0.0000031339240853367077,1.7292736326198106e-33,0.00000267230052013199,8.52814378098357e-34,0.000002314835920673468,1.1729172914430803e-33,0.00000203469091570178,4.119473446296679e-33,0.0000018130289412813637,1.277216059180066e-33,0.0000016363602811369618,2.8128383421311382e-33,0.0000014948982839593242,3.1684634104491223e-33,0.0000013814519379821458,1.631119779935084e-33,0.0000012906974817550838,8.786104191039022e-36,0.0000012186655354536358,8.627955776641557e-34,0.0000011623838542141257,2.4693072806314228e-34,0.000001119673184461086,8.430285885585453e-35,0.0000010889223166642673,1.3542593451439465e-33,0.0000010690052344566738,8.681687773639082e-34,0.0000010591930384591275,1.523459517535822e-33,0.0000010591031745563529,2.7672986750802837e-33,0.0000010686826563643436,0.11264541083000594,6.46111269630285e-33,0.0009025541724088693,7.236193227190612e-33,0.0003025016719973613,2.5428848600425194e-33,0.0001402083980447463,3.0268298428845452e-33,0.00007589379270872692,3.361720844036763e-33,0.000045147645659150636,4.204887902148963e-33,0.000028709616423661456,2.824250551515295e-33,0.000019226935491886882,4.94298543807192e-33,0.000013436773786847215,2.060974947240761e-33,0.00000973726114179494,1.8349254005206323e-33,0.000007282839774742338,1.7521408934203263e-33,0.0000056011415451861955,8.836460429934066e-34,0.000004416376329964093,4.716891099210226e-34,0.00000356112696742185,3.018903837812483e-34,0.0000029304623744103216,7.89232283681698e-34,0.0000024566302290763386,1.3555484321127246e-33,0.000002094771302741159,6.685068061571349e-34,0.000001814560832754576,9.1943008059681e-34,0.0000015949598886990823,3.2291857493932934e-33,0.0000014212028058310593,1.0011881253678795e-33,0.0000012827152230999284,2.2049365308866144e-33,0.0000011718255496205668,2.4837050234403944e-33,0.0000010828968725636538,1.2786072826018553e-33,0.0000010117559851267357,6.887278875870339e-36,9.552913574188411e-7,6.7633090013902505e-34,9.111730968256324e-7,1.935648326282191e-34,8.77692923227828e-7,6.608358907985395e-35,8.535878366517184e-7,1.0615810577084552e-33,8.379751718602819e-7,6.8054286075129325e-34,8.302835569248793e-7,1.1942142188649894e-33,8.302131141272721e-7,2.1692387540251233e-33,8.37722308334786e-7,0.0658283458761777,5.192678042394703e-33,0.0007253662725649484,5.815596081903835e-33,0.0002431150583191679,2.04367002987527e-33,0.00011268292384110502,2.4326077568969353e-33,0.00006099445242274868,2.701753526366918e-33,0.000036284336661429346,3.3793914618938915e-33,0.0000230733933636581,2.269798487413227e-33,0.00001545233622196223,3.9725869451000447e-33,0.000010798889213542341,1.6563678514053043e-33,0.000007825658597936926,1.4746959671772898e-33,0.0000058530850585879846,1.4081635736909166e-33,0.000004501534964817429,7.101701549527894e-34,0.000003549360841311246,3.790879062247501e-34,0.000002862012578807422,2.4262377716581482e-34,0.000002355158985908373,6.342915442672985e-34,0.000001974348761337539,1.0894294697664233e-33,0.0000016835293638829177,5.372666871311384e-34,0.0000014583293367140613,7.389291311640768e-34,0.0000012818400764449113,2.5952374960559704e-33,0.0000011421946885172826,8.046365756596331e-34,0.0000010308947524546049,1.7720671418346374e-33,9.417747510446161e-7,1.9961082781274308e-33,8.703044005960202e-7,1.027593275847329e-33,8.131297711670139e-7,5.5351800025164684e-36,7.677501831219777e-7,5.435547682916236e-34,7.322931444013732e-7,1.5556451394873596e-34,7.05385741533077e-7,5.311017128271863e-35,6.860129245498023e-7,8.531732702540777e-34,6.734653115524079e-7,5.469398439612169e-34,6.67283701377356e-7,9.597681148270619e-34,6.672270877899494e-7,1.7433774918031435e-33,6.73262089764106e-7,0.0481865586510937,4.291336642886281e-33,0.0005994577055534673,4.806129007565151e-33,0.00020091531762314832,1.6889312246148334e-33,0.00009312350123750302,2.010357414750676e-33,0.00005040707830478458,2.2327850510059192e-33,0.00002998612704403408,2.7927990706688145e-33,0.000019068329984797623,1.875808463663621e-33,0.000012770130577347468,3.2830280994462734e-33,0.000008924425625119692,1.3688566856643388e-33,0.000006467286286934429,1.2187192792230304e-33,0.000004837110674064701,1.1637355317663259e-33,0.000003720161694224002,5.868993193399839e-34,0.0000029332652848471856,3.1328609429963456e-34,0.0000023652264499290473,2.0050931270658488e-34,0.000001946352146914649,5.241916644868471e-34,0.0000016316426930751163,9.003270692462972e-34,0.0000013913035219248898,4.440083137572504e-34,0.0000012051935569552497,6.1066633270376195e-34,0.0000010593391782540394,2.1447579982604445e-33,9.439333384674573e-7,6.649683252347996e-34,8.519527669632784e-7,1.464472974700885e-33,7.783021526670775e-7,1.6496252082569947e-33,7.192375753418596e-7,8.492243583416064e-34,6.71987277844311e-7,4.574387353854888e-36,6.344846467497518e-7,4.492049142160357e-34,6.051822158523031e-7,1.2856173511830846e-34,5.829453810339493e-7,4.389134513534953e-35,5.669352839862388e-7,7.050800545461862e-34,5.565656768207532e-7,4.520024108336325e-34,5.51457066188694e-7,7.931722410295716e-34,5.514102795479395e-7,1.4407632539274102e-33,5.563977301274182e-7,0.04577215867634467,3.6714192555995034e-33,0.0005128613171690568,4.1118458074177294e-33,0.00017189151708461406,1.4449518030036473e-33,0.00007967107781184456,1.7199454476236622e-33,0.00004312537871235987,1.9102416594295327e-33,0.000025654394747337742,2.38935724189131e-33,0.00001631375948898413,1.6048331525627265e-33,0.000010925384606195744,2.8087688252009044e-33,0.00000763522203263752,1.1711145529062955e-33,0.00000553303583038309,1.0426656776804056e-33,0.000004138351928102896,9.956247657323295e-34,0.000003182755028263487,5.02117088785141e-34,0.0000025095320047709668,2.6802944975895237e-34,0.0000020235508548409345,1.7154416277695083e-34,0.0000016651862449909502,4.484680487167188e-34,0.0000013959390511915516,7.702677308823554e-34,0.000001190318766821996,3.7986781472316036e-34,0.000001031093852556376,5.224507698205156e-34,9.063092879697666e-7,1.8349308079727608e-33,8.075747309632786e-7,5.689084117131318e-34,7.288814776802265e-7,1.2529183156802257e-33,6.658702748742094e-7,1.4113238503804713e-33,6.153380410828742e-7,7.265472091796758e-34,5.749134213195019e-7,3.9135810613585445e-36,5.428283407503848e-7,3.843137253043468e-34,5.177588768547701e-7,1.0998997960905222e-34,4.98734328018448e-7,3.7550894533341336e-35,4.850370156245528e-7,6.032256857059195e-34,4.761653799108935e-7,3.8670710149550314e-34,4.7179474833273607e-7,6.7859226181900555e-34,4.7175472039084625e-7,1.232633650869106e-33,4.7602169444057577e-7,0.04571147329934215,3.2818801909364617e-33,0.00045844652444627167,3.6755773078675175e-33,0.00015365375775311594,1.291641833577857e-33,0.00007121794430381795,1.5374585415268052e-33,0.00003854975862723044,1.7075642484638243e-33,0.000022932453111515878,2.135845474273742e-33,0.000014582863023595545,1.4345597074267413e-33,0.000009766196890412375,2.510757319335767e-33,0.000006825121893692038,1.0468588262260413e-33,0.0000049459784958584935,9.320384284986555e-34,0.0000036992711184511356,8.899885762921774e-34,0.0000028450634353269273,4.488422630298476e-34,0.0000022432696463139434,2.395914169731263e-34,0.0000018088512925148324,1.5334325787767458e-34,0.0000014885093123921366,4.008854077633788e-34,0.0000012478293545126907,6.885420137852382e-34,0.000001064025465295202,3.3956368628095925e-34,9.216943786902303e-7,4.670185323014754e-34,8.10149506764522e-7,1.6402439087391857e-33,7.218907261019011e-7,5.085469996407631e-34,6.515468587497585e-7,1.1199831767567976e-33,5.952211699903635e-7,1.2615818202989513e-33,5.500504265971592e-7,6.494602570791371e-34,5.139148753045062e-7,3.498348531377257e-36,4.852340347320799e-7,3.4353788395528286e-34,4.628244510728635e-7,9.831999838479646e-35,4.4581841454565277e-7,3.3566729469253666e-35,4.3357439252445997e-7,5.392231970137816e-34,4.256440409402715e-7,3.456773219666828e-34,4.217371351363756e-7,6.0659334898621105e-34,4.217013541752742e-7,1.1018507230682504e-33,4.2551560055634023e-7,0.04175152162980122,3.093711398073591e-33,0.0004321611867500716,3.464835627837377e-33,0.00014484391692007868,1.2175846863039403e-33,0.00006713461589748732,1.44930732911059e-33,0.00003633948246721889,1.609659911719116e-33,0.000021617605594749268,2.0133853473789105e-33,0.000013746744831586975,1.352308268394416e-33,0.000009206245468418,2.3668013713838033e-33,0.000006433798971111027,9.868364761802322e-34,0.000004662397515156742,8.785993826502585e-34,0.000003487170937965016,8.389604868070276e-34,0.000002681939822916506,4.231075920770769e-34,0.0000021146502827617453,2.258542830470783e-34,0.0000017051395954452826,1.4455121976239272e-34,0.0000014031646367237518,3.779003751398536e-34,0.0000011762842249903024,6.490639975166523e-34,0.0000010030188545319915,3.2009457551816714e-34,8.688484158468552e-7,4.402417128092675e-34,7.636990436588496e-7,1.546199428638874e-33,6.805006391375331e-7,4.7938911773492414e-34,6.141899844058611e-7,1.055768193230261e-33,5.610937666339496e-7,1.1892481839648172e-33,5.185129179847683e-7,6.122230194357604e-34,4.844492226620408e-7,3.2977683816262636e-36,4.5741281724105914e-7,3.2384090991428794e-34,4.362881020293137e-7,9.268275560505087e-35,4.202571179654879e-7,3.164215861440422e-35,4.0871511512521385e-7,5.083064748415475e-34,4.012394555461436e-7,3.258576818182771e-34,3.9755655479611225e-7,5.718139141510801e-34,3.975228253603154e-7,1.0386753758854292e-33,4.011183793774162e-7,0.04175152162980118,3.0937113980735896e-33,0.00043216118675007176,3.464835627837379e-33,0.00014484391692007876,1.2175846863039413e-33,0.00006713461589748732,1.44930732911059e-33,0.00003633948246721889,1.6096599117191162e-33,0.000021617605594749257,2.0133853473789105e-33,0.000013746744831586975,1.3523082683944164e-33,0.000009206245468417997,2.366801371383804e-33,0.000006433798971111027,9.86836476180231e-34,0.00000466239751515674,8.785993826502586e-34,0.000003487170937965018,8.389604868070281e-34,0.000002681939822916507,4.231075920770769e-34,0.0000021146502827617453,2.2585428304707826e-34,0.000001705139595445282,1.4455121976239278e-34,0.0000014031646367237526,3.779003751398536e-34,0.0000011762842249903024,6.4906399751665225e-34,0.0000010030188545319915,3.2009457551816697e-34,8.688484158468557e-7,4.4024171280926735e-34,7.636990436588501e-7,1.5461994286388734e-33,6.805006391375331e-7,4.793891177349243e-34,6.141899844058611e-7,1.0557681932302608e-33,5.610937666339494e-7,1.1892481839648174e-33,5.185129179847679e-7,6.122230194357604e-34,4.844492226620408e-7,3.297768381626262e-36,4.57412817241059e-7,3.2384090991428798e-34,4.362881020293134e-7,9.268275560505087e-35,4.202571179654879e-7,3.164215861440422e-35,4.0871511512521353e-7,5.0830647484154744e-34,4.012394555461436e-7,3.258576818182773e-34,3.975565547961124e-7,5.718139141510801e-34,3.975228253603154e-7,1.0386753758854286e-33,4.0111837937741615e-7,0.04571147329934215,3.281880190936458e-33,0.0004584465244462711,3.6755773078675154e-33,0.00015365375775311575,1.2916418335778581e-33,0.00007121794430381795,1.5374585415268035e-33,0.00003854975862723044,1.7075642484638243e-33,0.000022932453111515864,2.135845474273743e-33,0.00001458286302359556,1.4345597074267408e-33,0.000009766196890412365,2.510757319335767e-33,0.000006825121893692042,1.0468588262260406e-33,0.0000049459784958584935,9.32038428498655e-34,0.000003699271118451132,8.89988576292177e-34,0.0000028450634353269256,4.488422630298472e-34,0.0000022432696463139434,2.395914169731261e-34,0.0000018088512925148324,1.5334325787767454e-34,0.0000014885093123921372,4.0088540776337835e-34,0.0000012478293545126903,6.885420137852373e-34,0.000001064025465295202,3.3956368628095895e-34,9.216943786902295e-7,4.670185323014754e-34,8.101495067645217e-7,1.6402439087391836e-33,7.218907261019006e-7,5.085469996407626e-34,6.515468587497585e-7,1.119983176756797e-33,5.952211699903627e-7,1.2615818202989513e-33,5.50050426597159e-7,6.494602570791367e-34,5.139148753045058e-7,3.4983485313772535e-36,4.852340347320798e-7,3.4353788395528286e-34,4.6282445107286327e-7,9.83199983847964e-35,4.458184145456524e-7,3.3566729469253634e-35,4.3357439252445944e-7,5.392231970137816e-34,4.25644040940271e-7,3.4567732196668256e-34,4.2173713513637543e-7,6.0659334898621105e-34,4.217013541752742e-7,1.101850723068249e-33,4.255156005563399e-7,0.04577215867634469,3.6714192555995034e-33,0.0005128613171690568,4.111845807417732e-33,0.00017189151708461406,1.4449518030036478e-33,0.00007967107781184463,1.7199454476236625e-33,0.0000431253787123599,1.9102416594295344e-33,0.000025654394747337742,2.389357241891313e-33,0.000016313759488984122,1.6048331525627275e-33,0.000010925384606195748,2.8087688252009058e-33,0.000007635222032637522,1.1711145529062943e-33,0.0000055330358303830876,1.0426656776804056e-33,0.000004138351928102896,9.956247657323299e-34,0.0000031827550282634867,5.021170887851414e-34,0.000002509532004770968,2.6802944975895237e-34,0.000002023550854840936,1.7154416277695085e-34,0.0000016651862449909496,4.484680487167188e-34,0.0000013959390511915514,7.702677308823559e-34,0.0000011903187668219967,3.7986781472316036e-34,0.0000010310938525563762,5.224507698205159e-34,9.06309287969767e-7,1.8349308079727604e-33,8.075747309632788e-7,5.689084117131312e-34,7.28881477680227e-7,1.2529183156802257e-33,6.658702748742098e-7,1.411323850380471e-33,6.153380410828744e-7,7.265472091796757e-34,5.749134213195023e-7,3.913581061358545e-36,5.428283407503848e-7,3.8431372530434726e-34,5.177588768547699e-7,1.0998997960905222e-34,4.987343280184476e-7,3.755089453334132e-35,4.850370156245528e-7,6.032256857059203e-34,4.761653799108935e-7,3.867071014955034e-34,4.7179474833273607e-7,6.785922618190063e-34,4.717547203908464e-7,1.232633650869106e-33,4.7602169444057604e-7,0.04818655865109362,4.291336642886281e-33,0.0005994577055534675,4.806129007565156e-33,0.00020091531762314827,1.688931224614835e-33,0.00009312350123750302,2.010357414750677e-33,0.000050407078304784566,2.2327850510059213e-33,0.000029986127044034103,2.7927990706688163e-33,0.000019068329984797623,1.875808463663622e-33,0.000012770130577347473,3.2830280994462775e-33,0.000008924425625119702,1.3688566856643385e-33,0.000006467286286934432,1.2187192792230304e-33,0.000004837110674064701,1.1637355317663262e-33,0.0000037201616942239984,5.868993193399843e-34,0.0000029332652848471873,3.1328609429963456e-34,0.0000023652264499290485,2.0050931270658483e-34,0.00000194635214691465,5.241916644868472e-34,0.0000016316426930751167,9.003270692462972e-34,0.0000013913035219248896,4.440083137572504e-34,0.00000120519355695525,6.106663327037624e-34,0.0000010593391782540394,2.1447579982604445e-33,9.439333384674579e-7,6.649683252347994e-34,8.519527669632792e-7,1.4644729747008854e-33,7.783021526670785e-7,1.649625208256996e-33,7.192375753418593e-7,8.492243583416064e-34,6.719872778443113e-7,4.5743873538548934e-36,6.344846467497518e-7,4.492049142160361e-34,6.051822158523029e-7,1.2856173511830846e-34,5.829453810339497e-7,4.389134513534952e-35,5.669352839862388e-7,7.050800545461866e-34,5.565656768207532e-7,4.520024108336327e-34,5.514570661886944e-7,7.93172241029572e-34,5.514102795479399e-7,1.4407632539274095e-33,5.563977301274185e-7,0.06582834587617767,5.192678042394703e-33,0.0007253662725649479,5.815596081903838e-33,0.00024311505831916768,2.0436700298752714e-33,0.00011268292384110507,2.4326077568969353e-33,0.00006099445242274868,2.701753526366918e-33,0.000036284336661429346,3.3793914618938935e-33,0.0000230733933636581,2.269798487413227e-33,0.00001545233622196223,3.972586945100045e-33,0.000010798889213542341,1.656367851405304e-33,0.000007825658597936928,1.4746959671772898e-33,0.000005853085058587981,1.4081635736909166e-33,0.000004501534964817429,7.101701549527894e-34,0.0000035493608413112473,3.7908790622474998e-34,0.0000028620125788074223,2.4262377716581482e-34,0.000002355158985908372,6.342915442672984e-34,0.000001974348761337539,1.0894294697664228e-33,0.0000016835293638829177,5.372666871311384e-34,0.0000014583293367140619,7.38929131164077e-34,0.0000012818400764449113,2.595237496055971e-33,0.0000011421946885172826,8.046365756596331e-34,0.0000010308947524546057,1.7720671418346374e-33,9.417747510446165e-7,1.9961082781274325e-33,8.703044005960197e-7,1.027593275847329e-33,8.131297711670145e-7,5.535180002516471e-36,7.677501831219777e-7,5.435547682916236e-34,7.322931444013728e-7,1.5556451394873598e-34,7.053857415330773e-7,5.311017128271861e-35,6.860129245498023e-7,8.531732702540779e-34,6.734653115524077e-7,5.469398439612169e-34,6.672837013773564e-7,9.597681148270619e-34,6.672270877899494e-7,1.743377491803143e-33,6.73262089764106e-7,0.11264541083000594,6.46111269630285e-33,0.0009025541724088687,7.236193227190615e-33,0.0003025016719973612,2.5428848600425208e-33,0.00014020839804474624,3.026829842884546e-33,0.00007589379270872693,3.3617208440367636e-33,0.000045147645659150636,4.2048879021489685e-33,0.000028709616423661456,2.824250551515295e-33,0.000019226935491886882,4.9429854380719224e-33,0.000013436773786847215,2.060974947240761e-33,0.000009737261141794948,1.8349254005206327e-33,0.000007282839774742335,1.752140893420327e-33,0.000005601141545186193,8.836460429934066e-34,0.000004416376329964094,4.716891099210225e-34,0.000003561126967421852,3.018903837812483e-34,0.0000029304623744103212,7.892322836816983e-34,0.0000024566302290763386,1.3555484321127242e-33,0.000002094771302741161,6.6850680615713486e-34,0.0000018145608327545752,9.1943008059681e-34,0.0000015949598886990831,3.229185749393295e-33,0.0000014212028058310608,1.001188125367879e-33,0.0000012827152230999298,2.2049365308866138e-33,0.0000011718255496205668,2.483705023440395e-33,0.0000010828968725636538,1.2786072826018548e-33,0.0000010117559851267361,6.887278875870339e-36,9.552913574188411e-7,6.763309001390248e-34,9.111730968256324e-7,1.9356483262821904e-34,8.776929232278285e-7,6.608358907985397e-35,8.535878366517178e-7,1.0615810577084559e-33,8.379751718602816e-7,6.805428607512934e-34,8.302835569248793e-7,1.1942142188649902e-33,8.302131141272721e-7,2.1692387540251223e-33,8.37722308334786e-7,0.18458626571618322,8.242443839271457e-33,0.001151388689170689,9.231214357143826e-33,0.0003859014940492682,3.243959149733998e-33,0.00017886390487188464,3.861327942055958e-33,0.00009681773922763194,4.288548515201827e-33,0.000057594868146134324,5.3641770408565996e-33,0.00003662486821417971,3.6028974656666654e-33,0.000024527808667360933,6.30576833847177e-33,0.000017141297254025154,2.629186497009705e-33,0.00001242182761422665,2.3408150072507387e-33,0.00000929072137498473,2.235206781143418e-33,0.000007145378326000241,1.1272675815320923e-33,0.0000056339729058814395,6.01733970736135e-34,0.000004542930980028499,3.8512167344750064e-34,0.0000037383919271361048,1.0068239141082832e-33,0.0000031339240853367077,1.72927363261981e-33,0.0000026723005201319927,8.528143780983569e-34,0.000002314835920673467,1.1729172914430807e-33,0.000002034690915701781,4.1194734462966806e-33,0.0000018130289412813637,1.277216059180066e-33,0.0000016363602811369624,2.812838342131137e-33,0.0000014948982839593244,3.1684634104491223e-33,0.0000013814519379821458,1.631119779935084e-33,0.0000012906974817550846,8.786104191039029e-36,0.0000012186655354536356,8.627955776641559e-34,0.0000011623838542141257,2.4693072806314228e-34,0.0000011196731844610864,8.430285885585451e-35,0.0000010889223166642673,1.3542593451439465e-33,0.0000010690052344566742,8.681687773639087e-34,0.0000010591930384591278,1.5234595175358228e-33,0.0000010591031745563529,2.7672986750802813e-33,0.000001068682656364344,0.24279669241983065,1.0797875581550178e-32,0.0015083574791779414,1.2093197847480778e-32,0.0005055437926825642,4.2496943835476735e-33,0.00023431766457841574,5.058468035806326e-33,0.00012683445864513705,5.6181411964202286e-33,0.00007545119293560335,7.027250341531863e-33,0.00004797979554111702,4.719915516074632e-33,0.00003213224517422264,8.260766259696454e-33,0.00002245566953983532,3.444321760512218e-33,0.000016273007337316506,3.0665455173975516e-33,0.000012171154020116594,2.9281952285594468e-33,0.000009360683269644889,1.4767580258786918e-33,0.000007380691898400569,7.88291515951081e-34,0.0000059513906863638885,5.045222017566181e-34,0.000004897417767283841,1.3189728154740487e-33,0.000004105544789308541,2.265405976140016e-33,0.0000035008025648188776,1.117215200786505e-33,0.000003032512049890363,1.5365606642180864e-33,0.000002665512775468322,5.3966472325449306e-33,0.0000023751282162738045,1.6731955190371276e-33,0.0000021436863953044734,3.684911786069329e-33,0.0000019583664738311896,4.1507924540190554e-33,0.0000018097479872596947,2.136821164425586e-33,0.000001690856631016293,1.1510088725064531e-35,0.0000015964923855052559,1.1302909042025984e-33,0.0000015227615110952686,3.234874669310561e-34,0.0000014668091131182682,1.104395491003992e-34,0.000001426524453499149,1.7741247861882295e-33,0.0000014004324133446957,1.137329974527387e-33,0.0000013875781102242446,1.9957826397922158e-33,0.0000013874603855226446,3.6252533075368455e-33,0.0000014000098253144664,0.2687684128062827,1.4636721856061208e-32,0.0020446067113386464,1.6392555360272352e-32,0.000685274045220168,5.7605400428519257e-33,0.0003176219670706511,6.856847821471574e-33,0.0001719264756231292,7.615495235061455e-33,0.0001022755000616419,9.52556897744387e-33,0.00006503750823411469,6.397933563055008e-33,0.00004355585797167916,1.119762282385493e-32,0.000030439079119210415,4.668842422812851e-33,0.00002205836512553616,4.1567596753745484e-33,0.000016498226407064473,3.9692232770214204e-33,0.000012688580857014132,2.0017730626962253e-33,0.000010004665603552405,1.0685438606259973e-33,0.000008067221137637513,6.838892596555619e-34,0.000006638541177039104,1.7878922654735807e-33,0.000005565142577803585,3.0708000766813775e-33,0.000004745403207070798,1.5144060536515325e-33,0.0000041106266750507444,2.0828366549761643e-33,0.000003613152309790417,7.315256033604219e-33,0.0000032195306207715754,2.2680477505037645e-33,0.0000029058069133807855,4.994966692242196e-33,0.0000026546023014637655,5.626476631710981e-33,0.000002453147169462379,2.896500964808492e-33,0.0000022919877173755342,1.5602140063107655e-35,0.000002164075221600709,1.5321304136451517e-33,0.000002064131645404378,4.384932982078247e-34,0.000001988287125787174,1.4970286978054742e-34,0.0000019336805178986166,2.404859255625284e-33,0.0000018983122705509214,1.5416720048304802e-33,0.0000018808880227897198,2.705320612668195e-33,0.000001880728444759776,4.9140985112707756e-33,0.0000018977394445897916,0.2795974397040275,2.0881298840465384e-32,0.002916912965248662,2.33862370688537e-32,0.0009776377707096519,8.218203454310094e-33,0.00045313146467644295,9.782237434842686e-33,0.00024527678747873955,1.0864552417220813e-32,0.00014591008163216475,1.3589535580407492e-32,0.00009278495954429768,9.127533064124687e-33,0.00006213842795563306,1.5974950592567487e-32,0.000043425537068164726,6.660746499696958e-33,0.000031469294740179684,5.9301899594100536e-33,0.00002353699136537927,5.6626434680586086e-33,0.000018102007494731507,2.8558048683314885e-33,0.000014273032877248462,1.5244249291132214e-33,0.000011509001608674392,9.756621834511887e-34,0.000009470792951160975,2.550674465023761e-33,0.000007939442069044438,4.3809190822297574e-33,0.000006769970998957933,2.160508731605925e-33,0.000005864374883080669,2.971453243160591e-33,0.000005154659211181771,1.0436219860866678e-32,0.000004593103679873548,3.2356823698950214e-33,0.00000414553361932389,7.12600766924378e-33,0.0000037871556557930576,8.026943541118061e-33,0.0000034997521746287084,4.132257402487702e-33,0.000003269836028575994,2.225860082690812e-35,0.0000030873512429818876,2.1857949713406394e-33,0.000002944767971791547,6.255710595215808e-34,0.0000028365653226524206,2.135717541061547e-34,0.0000027586614785267687,3.430862817494582e-33,0.000002708203804356724,2.1994073648064574e-33,0.0000026833457160395438,3.859512309376997e-33,0.0000026831180560099023,7.010638075549561e-33,0.0000027073865892592756,0.26883807081648264,2.343940509467653e-32,0.0032742553583823795,2.625121590783123e-32,0.0010974052868355625,9.224991289466699e-33,0.0005086432622243221,1.0980630454043017e-32,0.0002753249223603819,1.2195536648615384e-32,0.00016378509483069154,1.5254349451693038e-32,0.00010415177092516034,1.0245720184343874e-32,0.0000697508232570266,1.7931994612375728e-32,0.000048745471369917804,7.476734882831938e-33,0.00003532450510355353,6.656680018276945e-33,0.000026420438668015962,6.356357196389395e-33,0.000020319630973990985,3.205661088976554e-33,0.00001602157998386307,1.7111777252411588e-33,0.000012918935407324043,1.0951876762163775e-33,0.000010631031826424536,2.8631500610719154e-33,0.000008912079670131376,4.917612541246179e-33,0.000007599340152935154,2.425186275892045e-33,0.000006582802131311797,3.335477204672733e-33,0.0000057861412883836985,1.1714730335735696e-32,0.000005155791247322911,3.6320762614008994e-33,0.000004653390700420989,7.99899382424882e-33,0.000004251108910941216,9.010300689139044e-33,0.000003928496478060515,4.638488053467575e-33,0.0000036704139839441606,2.4985436280024686e-35,0.0000034655735261817057,2.4535702581812335e-33,0.0000033055227995153143,7.022079225846445e-34,0.0000031840645633746423,2.3973579898075123e-34,0.0000030966169493711064,3.85116768922821e-33,0.0000030399778545502843,2.4688502657703706e-33,0.000003012074475244377,4.33232976447176e-33,0.000003011818925256824,7.869490642341063e-33,0.0000030390605248446505,0.24443976386557764,1.5282414277135363e-32,0.0021348036195378704,1.7115705589009071e-32,0.0007155046024247694,6.014663683619435e-33,0.00033163371771543495,7.159334588271055e-33,0.0001795109349975399,7.95144939230803e-33,0.00010678733788303395,9.945785181293344e-33,0.0000679066087448227,6.680175533137251e-33,0.00004547730511416548,1.1691600933332769e-32,0.00003178188544463168,4.874806312626842e-33,0.000023031460011324876,4.3401332644206865e-33,0.000017226038266643927,4.144323781951943e-33,0.000013248331911528289,2.0900803836936584e-33,0.000010446016940219374,1.1156821938659517e-33,0.000008423102980506904,7.140587276659658e-34,0.000006931397444115584,1.8667643310129948e-33,0.000005810646347023391,3.206267045012545e-33,0.000004954744541549851,1.581213397596974e-33,0.000004291965127475214,2.174720059995344e-33,0.000003772544903675927,7.637965273116014e-33,0.000003361558770359422,2.3681016599471635e-33,0.0000030339952823015146,5.2153174079568015e-33,0.0000027717088915785034,5.874686125214617e-33,0.0000025613666567682368,3.02427880598106e-33,0.0000023930977277219824,1.6290421475459158e-35,0.0000022595424295563827,1.5997196597835016e-33,0.0000021551898873142653,4.5783723342289195e-34,0.0000020759995207254215,1.5630694474903639e-34,0.0000020189839668173285,2.5109485432661645e-33,0.0000019820554650982175,1.6096821739851955e-33,0.0000019638625544606617,2.8246646183378943e-33,0.0000019636959367174856,5.130881763445879e-33,0.000001981457369176689,0.21415983315420933,1.0126479300279344e-32,0.001414569993417552,1.134126030178946e-32,0.00047410981107542526,3.9854545352457874e-33,0.0002197481312062385,4.743939811942482e-33,0.00011894807551095396,5.2688133051657603e-33,0.00007075974692181816,6.590306082336549e-33,0.00004499648127164327,4.426437998069181e-33,0.000030134308658291932,7.747123765363179e-33,0.000021059408496760082,3.230158816695811e-33,0.0000152611752849047,2.8758721538105205e-33,0.000011414369272397944,2.7461242857668694e-33,0.000008778649526995356,1.3849353484062908e-33,0.000006921771154559171,7.392766899911293e-34,0.00000558134182397082,4.731517411952149e-34,0.000004592903416108847,1.2369609941006216e-33,0.0000038502679542205,2.124546310137942e-33,0.0000032831277263072357,1.0477483759909918e-33,0.0000028439548380732307,1.4410195452163282e-33,0.0000024997750475594047,5.061091515506282e-33,0.0000022274461801265894,1.569158642446328e-33,0.000002010395076734599,3.455789302549954e-33,0.0000018365980798572563,3.892702184603733e-33,0.000001697220475759225,2.0039567159791302e-33,0.0000015857216120347645,1.079440806096151e-35,0.000001497224798783207,1.060011051086628e-33,0.0000014280784034700442,3.0337348425965637e-34,0.000001375605044647201,1.0357257772151706e-34,0.000001337825226879265,1.6638122737906585e-33,0.0000013133555520315949,1.0666124422027637e-33,0.0000013013005108815399,1.8716877627526164e-33,0.0000013011901061315637,3.399840301898606e-33,0.0000013129592399136856,0.1736782601981411,6.715457997571217e-33,0.000938083720287475,7.521050005413825e-33,0.0003144098188622784,2.642986939393091e-33,0.00014572777975456437,3.145982686127329e-33,0.00007888139414492315,3.494056858133211e-33,0.00004692490788571806,4.370415657280642e-33,0.0000298397864704947,2.9354287480809647e-33,0.000019983814520316407,5.1375688139556045e-33,0.000013965719873617406,2.1421063743651412e-33,0.00001012057385201214,1.907158261288942e-33,0.000007569532820300278,1.8211148959410733e-33,0.000005821633602935371,9.184312618224126e-34,0.000004590229444893037,4.902574145470235e-34,0.000003701312714669706,3.1377446694494268e-34,0.0000030458216585629577,8.20300852270296e-34,0.0000025533368468198955,1.4089103514222038e-33,0.000002177233142230341,6.948229490576116e-34,0.0000018859920309661219,9.556239580040884e-34,0.0000016577463733914588,3.3563044456437e-33,0.000001477149246143021,1.0406004537612092e-33,0.0000013332100225556898,2.2917350859631888e-33,0.0000012179551152947215,2.5814774555495247e-33,0.0000011255257113165183,1.3289403706910605e-33,0.0000010515843232076345,7.158400446247046e-36,9.928969339692702e-7,7.029550428584986e-34,9.470419334661634e-7,2.0118462011435254e-34,9.122437941803248e-7,6.868500638418736e-35,8.87189797440365e-7,1.10337078753288e-33,8.709625314004083e-7,7.073328096470727e-34,8.629681317574881e-7,1.2412251269783858e-33,8.628949159399055e-7,2.2546320462255905e-33,8.706997137613419e-7,0.13070012734940273,4.3697097861030985e-33,0.0006104056661819235,4.89390385917294e-33,0.0002045846557042413,1.719776357440645e-33,0.00009482422576850364,2.0470727886993582e-33,0.00005132766820389472,2.2735626448274043e-33,0.00003053376691126185,2.8438042608358887e-33,0.00001941657694866177,1.910066555629848e-33,0.000013003352847218797,3.342986395155671e-33,0.000009087413371328049,1.3938562627184275e-33,0.000006585399032815211,1.2409768806559023e-33,0.000004925451347184,1.1849889590985336e-33,0.0000037881034078470655,5.976179248086877e-34,0.0000029868358246097408,3.190076719756913e-34,0.000002408422835280869,2.041712358761662e-34,0.000001981898585764507,5.337650333023637e-34,0.0000016614415592803664,9.167698394626548e-34,0.000001416713047966768,4.521172854039381e-34,0.0000012272041366658448,6.218189976968523e-34,0.0000010786860037402482,2.18392794453854e-33,9.611724946742956e-7,6.77112713364933e-34,8.675120720879096e-7,1.4912188023379815e-33,7.92516368691834e-7,1.6797524910734376e-33,7.323730886306219e-7,8.647338342457746e-34,6.842598538617809e-7,4.657929882686126e-36,6.460723081771119e-7,4.574087919364922e-34,6.162347238287837e-7,1.3090967193080078e-34,5.935917753015944e-7,4.4692937497946804e-35,5.772892841274713e-7,7.179570075081213e-34,5.667302957096829e-7,4.602573795360619e-34,5.615283859715358e-7,8.076580310793606e-34,5.614807448613229e-7,1.4670760683808666e-33,5.665592817878024e-7,0.09768208213167733,2.71977189152789e-33,0.0003799254995356297,3.0460380225590535e-33,0.0001273365104913578,1.0704141981137338e-33,0.000059019998239074306,1.2741283296027023e-33,0.000031947098565352844,1.4150989602776058e-33,0.000019004667369860647,1.7700257619456918e-33,0.00001208516418701419,1.188853627183876e-33,0.000008093478812244944,2.0807240929867144e-33,0.000005656140261908363,8.67556718807286e-34,0.00000409884959429275,7.724023340812883e-34,0.0000030656736449094574,7.375546250180749e-34,0.0000023577714940312897,3.7196622048838867e-34,0.00000185905071916152,1.9855508532409493e-34,0.000001499037934084958,1.2707919188604119e-34,0.0000012335629433707193,3.3222323799925774e-34,0.0000010341057584002198,5.7061108458524866e-34,8.817831194361853e-7,2.81404474142922e-34,7.638299748613475e-7,3.87029325593304e-34,6.713900959939065e-7,1.359308999322652e-33,5.982479528134061e-7,4.214449506607746e-34,5.399523228589401e-7,9.28156601066557e-34,4.932738897211851e-7,1.0455027527170644e-33,4.5583982416951076e-7,5.38223106604111e-34,4.258934364366372e-7,2.899164335335707e-36,4.0212494414685e-7,2.846979859401693e-34,3.8355359108359635e-7,8.148011274772765e-35,3.69460285587333e-7,2.7817544209298797e-35,3.5931337436721686e-7,4.468670424191858e-34,3.5274130406794897e-7,2.86470988922771e-34,3.495035586384759e-7,5.026982839643841e-34,3.494739061080375e-7,9.131298069737264e-34,3.5263486247787567e-7,0.07844617378025308,1.5583580364279823e-33,0.00021768735727048882,1.7452999814089097e-33,0.00007296048432334814,6.133192909057051e-34,0.00003381691268018746,7.300421509840334e-34,0.000018304850471083697,8.108146289616423e-34,0.000010889176484879955,1.0141783873143429e-33,0.000006924482450550428,6.81181980676247e-34,0.000004637351312074983,1.1922003907738098e-33,0.0000032408201804590168,4.970872700838642e-34,0.0000023485334285837414,4.4256630065954385e-34,0.0000017565506785667602,4.225994763685341e-34,0.0000013509412929921796,2.1312689890775688e-34,0.0000010651873553649706,1.1376686179171602e-34,8.589094617708462e-7,7.281304750419184e-35,7.067992474771871e-7,1.9035521119877009e-34,5.925155062228901e-7,3.2694520158408374e-34,5.052386249156972e-7,1.6123739094937842e-34,4.376545634204181e-7,2.2175766348287637e-34,3.8468893473360246e-7,7.788484430189983e-34,3.4278040299902854e-7,2.414769149648292e-34,3.093785343676341e-7,5.318094149150149e-34,2.826330151442471e-7,5.990456853677315e-34,2.611842763473136e-7,3.083877387586973e-34,2.4402578076506243e-7,1.6611452066878095e-36,2.3040705741221592e-7,1.6312448691992605e-34,2.197661586722835e-7,4.6685969843650567e-35,2.11691063864388e-7,1.5938724018468655e-35,2.058771495820743e-7,2.5604310748925962e-34,2.0211152548737114e-7,1.641403711766736e-34,2.0025638218449177e-7,2.8803294612857103e-34,2.002393920614405e-7,5.2319945559848e-34,2.0205053724500531e-7,0.06877100029184846,7.649492821708732e-34,0.00010685592385651376,8.567132435186589e-34,0.00003581402271195182,3.0105928185493035e-34,0.000016599666107051232,3.583548878342276e-34,0.000008985279313729609,3.980035742104088e-34,0.00000534515659484381,4.97828490779675e-34,0.0000033990121372202085,3.3437095645902276e-34,0.0000022763309036972094,5.8521393146382095e-34,0.0000015908173941653566,2.4400461353446052e-34,0.0000011528216997342484,2.172419726974484e-34,8.622358593191624e-7,2.0744088235004057e-34,6.631348818260596e-7,1.0461733729976963e-34,5.228671998455606e-7,5.584459875593421e-35,4.216118253141518e-7,3.574165058286289e-35,3.469456725335622e-7,9.343942711506251e-35,2.90847353795039e-7,1.6048718677911743e-34,2.48005859000248e-7,7.914639869830163e-35,2.1483095431306395e-7,1.0885391003337375e-34,1.8883178166043138e-7,3.823123720482822e-34,1.6826019251479463e-7,1.1853347462216514e-34,1.5186425856670308e-7,2.610486298279844e-34,1.3873571862082977e-7,2.9405281475620783e-34,1.2820720273253447e-7,1.5137790795142883e-34,1.197846332254264e-7,8.154042933227759e-37,1.1309962733504536e-7,8.007271516365436e-35,1.0787634252982693e-7,2.2916684282137337e-35,1.0391253072768157e-7,7.823821748045837e-36,1.0105866181380036e-7,1.256835635330972e-34,9.921023457125784e-8,8.057138101245302e-35,9.829960267236864e-8,1.4138637606518643e-34,9.829126275167753e-8,2.5682226974593235e-34,9.918029734814984e-8,0.06313714771883695,2.686255890011617e-34,0.000037524364233349714,3.0085014132203325e-34,0.000012576733085096235,1.0572233845757408e-34,0.000005829268932150181,1.2584271279100477e-34,0.000003155341150384144,1.3976605644157746e-34,0.0000018770471089514958,1.74821357015637e-34,0.0000011936237586780508,1.1742032735658242e-34,7.993742121462862e-7,2.0550831368194998e-34,5.586439120358624e-7,8.568657368195786e-35,4.0483390902150987e-7,7.628839484104605e-35,3.027895063973588e-7,7.284656709012079e-35,2.3287164570205974e-7,3.673824462208752e-35,1.836141464559568e-7,1.9610827257427744e-35,1.4805651504562096e-7,1.255131832067078e-35,1.2183616326985934e-7,3.2812922019459944e-35,1.0213623771356024e-7,5.635793912157662e-35,8.709168241927829e-8,2.7793670068315476e-35,7.544172271690224e-8,3.822599272831609e-35,6.631164935107572e-8,1.3425581083290722e-34,5.908756877510093e-8,4.1625144540786305e-35,5.332984402564959e-8,9.167188411038232e-35,4.87195229783808e-8,1.032618925233412e-34,4.5022246769721494e-8,5.3159053329411e-35,4.20645112080523e-8,2.863437664080036e-37,3.9716952112783114e-8,2.811896262287632e-35,3.7882702457249495e-8,8.047602575392295e-36,3.6490739218825e-8,2.74747460294948e-36,3.548855222971141e-8,4.4136025836941e-35,3.4839444023027895e-8,2.8294078033100915e-35,3.451965938383177e-8,4.965034863418105e-35,3.4516730671876484e-8,9.018772235896487e-35,3.4828931032980196e-8,0.059393561353029097,2.9486575651962663e-35,0.000004118985867551447,3.302381014772738e-35,0.0000013805266763570635,1.1604961919760303e-35,6.398689715399332e-7,1.381354131137574e-35,3.463564505693858e-7,1.5341883147339458e-35,2.060402800276667e-7,1.91898440814515e-35,1.310220570985446e-7,1.2889030336060515e-35,8.774595252940545e-8,2.2558299308052536e-35,6.132139546349279e-8,9.405669975914326e-36,4.443793210181061e-8,8.374047812092716e-36,3.3236690965310566e-8,7.996244212904571e-36,2.556192588994623e-8,4.0326948500978776e-36,2.0155013676752546e-8,2.1526472726364627e-36,1.6251912738066752e-8,1.3777369407377018e-36,1.3373749160531587e-8,3.6018188404403076e-36,1.121132171862716e-8,6.186315464867693e-36,9.55990638070466e-9,3.050864060130664e-36,8.281110047921437e-9,4.196002438360381e-36,7.2789173677287366e-9,1.473703282535379e-35,6.485942285900523e-9,4.569121572109317e-36,5.853926598046055e-9,1.006266735804926e-35,5.347859470019981e-9,1.1334882939395524e-35,4.942015726547129e-9,5.835179192767147e-36,4.617350106559308e-9,3.143146995806506e-38,4.3596625231928165e-9,3.086570872555879e-36,4.158320047095921e-9,8.83371696041988e-37,4.005526601441067e-9,3.015856308885214e-37,3.8955182341005175e-9,4.844736756677013e-36,3.8242667263277194e-9,3.105792994359745e-36,3.789164508437566e-9,5.450034624742211e-36,3.788843028689679e-9,9.89975343787641e-36,3.823112733227069e-9,0.0593935613530291,2.948657565196282e-35,0.000004118985867551488,3.3023810147727594e-35,0.0000013805266763570754,1.1604961919760394e-35,6.398689715399376e-7,1.3813541311375753e-35,3.463564505693881e-7,1.534188314733958e-35,2.0604028002766748e-7,1.9189844081451624e-35,1.3102205709854558e-7,1.2889030336060598e-35,8.774595252940607e-8,2.2558299308052795e-35,6.132139546349308e-8,9.405669975914383e-36,4.443793210181098e-8,8.374047812092801e-36,3.323669096531095e-8,7.996244212904643e-36,2.5561925889946313e-8,4.0326948500979023e-36,2.0155013676752728e-8,2.1526472726364794e-36,1.6251912738066887e-8,1.3777369407377149e-36,1.3373749160531731e-8,3.6018188404403156e-36,1.1211321718627242e-8,6.186315464867732e-36,9.559906380704784e-9,3.050864060130676e-36,8.281110047921493e-9,4.196002438360414e-36,7.278917367728798e-9,1.473703282535387e-35,6.4859422859005385e-9,4.569121572109332e-36,5.8539265980460766e-9,1.0062667358049325e-35,5.34785947002003e-9,1.1334882939395619e-35,4.942015726547154e-9,5.8351791927671995e-36,4.617350106559318e-9,3.1431469958065183e-38,4.359662523192837e-9,3.0865708725559065e-36,4.158320047095943e-9,8.833716960419951e-37,4.00552660144109e-9,3.0158563088852337e-37,3.895518234100548e-9,4.8447367566770407e-36,3.824266726327758e-9,3.1057929943597565e-36,3.789164508437581e-9,5.450034624742241e-36,3.788843028689696e-9,9.899753437876474e-36,3.823112733227089e-9,0.06313714771883691,2.6862558900115977e-34,0.00003752436423334949,3.008501413220314e-34,0.000012576733085096158,1.0572233845757346e-34,0.0000058292689321501465,1.2584271279100398e-34,0.0000031553411503841244,1.3976605644157664e-34,0.0000018770471089514829,1.7482135701563593e-34,0.0000011936237586780432,1.174203273565815e-34,7.993742121462802e-7,2.055083136819487e-34,5.586439120358597e-7,8.568657368195722e-35,4.048339090215071e-7,7.628839484104555e-35,3.0278950639735637e-7,7.284656709012031e-35,2.328716457020584e-7,3.6738244622087236e-35,1.8361414645595523e-7,1.9610827257427613e-35,1.4805651504561966e-7,1.255131832067069e-35,1.218361632698588e-7,3.28129220194597e-35,1.0213623771355949e-7,5.63579391215762e-35,8.709168241927757e-8,2.779367006831533e-35,7.544172271690177e-8,3.822599272831579e-35,6.631164935107531e-8,1.3425581083290669e-34,5.9087568775100415e-8,4.1625144540785893e-35,5.332984402564929e-8,9.167188411038179e-35,4.871952297838044e-8,1.0326189252334044e-34,4.502224676972116e-8,5.315905332941058e-35,4.2064511208052e-8,2.863437664080017e-37,3.971695211278283e-8,2.8118962622876166e-35,3.788270245724929e-8,8.047602575392235e-36,3.649073921882475e-8,2.7474746029494592e-36,3.54885522297112e-8,4.41360258369407e-35,3.483944402302763e-8,2.829407803310073e-35,3.4519659383831525e-8,4.965034863418082e-35,3.451673067187634e-8,9.018772235896443e-35,3.482893103297997e-8,0.06877100029184849,7.649492821708739e-34,0.0001068559238565137,8.567132435186592e-34,0.000035814022711951805,3.0105928185493052e-34,0.00001659966610705127,3.583548878342276e-34,0.000008985279313729619,3.980035742104089e-34,0.00000534515659484381,4.978284907796749e-34,0.0000033990121372202085,3.34370956459023e-34,0.0000022763309036972094,5.852139314638215e-34,0.0000015908173941653566,2.440046135344608e-34,0.0000011528216997342482,2.1724197269744843e-34,8.622358593191617e-7,2.0744088235004045e-34,6.631348818260594e-7,1.0461733729976967e-34,5.228671998455608e-7,5.584459875593421e-35,4.216118253141518e-7,3.5741650582862873e-35,3.469456725335625e-7,9.343942711506249e-35,2.90847353795039e-7,1.604871867791175e-34,2.480058590002481e-7,7.914639869830161e-35,2.1483095431306403e-7,1.0885391003337364e-34,1.888317816604315e-7,3.823123720482826e-34,1.6826019251479466e-7,1.1853347462216492e-34,1.5186425856670308e-7,2.610486298279844e-34,1.3873571862082972e-7,2.940528147562077e-34,1.2820720273253447e-7,1.5137790795142883e-34,1.1978463322542633e-7,8.154042933227765e-37,1.1309962733504528e-7,8.007271516365435e-35,1.0787634252982685e-7,2.2916684282137345e-35,1.0391253072768153e-7,7.823821748045831e-36,1.010586618138004e-7,1.2568356353309725e-34,9.921023457125783e-8,8.057138101245304e-35,9.829960267236869e-8,1.4138637606518654e-34,9.829126275167749e-8,2.5682226974593243e-34,9.918029734814989e-8,0.07844617378025315,1.5583580364279837e-33,0.00021768735727048895,1.7452999814089104e-33,0.00007296048432334818,6.133192909057052e-34,0.000033816912680187485,7.300421509840335e-34,0.00001830485047108371,8.108146289616423e-34,0.000010889176484879962,1.0141783873143432e-33,0.000006924482450550435,6.81181980676247e-34,0.000004637351312074988,1.1922003907738118e-33,0.000003240820180459016,4.970872700838641e-34,0.0000023485334285837427,4.425663006595444e-34,0.0000017565506785667615,4.225994763685343e-34,0.0000013509412929921804,2.131268989077567e-34,0.000001065187355364971,1.1376686179171598e-34,8.589094617708471e-7,7.281304750419187e-35,7.06799247477188e-7,1.9035521119877024e-34,5.925155062228905e-7,3.2694520158408383e-34,5.052386249156976e-7,1.612373909493784e-34,4.376545634204185e-7,2.2175766348287662e-34,3.846889347336029e-7,7.788484430189999e-34,3.427804029990288e-7,2.4147691496482935e-34,3.0937853436763454e-7,5.3180941491501505e-34,2.82633015144247e-7,5.990456853677317e-34,2.6118427634731333e-7,3.083877387586978e-34,2.440257807650626e-7,1.6611452066878095e-36,2.3040705741221597e-7,1.6312448691992596e-34,2.1976615867228346e-7,4.668596984365062e-35,2.116910638643884e-7,1.5938724018468637e-35,2.0587714958207447e-7,2.5604310748925975e-34,2.0211152548737148e-7,1.6414037117667367e-34,2.0025638218449198e-7,2.8803294612857137e-34,2.002393920614407e-7,5.2319945559848004e-34,2.0205053724500531e-7,0.09768208213167727,2.7197718915278913e-33,0.00037992549953562985,3.0460380225590528e-33,0.0001273365104913578,1.0704141981137344e-33,0.000059019998239074326,1.2741283296027032e-33,0.00003194709856535283,1.4150989602776058e-33,0.00001900466736986064,1.7700257619456918e-33,0.000012085164187014193,1.1888536271838764e-33,0.000008093478812244953,2.0807240929867158e-33,0.000005656140261908359,8.675567188072858e-34,0.00000409884959429275,7.72402334081289e-34,0.0000030656736449094574,7.375546250180745e-34,0.0000023577714940312897,3.7196622048838854e-34,0.000001859050719161521,1.98555085324095e-34,0.000001499037934084958,1.270791918860411e-34,0.0000012335629433707208,3.322232379992579e-34,0.0000010341057584002194,5.7061108458524866e-34,8.817831194361854e-7,2.8140447414292175e-34,7.638299748613477e-7,3.870293255933044e-34,6.713900959939068e-7,1.3593089993226531e-33,5.982479528134069e-7,4.214449506607747e-34,5.399523228589407e-7,9.281566010665572e-34,4.932738897211851e-7,1.045502752717065e-33,4.558398241695109e-7,5.382231066041107e-34,4.2589343643663737e-7,2.8991643353357076e-36,4.021249441468499e-7,2.8469798594016917e-34,3.835535910835964e-7,8.14801127477277e-35,3.69460285587333e-7,2.7817544209298797e-35,3.59313374367217e-7,4.4686704241918565e-34,3.527413040679491e-7,2.86470988922771e-34,3.4950355863847574e-7,5.026982839643842e-34,3.494739061080375e-7,9.131298069737264e-34,3.526348624778756e-7,0.13070012734940273,4.369709786103102e-33,0.0006104056661819233,4.893903859172944e-33,0.0002045846557042413,1.7197763574406444e-33,0.00009482422576850379,2.04707278869936e-33,0.000051327668203894755,2.2735626448274033e-33,0.000030533766911261866,2.8438042608358863e-33,0.00001941657694866177,1.9100665556298497e-33,0.000013003352847218797,3.342986395155673e-33,0.000009087413371328049,1.3938562627184275e-33,0.000006585399032815208,1.2409768806559032e-33,0.000004925451347183999,1.184988959098533e-33,0.0000037881034078470655,5.976179248086871e-34,0.000002986835824609742,3.190076719756913e-34,0.0000024084228352808677,2.041712358761662e-34,0.000001981898585764506,5.337650333023636e-34,0.0000016614415592803664,9.167698394626553e-34,0.000001416713047966768,4.521172854039381e-34,0.000001227204136665845,6.2181899769685275e-34,0.0000010786860037402482,2.1839279445385403e-33,9.611724946742954e-7,6.7711271336493305e-34,8.675120720879102e-7,1.4912188023379827e-33,7.925163686918343e-7,1.6797524910734376e-33,7.323730886306219e-7,8.647338342457746e-34,6.842598538617812e-7,4.6579298826861285e-36,6.460723081771122e-7,4.574087919364924e-34,6.162347238287837e-7,1.3090967193080083e-34,5.935917753015948e-7,4.4692937497946825e-35,5.772892841274716e-7,7.17957007508121e-34,5.667302957096832e-7,4.602573795360618e-34,5.61528385971536e-7,8.076580310793607e-34,5.614807448613229e-7,1.467076068380866e-33,5.665592817878023e-7,0.1736782601981411,6.715457997571213e-33,0.000938083720287475,7.521050005413825e-33,0.00031440981886227847,2.642986939393091e-33,0.00014572777975456437,3.14598268612733e-33,0.0000788813941449232,3.494056858133209e-33,0.00004692490788571806,4.370415657280646e-33,0.0000298397864704947,2.9354287480809664e-33,0.000019983814520316417,5.1375688139556045e-33,0.000013965719873617404,2.142106374365142e-33,0.000010120573852012146,1.907158261288942e-33,0.000007569532820300275,1.8211148959410726e-33,0.000005821633602935371,9.184312618224123e-34,0.000004590229444893037,4.902574145470234e-34,0.0000037013127146697043,3.1377446694494246e-34,0.0000030458216585629594,8.203008522702957e-34,0.0000025533368468198968,1.4089103514222044e-33,0.000002177233142230341,6.948229490576116e-34,0.0000018859920309661227,9.556239580040888e-34,0.0000016577463733914582,3.356304445643698e-33,0.000001477149246143021,1.0406004537612095e-33,0.0000013332100225556902,2.2917350859631895e-33,0.0000012179551152947208,2.5814774555495247e-33,0.0000011255257113165178,1.3289403706910605e-33,0.0000010515843232076347,7.158400446247046e-36,9.928969339692694e-7,7.029550428584985e-34,9.470419334661634e-7,2.0118462011435254e-34,9.122437941803245e-7,6.868500638418736e-35,8.871897974403647e-7,1.1033707875328794e-33,8.709625314004087e-7,7.073328096470727e-34,8.629681317574884e-7,1.2412251269783855e-33,8.628949159399051e-7,2.2546320462255925e-33,8.706997137613414e-7,0.21415983315420933,1.0126479300279355e-32,0.001414569993417552,1.134126030178946e-32,0.0004741098110754251,3.985454535245792e-33,0.00021974813120623872,4.743939811942484e-33,0.000118948075510954,5.2688133051657624e-33,0.00007075974692181816,6.590306082336551e-33,0.00004499648127164328,4.426437998069186e-33,0.000030134308658291932,7.747123765363183e-33,0.000021059408496760082,3.230158816695812e-33,0.000015261175284904686,2.8758721538105215e-33,0.000011414369272397944,2.746124285766868e-33,0.000008778649526995356,1.3849353484062915e-33,0.000006921771154559171,7.392766899911292e-34,0.000005581341823970816,4.731517411952147e-34,0.00000459290341610885,1.2369609941006216e-33,0.000003850267954220501,2.1245463101379423e-33,0.0000032831277263072336,1.0477483759909916e-33,0.0000028439548380732316,1.4410195452163275e-33,0.000002499775047559406,5.061091515506282e-33,0.0000022274461801265864,1.5691586424463275e-33,0.000002010395076734599,3.455789302549954e-33,0.000001836598079857257,3.892702184603731e-33,0.000001697220475759225,2.0039567159791302e-33,0.000001585721612034765,1.0794408060961516e-35,0.000001497224798783208,1.060011051086628e-33,0.0000014280784034700442,3.0337348425965637e-34,0.0000013756050446472012,1.0357257772151712e-34,0.000001337825226879265,1.6638122737906603e-33,0.0000013133555520315949,1.0666124422027642e-33,0.0000013013005108815399,1.871687762752615e-33,0.0000013011901061315633,3.399840301898606e-33,0.0000013129592399136856,0.2444397638655778,1.5282414277135368e-32,0.0021348036195378704,1.711570558900908e-32,0.0007155046024247694,6.014663683619435e-33,0.0003316337177154347,7.159334588271049e-33,0.00017951093499754003,7.951449392308031e-33,0.00010678733788303395,9.945785181293346e-33,0.00006790660874482272,6.680175533137255e-33,0.00004547730511416548,1.1691600933332769e-32,0.00003178188544463169,4.874806312626842e-33,0.000023031460011324883,4.3401332644206906e-33,0.00001722603826664392,4.144323781951944e-33,0.000013248331911528287,2.0900803836936584e-33,0.000010446016940219367,1.1156821938659517e-33,0.000008423102980506901,7.140587276659655e-34,0.000006931397444115586,1.866764331012993e-33,0.000005810646347023387,3.206267045012545e-33,0.000004954744541549852,1.581213397596974e-33,0.000004291965127475215,2.1747200599953456e-33,0.0000037725449036759245,7.637965273116024e-33,0.0000033615587703594256,2.3681016599471635e-33,0.0000030339952823015146,5.2153174079568015e-33,0.000002771708891578502,5.874686125214613e-33,0.0000025613666567682368,3.024278805981061e-33,0.0000023930977277219824,1.6290421475459158e-35,0.000002259542429556384,1.599719659783501e-33,0.0000021551898873142657,4.5783723342289195e-34,0.0000020759995207254203,1.5630694474903654e-34,0.0000020189839668173272,2.510948543266168e-33,0.0000019820554650982187,1.609682173985196e-33,0.0000019638625544606604,2.8246646183378943e-33,0.0000019636959367174865,5.1308817634458785e-33,0.000001981457369176689,0.268838070816483,2.3439405094676538e-32,0.0032742553583823795,2.6251215907831217e-32,0.0010974052868355623,9.224991289466696e-33,0.0005086432622243215,1.0980630454043017e-32,0.0002753249223603818,1.2195536648615391e-32,0.0001637850948306915,1.525434945169304e-32,0.00010415177092516037,1.0245720184343875e-32,0.00006975082325702664,1.7931994612375728e-32,0.00004874547136991783,7.476734882831938e-33,0.00003532450510355349,6.656680018276949e-33,0.000026420438668015935,6.356357196389395e-33,0.000020319630973990982,3.205661088976554e-33,0.000016021579983863075,1.711177725241158e-33,0.000012918935407324045,1.095187676216378e-33,0.000010631031826424527,2.8631500610719147e-33,0.000008912079670131376,4.9176125412461777e-33,0.0000075993401529351585,2.4251862758920425e-33,0.000006582802131311796,3.335477204672736e-33,0.0000057861412883836985,1.1714730335735692e-32,0.0000051557912473229075,3.6320762614008994e-33,0.000004653390700420989,7.998993824248823e-33,0.000004251108910941216,9.01030068913903e-33,0.000003928496478060517,4.638488053467575e-33,0.0000036704139839441585,2.498543628002468e-35,0.0000034655735261817057,2.4535702581812335e-33,0.0000033055227995153164,7.022079225846445e-34,0.0000031840645633746457,2.3973579898075136e-34,0.000003096616949371104,3.851167689228209e-33,0.0000030399778545502873,2.4688502657703734e-33,0.000003012074475244376,4.332329764471761e-33,0.000003011818925256828,7.869490642341064e-33,0.0000030390605248446505,0.2578297571927322,2.6086911809248387e-32,0.0036440861203631525,2.9216319761829786e-32,0.0012213584270184452,1.0266964252606325e-32,0.0005660950809296722,1.2220904801445871e-32,0.00030642317667587353,1.3573035993611548e-32,0.00018228480233434014,1.697734508390535e-32,0.00011591582857701329,1.1402985604439185e-32,0.00007762925584411615,1.9957433225265818e-32,0.00005425132624275066,8.321240352378474e-33,0.0000393144470015169,7.408559384410994e-33,0.00002940465641983049,7.07431476782453e-33,0.000022614755753138277,3.5677440524061466e-33,0.00001783123515275475,1.904457140785312e-33,0.000014378143441736935,1.2188903348285513e-33,0.000011831818622403354,3.186546025299531e-33,0.000009918708919985107,5.473062313543042e-33,0.000008457694023263583,2.6991137464731956e-33,0.0000073263369084510045,3.712223041864567e-33,0.000006439692342712142,1.3037922076225015e-32,0.000005738143567745852,4.042323289900775e-33,0.000005178996323734738,8.902489018515815e-33,0.000004731276361464493,1.0028024111659892e-32,0.000004372224497685011,5.1624104063350483e-33,0.000004084991300582522,2.78075689259124e-35,0.000003857013886692065,2.7307037309366498e-33,0.000003678885253534029,7.815230836375438e-34,0.0000035437081753654347,2.6681422247149672e-34,0.000003446383256698545,4.2861613366774605e-33,0.0000033833467135107683,2.747709632272985e-33,0.000003352291616668804,4.8216712001801055e-33,0.0000033520072020276835,8.758358309063128e-33,0.0000033823257704009,0.23319856592963764,1.8285590142296787e-32,0.0025543178789207877,2.047914496501292e-32,0.0008561097525304607,7.196616514117803e-33,0.0003968036809853637,8.566228843079925e-33,0.0002147869651941395,9.514003611490473e-33,0.00012777231774416622,1.190025006327396e-32,0.00008125106366988823,7.992909344193195e-33,0.000054414135555660614,1.3989139339984663e-32,0.00003802740330495064,5.8327636353334235e-33,0.00002755741537355621,5.1930209845758354e-33,0.000020611159323866633,4.95873261380737e-33,0.000015851786439644087,2.5008059962002636e-33,0.0000124987833024603,1.3349269923021202e-33,0.000010078342730071471,8.543797462135833e-34,0.00000829349934362719,2.2336056875668538e-33,0.00000695250734842794,3.836336589799748e-33,0.000005928410675407069,1.891940605171616e-33,0.0000051353872367837256,2.6020783738863497e-33,0.00000451389477153731,9.138916140642347e-33,0.000004022144983073806,2.8334617543952205e-33,0.0000036302113802026007,6.240189204042406e-33,0.00000331638259937712,7.029131703426634e-33,0.000003064705617873631,3.618585500914079e-33,0.0000028633698462850737,1.9491682723925763e-35,0.0000027035693462265083,1.9140835676166938e-33,0.0000025787102903768727,5.47807686039468e-34,0.0000024839580764659933,1.8702311534321673e-34,0.0000024157382892260137,3.0043797464158752e-33,0.000002371552898438967,1.926003834151513e-33,0.0000023497848648428944,3.3797447552282705e-33,0.000002349585504734804,6.139160952816595e-33,0.00000237083726956721,0.20843646951184458,1.3489736925620193e-32,0.0018843841485512794,1.5107977149758202e-32,0.0006315735642778182,5.309123893434766e-33,0.00029273199420721185,6.319521144166551e-33,0.00015845371316833805,7.018718281973176e-33,0.00009426083267384548,8.779111937510433e-33,0.000059940940669904856,5.896569018797577e-33,0.00004014266796798599,1.0320137772077072e-32,0.00002805376597398735,4.3029755330657826e-33,0.00002032979416285995,3.831021388208482e-33,0.000015205367442195181,3.65818100067906e-33,0.000011694259097346968,1.8449070950530303e-33,0.000009220664869356304,9.848090108620974e-34,0.000007435045356311598,6.302972953735764e-34,0.000006118321775109092,1.6477867482739734e-33,0.0000051290384600053055,2.8301613976801737e-33,0.000004373536745379253,1.3957318765243896e-33,0.0000037885035318142973,1.9196182595375343e-33,0.0000033300130050012417,6.742006878815706e-33,0.0000029672368939771982,2.0903155631375615e-33,0.0000026780976781302102,4.6035435593578264e-33,0.00000244657834186163,5.185566162036469e-33,0.0000022609099415367688,2.6695209763715702e-33,0.0000021123795101254247,1.4379501571306017e-35,0.0000019944906867624707,1.412067293418978e-33,0.000001902379040209872,4.041314233228768e-34,0.000001832477963524289,1.3797162713136396e-34,0.0000017821505212143786,2.216406038220489e-33,0.0000017495538539460767,1.4208611720078902e-33,0.0000017334950314353475,2.4933221880717137e-33,0.0000017333479585002834,4.529012493065401e-33,0.0000017490259166390905,0.1807372816046262,1.0297247655451153e-32,0.0014384246603642997,1.153251417294076e-32,0.0004821049839491732,4.0526634333647235e-33,0.00022345386404836566,4.823939461840261e-33,0.00012095396192058674,5.357664183654765e-33,0.00007195300720862671,6.701442015802416e-33,0.00004575528152861568,4.501083441345745e-33,0.000030642479975412404,7.877767747688508e-33,0.000021414544812476805,3.284630750298208e-33,0.000015518532824886025,2.9243695577776678e-33,0.000011606856020079064,2.7924336805201673e-33,0.000008926688692030073,1.4082902701370957e-33,0.000007038496764703568,7.517435168737117e-34,0.000005675463041688098,4.8113075761292984e-34,0.00000467035605671319,1.2578205434178667e-33,0.000003915197127135987,2.1603736957583897e-33,0.000003338492903583104,1.0654171295129568e-33,0.0000028919140029003676,1.4653202454113322e-33,0.000002541930120464109,5.146439467923779e-33,0.0000022650088224956336,1.595620222273662e-33,0.000002044297467715637,3.514066166355966e-33,0.0000018675696370894191,3.958346949139035e-33,0.0000017258416322752223,2.037750533363797e-33,0.0000016124625022709298,1.0976440063888028e-35,0.000001522473318888669,1.0778865968010215e-33,0.0000014521608701186665,3.0848943713661857e-34,0.0000013988026243661427,1.0531917870829045e-34,0.000001360385704882239,1.6918700495372642e-33,0.0000013355033845334615,1.0845993107836067e-33,0.0000013232450526356856,1.903251056486071e-33,0.0000013231327860700664,3.457173667127135e-33,0.0000013351003891876974,0.15287235617641887,8.07183874843251e-33,0.0011275568286524546,9.04014333565253e-33,0.0003779139650189246,3.176814507172858e-33,0.00017516171492269937,3.7814047764075985e-33,0.0000948137705603476,4.199782583243973e-33,0.00005640274868453584,5.2531473597114e-33,0.00003586679341373355,3.528323387711194e-33,0.000024020123191138728,6.175249259279668e-33,0.00001678650046897617,2.5747666416971702e-33,0.000012164716122800554,2.292363969580768e-33,0.000009098418655664217,2.1889416608251078e-33,0.000006997480694890186,1.1039349884447396e-33,0.000005517358892108918,5.892790628544226e-34,0.000004448899747588669,3.7715028542669206e-34,0.0000036610133356943455,9.859843077154724e-34,0.0000030690569884310807,1.6934805000329865e-33,0.00000261698827513811,8.351625169172098e-34,0.0000022669226075560494,1.1486398241099327e-33,0.0000019925761454623334,4.034207091412284e-33,0.0000017755022109508281,1.250779778139341e-33,0.0000016024903027843691,2.7546171943462898e-33,0.0000014639563373105972,3.102881406070273e-33,0.0000013528581449318176,1.5973582713762804e-33,0.0000012639821573422852,8.604246221138062e-36,0.0000011934411543801783,8.449371219957657e-34,0.0000011383244117835844,2.4181966633028353e-34,0.0000010964977829576178,8.255792771970781e-35,0.0000010663834077710186,1.3262283942387132e-33,0.00000104687857655179,8.501991052601082e-34,0.0000010372694769443588,1.4919264001198094e-33,0.0000010371814730772244,2.7100201238342157e-33,0.0000010465626752977644,0.12950688540330485,6.487189095884431e-33,0.0009061967900739696,7.265397773669076e-33,0.00030372253825428525,2.5531476870225196e-33,0.00014077426500667066,3.0390458230350938e-33,0.00007620009240623365,3.375288410511959e-33,0.00004532985700628431,4.221858405882004e-33,0.000028825485541704498,2.8356489420652613e-33,0.000019304533465514957,4.9629348290619386e-33,0.000013491003251464607,2.069292834387757e-33,0.000009776559746276635,1.8423309744821803e-33,0.000007312232581984888,1.7592123574556448e-33,0.000005623747187884367,8.872123493540689e-34,0.000004434200379674397,4.735927996238223e-34,0.000003575499316911495,3.0310878294054828e-34,0.0000029422894251716595,7.924175456264006e-34,0.0000024665449410599643,1.361019288949532e-33,0.0000021032255885723847,6.712048322433129e-34,0.0000018218842173733072,9.231408077263153e-34,0.000001601396986042721,3.242218417585648e-33,0.0000014269386371024329,1.0052288197251166e-33,0.0000012878921324465312,2.213835432474312e-33,0.0000011765549194223505,2.493729006565016e-33,0.0000010872673351885776,1.2837676127146736e-33,0.000001015839330300752,6.915075239196388e-36,9.591468170468928e-7,6.790605034798694e-34,9.148504996009165e-7,1.9434604078195455e-34,8.812352033971733e-7,6.635029578435352e-35,8.570328311213622e-7,1.0658654918531942e-33,8.413571551885371e-7,6.832894631406153e-34,8.336344976705468e-7,1.1990339470791341e-33,8.335637705729094e-7,2.177993582983637e-33,8.411032711313403e-7,0.11287893452352148,5.361147378908706e-33,0.0007488997891186332,6.004275142179243e-33,0.0002510025938523173,2.1099741086522908e-33,0.00011633876717685214,2.5115303882361688e-33,0.00006297333400308182,2.7894082240576482e-33,0.000037461532334508837,3.489031195526175e-33,0.000023821978051436926,2.3434389946954087e-33,0.000015953666134899534,4.101472094809141e-33,0.000011149244403300017,1.71010644075576e-33,0.000008079551387171266,1.5225404607356967e-33,0.000006042980397434296,1.453849514746003e-33,0.0000046475811095284615,7.332106542558753e-34,0.0000036645149989737404,3.913868948238415e-34,0.000002954866662251436,2.504953737539206e-34,0.000002431568897807703,6.548702658338438e-34,0.0000020384038063748365,1.1247745187858126e-33,0.0000017381491713540529,5.546975699189951e-34,0.0000015056428373334494,7.6290267611366335e-34,0.0000013234276244177767,2.679436426836433e-33,0.0000011792516328865085,8.307419087709004e-34,0.0000010643407226348987,1.8295594364089932e-33,9.723293446779539e-7,2.0608692809241998e-33,8.985402364665624e-7,1.0609321341348756e-33,8.395106543894826e-7,5.714761346650697e-36,7.926587876807571e-7,5.611896592718631e-34,7.560513938371801e-7,1.6061159182186762e-34,7.282710170869062e-7,5.483325814562343e-35,7.082696755548464e-7,8.808533100327238e-34,6.953149724164406e-7,5.646845590914326e-34,6.889328083544962e-7,9.909064785369068e-34,6.888743580166829e-7,1.7999389899240762e-33,6.951051573751844e-7,0.10201807766976484,4.586687402318026e-33,0.0006407153143863526,5.136910293313124e-33,0.00021474329165073597,1.805171725262782e-33,0.00009953271568518177,2.1487200366065322e-33,0.00005387633977200899,2.386456229787855e-33,0.00003204991884875152,2.9850131510602173e-33,0.00002038070564086295,2.0049107691678875e-33,0.000013649033371029345,3.5089821373366806e-33,0.000009538648210113262,1.4630680923444398e-33,0.000006912396534687886,1.3025974958736199e-33,0.000005170024269507897,1.2438294982125731e-33,0.000003976201402369326,6.272925986610985e-34,0.00000313514693655366,3.3484797433162575e-34,0.000002528012893023093,2.1430934349167764e-34,0.0000020803096134456844,5.602690965500312e-34,0.0000017439403170147,9.622919780305214e-34,0.0000014870598295736406,4.745671357689424e-34,0.0000012881408672994618,6.5269537403344665e-34,0.0000011322480774688755,2.292370725086156e-33,0.0000010088994438023672,7.107346950631191e-34,9.10588319860229e-7,1.565265161667195e-33,8.318687103592231e-7,1.763160476771552e-33,7.687390201751852e-7,9.076721288235407e-34,7.18236726292685e-7,4.8892190464781305e-36,6.781529808516607e-7,4.8012139166697436e-34,6.468338134595104e-7,1.3740998200753793e-34,6.230665309980332e-7,4.691216200360792e-35,6.059545408305044e-7,7.536071096108599e-34,5.948712466238469e-7,4.8311142567309875e-34,5.894110364424208e-7,8.47762230872621e-34,5.893610297164036e-7,1.5399236220412032e-33,5.946917410183244e-7,0.09473461036456375,4.100038017921047e-33,0.0005727351609618447,4.5918820381327174e-33,0.0001919589417444404,1.6136422767143593e-33,0.00008897225438339915,1.920739973581621e-33,0.000048160038379775384,2.133252260725201e-33,0.000028649409524781534,2.6683020510959575e-33,0.000018218304547496638,1.792188927454119e-33,0.000012200865422136982,3.136677716474712e-33,0.00000852659378558784,1.3078359773085536e-33,0.000006178988472779493,1.1643913758830619e-33,0.000004621482608089696,1.1118586864903614e-33,0.000003554324828935624,5.607366007919334e-34,0.0000028025065813603116,2.9932046912324656e-34,0.0000022597897048643436,1.915710356601827e-34,0.0000018595879239259602,5.008243193029639e-34,0.0000015589075455920463,8.601924108173661e-34,0.0000013292821815355901,4.242153711467715e-34,0.0000011514686014347632,5.834441314456892e-34,0.0000010121160995175501,2.049149266041652e-33,9.018548056618326e-7,6.353254570916709e-34,8.139745316445532e-7,1.3991898963333469e-33,7.43607104479818e-7,1.576088438642177e-33,6.871754999010273e-7,8.113677496537204e-34,6.420315197802481e-7,4.3704709325456e-36,6.062006759067786e-7,4.291803182525378e-34,5.782044848141484e-7,1.2283072746314204e-34,5.569589206133975e-7,4.193476268307663e-35,5.416625195083867e-7,6.736490911542349e-34,5.317551672898476e-7,4.318531084439494e-34,5.268742876122018e-7,7.5781431605272915e-34,5.268295866199964e-7,1.376537104288547e-33,5.315947073015125e-7,0.09013909756846601,3.864959599563567e-33,0.0005398970079524988,4.328603414351638e-33,0.0001809528476015039,1.5211230189546188e-33,0.00008387097074975263,1.8106130642476176e-33,0.00004539875041101316,2.010940817461296e-33,0.000027006776493447783,2.515313170717303e-33,0.000017173745887440116,1.689432578214868e-33,0.000011501320653651462,2.956834204472377e-33,0.00000803771583559531,1.2328503279870394e-33,0.000005824712041468101,1.097630218597386e-33,0.000004356506815858582,1.0481095260399654e-33,0.0000033505352407750346,5.285863932443077e-34,0.0000026418229945977025,2.8215873009644847e-34,0.0000021302231527206676,1.8058718237168697e-34,0.0000017529672082051722,4.721092224326184e-34,0.0000014695265402009954,8.108727043819148e-34,0.0000012530668997698337,3.9989269948952645e-34,0.0000010854483800537832,5.499919724606486e-34,9.540857469138031e-7,1.931659924154106e-33,8.501463579897857e-7,5.988986476468451e-34,7.67304758182478e-7,1.318966409045151e-33,7.009718944558051e-7,1.485722355272205e-33,6.477758336187493e-7,7.648474377782766e-34,6.052202137518916e-7,4.1198870623938046e-36,5.714437552449405e-7,4.045729780366721e-34,5.450527444685235e-7,1.1578814565987018e-34,5.250253088820915e-7,3.953040505452654e-35,5.106059371515911e-7,6.350249705523514e-34,5.012666295900679e-7,4.070925220171825e-34,4.966655984088997e-7,7.1436452606354774e-34,4.966234603779404e-7,1.297612429963059e-33,5.011153696823422e-7,0.090139097568466,3.8649595995635656e-33,0.0005398970079524983,4.3286034143516396e-33,0.00018095284760150383,1.5211230189546183e-33,0.00008387097074975274,1.8106130642476176e-33,0.00004539875041101315,2.010940817461296e-33,0.00002700677649344777,2.515313170717303e-33,0.000017173745887440126,1.689432578214867e-33,0.00001150132065365147,2.956834204472379e-33,0.000008037715835595299,1.2328503279870394e-33,0.000005824712041468101,1.0976302185973856e-33,0.000004356506815858586,1.0481095260399645e-33,0.0000033505352407750367,5.285863932443081e-34,0.0000026418229945977033,2.821587300964483e-34,0.000002130223152720666,1.8058718237168706e-34,0.000001752967208205173,4.721092224326181e-34,0.0000014695265402009935,8.108727043819145e-34,0.0000012530668997698344,3.9989269948952645e-34,0.0000010854483800537832,5.499919724606479e-34,9.540857469138036e-7,1.9316599241541066e-33,8.501463579897863e-7,5.988986476468451e-34,7.67304758182478e-7,1.3189664090451528e-33,7.009718944558054e-7,1.4857223552722055e-33,6.477758336187495e-7,7.648474377782761e-34,6.052202137518918e-7,4.1198870623938066e-36,5.714437552449408e-7,4.045729780366721e-34,5.450527444685235e-7,1.1578814565987016e-34,5.250253088820911e-7,3.953040505452654e-35,5.106059371515907e-7,6.350249705523509e-34,5.012666295900679e-7,4.070925220171825e-34,4.966655984089e-7,7.143645260635472e-34,4.966234603779406e-7,1.2976124299630596e-33,5.011153696823426e-7,0.09473461036456378,4.1000380179210415e-33,0.000572735160961844,4.5918820381327146e-33,0.00019195894174444048,1.613642276714359e-33,0.00008897225438339909,1.9207399735816187e-33,0.00004816003837977535,2.1332522607251983e-33,0.000028649409524781534,2.6683020510959575e-33,0.000018218304547496638,1.7921889274541175e-33,0.000012200865422137009,3.136677716474713e-33,0.000008526593785587835,1.307835977308553e-33,0.000006178988472779493,1.1643913758830607e-33,0.000004621482608089697,1.1118586864903628e-33,0.0000035543248289356303,5.6073660079193295e-34,0.000002802506581360308,2.993204691232463e-34,0.0000022597897048643415,1.9157103566018283e-34,0.0000018595879239259615,5.008243193029636e-34,0.0000015589075455920453,8.601924108173646e-34,0.0000013292821815355914,4.242153711467712e-34,0.0000011514686014347624,5.834441314456887e-34,0.0000010121160995175501,2.0491492660416514e-33,9.018548056618331e-7,6.353254570916706e-34,8.139745316445536e-7,1.3991898963333493e-33,7.436071044798175e-7,1.576088438642177e-33,6.871754999010273e-7,8.113677496537202e-34,6.420315197802479e-7,4.3704709325456e-36,6.06200675906778e-7,4.291803182525373e-34,5.782044848141486e-7,1.2283072746314206e-34,5.569589206133967e-7,4.193476268307662e-35,5.416625195083861e-7,6.736490911542343e-34,5.31755167289847e-7,4.318531084439493e-34,5.268742876122018e-7,7.578143160527289e-34,5.268295866199967e-7,1.376537104288547e-33,5.31594707301512e-7,0.1020180776697648,4.586687402318027e-33,0.0006407153143863522,5.136910293313131e-33,0.00021474329165073613,1.805171725262781e-33,0.00009953271568518181,2.1487200366065322e-33,0.000053876339772009014,2.386456229787856e-33,0.00003204991884875154,2.9850131510602156e-33,0.00002038070564086295,2.004910769167886e-33,0.000013649033371029348,3.5089821373366854e-33,0.000009538648210113262,1.4630680923444416e-33,0.000006912396534687886,1.3025974958736199e-33,0.0000051700242695079024,1.2438294982125748e-33,0.000003976201402369331,6.272925986610987e-34,0.000003135146936553658,3.3484797433162614e-34,0.000002528012893023095,2.1430934349167772e-34,0.0000020803096134456853,5.602690965500311e-34,0.0000017439403170147,9.622919780305214e-34,0.0000014870598295736414,4.745671357689424e-34,0.0000012881408672994627,6.5269537403344545e-34,0.0000011322480774688776,2.292370725086157e-33,0.0000010088994438023674,7.107346950631191e-34,9.105883198602297e-7,1.5652651616671957e-33,8.318687103592231e-7,1.7631604767715543e-33,7.687390201751858e-7,9.07672128823541e-34,7.182367262926857e-7,4.8892190464781325e-36,6.781529808516607e-7,4.801213916669743e-34,6.468338134595101e-7,1.3740998200753812e-34,6.230665309980328e-7,4.691216200360796e-35,6.059545408305041e-7,7.536071096108596e-34,5.948712466238469e-7,4.83111425673099e-34,5.894110364424209e-7,8.47762230872621e-34,5.893610297164045e-7,1.5399236220412034e-33,5.946917410183239e-7,0.11287893452352148,5.361147378908706e-33,0.0007488997891186332,6.0042751421792495e-33,0.00025100259385231753,2.109974108652292e-33,0.00011633876717685214,2.5115303882361678e-33,0.00006297333400308187,2.7894082240576482e-33,0.00003746153233450883,3.489031195526173e-33,0.00002382197805143695,2.343438994695411e-33,0.000015953666134899558,4.101472094809152e-33,0.00001114924440330001,1.7101064407557593e-33,0.00000807955138717127,1.5225404607356974e-33,0.000006042980397434305,1.453849514746006e-33,0.00000464758110952847,7.332106542558751e-34,0.0000036645149989737383,3.913868948238415e-34,0.000002954866662251439,2.5049537375392055e-34,0.0000024315688978077042,6.548702658338438e-34,0.0000020384038063748378,1.1247745187858134e-33,0.0000017381491713540533,5.546975699189952e-34,0.000001505642837333449,7.629026761136628e-34,0.0000013234276244177778,2.6794364268364334e-33,0.0000011792516328865085,8.307419087709007e-34,0.0000010643407226348985,1.8295594364089932e-33,9.723293446779547e-7,2.0608692809242015e-33,8.985402364665625e-7,1.0609321341348756e-33,8.395106543894832e-7,5.7147613466507005e-36,7.926587876807577e-7,5.611896592718631e-34,7.560513938371801e-7,1.6061159182186767e-34,7.282710170869053e-7,5.483325814562347e-35,7.082696755548464e-7,8.808533100327236e-34,6.953149724164399e-7,5.6468455909143294e-34,6.889328083544969e-7,9.90906478536907e-34,6.88874358016683e-7,1.7999389899240773e-33,6.951051573751837e-7,0.12950688540330468,6.487189095884422e-33,0.0009061967900739697,7.265397773669076e-33,0.0003037225382542853,2.553147687022519e-33,0.00014077426500667072,3.039045823035096e-33,0.00007620009240623365,3.3752884105119605e-33,0.00004532985700628426,4.2218584058820084e-33,0.000028825485541704498,2.835648942065263e-33,0.000019304533465514974,4.962934829061942e-33,0.000013491003251464607,2.0692928343877575e-33,0.00000977655974627664,1.8423309744821814e-33,0.0000073122325819848905,1.759212357455649e-33,0.0000056237471878843755,8.872123493540689e-34,0.000004434200379674396,4.735927996238221e-34,0.0000035754993169114976,3.0310878294054806e-34,0.0000029422894251716625,7.924175456264005e-34,0.0000024665449410599643,1.3610192889495321e-33,0.0000021032255885723856,6.712048322433129e-34,0.000001821884217373307,9.231408077263156e-34,0.000001601396986042721,3.242218417585649e-33,0.0000014269386371024325,1.0052288197251166e-33,0.0000012878921324465312,2.213835432474312e-33,0.0000011765549194223498,2.493729006565019e-33,0.000001087267335188578,1.2837676127146736e-33,0.0000010158393303007528,6.915075239196385e-36,9.591468170468928e-7,6.79060503479869e-34,9.14850499600917e-7,1.943460407819545e-34,8.812352033971723e-7,6.635029578435353e-35,8.570328311213622e-7,1.0658654918531939e-33,8.413571551885371e-7,6.832894631406153e-34,8.336344976705468e-7,1.1990339470791333e-33,8.335637705729094e-7,2.1779935829836358e-33,8.411032711313405e-7,0.1528723561764188,8.07183874843251e-33,0.001127556828652455,9.04014333565253e-33,0.00037791396501892486,3.1768145071728564e-33,0.0001751617149226993,3.7814047764076005e-33,0.0000948137705603476,4.199782583243973e-33,0.00005640274868453584,5.253147359711408e-33,0.00003586679341373355,3.528323387711194e-33,0.000024020123191138738,6.175249259279672e-33,0.00001678650046897617,2.5747666416971702e-33,0.000012164716122800566,2.2923639695807676e-33,0.000009098418655664218,2.188941660825111e-33,0.000006997480694890196,1.10393498844474e-33,0.0000055173588921089185,5.892790628544223e-34,0.000004448899747588669,3.7715028542669227e-34,0.000003661013335694347,9.859843077154722e-34,0.0000030690569884310794,1.693480500032986e-33,0.0000026169882751381126,8.351625169172098e-34,0.000002266922607556051,1.1486398241099324e-33,0.0000019925761454623334,4.0342070914122815e-33,0.0000017755022109508281,1.250779778139341e-33,0.000001602490302784368,2.754617194346289e-33,0.0000014639563373105983,3.102881406070276e-33,0.0000013528581449318176,1.5973582713762804e-33,0.0000012639821573422852,8.604246221138062e-36,0.0000011934411543801783,8.449371219957649e-34,0.0000011383244117835852,2.418196663302834e-34,0.0000010964977829576167,8.255792771970781e-35,0.000001066383407771018,1.3262283942387123e-33,0.0000010468785765517895,8.501991052601078e-34,0.00000103726947694436,1.4919264001198092e-33,0.0000010371814730772244,2.7100201238342133e-33,0.000001046562675297764,0.1807372816046261,1.0297247655451152e-32,0.0014384246603643,1.1532514172940761e-32,0.00048210498394917346,4.0526634333647235e-33,0.00022345386404836566,4.82393946184027e-33,0.00012095396192058673,5.357664183654763e-33,0.0000719530072086267,6.701442015802425e-33,0.00004575528152861568,4.501083441345745e-33,0.00003064247997541241,7.877767747688511e-33,0.000021414544812476805,3.284630750298208e-33,0.00001551853282488604,2.924369557777671e-33,0.000011606856020079069,2.7924336805201718e-33,0.000008926688692030083,1.4082902701370944e-33,0.000007038496764703572,7.517435168737112e-34,0.000005675463041688098,4.811307576129302e-34,0.000004670356056713195,1.2578205434178676e-33,0.000003915197127135987,2.1603736957583884e-33,0.0000033384929035831073,1.0654171295129564e-33,0.0000028919140029003668,1.4653202454113329e-33,0.000002541930120464108,5.1464394679237805e-33,0.000002265008822495633,1.595620222273662e-33,0.000002044297467715637,3.5140661663559644e-33,0.000001867569637089418,3.958346949139037e-33,0.000001725841632275222,2.0377505333637977e-33,0.0000016124625022709283,1.0976440063888018e-35,0.0000015224733188886695,1.077886596801021e-33,0.0000014521608701186672,3.084894371366184e-34,0.0000013988026243661417,1.0531917870829041e-34,0.0000013603857048822385,1.6918700495372656e-33,0.0000013355033845334605,1.084599310783607e-33,0.000001323245052635686,1.9032510564860706e-33,0.0000013231327860700655,3.45717366712713e-33,0.0000013351003891876978,0.20843646951184475,1.3489736925620193e-32,0.0018843841485512802,1.5107977149758202e-32,0.0006315735642778186,5.3091238934347635e-33,0.00029273199420721185,6.31952114416656e-33,0.0001584537131683379,7.018718281973176e-33,0.00009426083267384544,8.77911193751044e-33,0.00005994094066990486,5.8965690187975835e-33,0.000040142667967986034,1.0320137772077074e-32,0.00002805376597398738,4.3029755330657805e-33,0.00002032979416285995,3.831021388208485e-33,0.000015205367442195186,3.658181000679063e-33,0.000011694259097346968,1.844907095053029e-33,0.000009220664869356305,9.848090108620967e-34,0.000007435045356311601,6.302972953735764e-34,0.000006118321775109097,1.6477867482739744e-33,0.0000051290384600053055,2.8301613976801716e-33,0.000004373536745379257,1.3957318765243889e-33,0.0000037885035318142964,1.919618259537535e-33,0.0000033300130050012396,6.742006878815701e-33,0.0000029672368939771974,2.0903155631375615e-33,0.0000026780976781302102,4.60354355935783e-33,0.000002446578341861628,5.1855661620364754e-33,0.0000022609099415367688,2.669520976371573e-33,0.0000021123795101254247,1.437950157130603e-35,0.0000019944906867624694,1.4120672934189769e-33,0.0000019023790402098746,4.0413142332287676e-34,0.0000018324779635242874,1.3797162713136387e-34,0.0000017821505212143769,2.21640603822049e-33,0.0000017495538539460775,1.4208611720078909e-33,0.0000017334950314353483,2.493322188071713e-33,0.000001733347958500285,4.5290124930653975e-33,0.000001749025916639091,0.23319856592963753,1.8285590142296784e-32,0.0025543178789207877,2.0479144965012915e-32,0.0008561097525304607,7.196616514117806e-33,0.00039680368098536347,8.56622884307993e-33,0.00021478696519413944,9.514003611490477e-33,0.00012777231774416617,1.190025006327396e-32,0.00008125106366988826,7.992909344193195e-33,0.00005441413555566063,1.3989139339984663e-32,0.00003802740330495064,5.83276363533342e-33,0.00002755741537355621,5.193020984575833e-33,0.00002061115932386664,4.958732613807372e-33,0.000015851786439644087,2.500805996200262e-33,0.000012498783302460305,1.3349269923021195e-33,0.000010078342730071471,8.543797462135833e-34,0.000008293499343627196,2.2336056875668524e-33,0.000006952507348427938,3.836336589799746e-33,0.000005928410675407069,1.891940605171616e-33,0.0000051353872367837256,2.6020783738863525e-33,0.000004513894771537312,9.13891614064235e-33,0.000004022144983073806,2.8334617543952195e-33,0.000003630211380202602,6.240189204042409e-33,0.000003316382599377123,7.029131703426637e-33,0.0000030647056178736302,3.618585500914079e-33,0.0000028633698462850737,1.9491682723925763e-35,0.0000027035693462265083,1.9140835676166928e-33,0.000002578710290376875,5.478076860394679e-34,0.0000024839580764659933,1.8702311534321673e-34,0.0000024157382892260124,3.0043797464158728e-33,0.000002371552898438967,1.9260038341515147e-33,0.0000023497848648428944,3.379744755228267e-33,0.0000023495855047348047,6.139160952816595e-33,0.00000237083726956721,0.2578297571927323,2.60869118092484e-32,0.003644086120363155,2.9216319761829775e-32,0.0012213584270184456,1.0266964252606329e-32,0.000566095080929672,1.2220904801445865e-32,0.00030642317667587364,1.3573035993611548e-32,0.00018228480233434008,1.6977345083905352e-32,0.00011591582857701337,1.1402985604439189e-32,0.0000776292558441162,1.9957433225265826e-32,0.000054251326242750676,8.321240352378468e-33,0.00003931444700151693,7.408559384410998e-33,0.000029404656419830504,7.074314767824528e-33,0.000022614755753138274,3.5677440524061466e-33,0.000017831235152754754,1.904457140785312e-33,0.000014378143441736947,1.2188903348285515e-33,0.000011831818622403349,3.186546025299532e-33,0.000009918708919985116,5.473062313543043e-33,0.00000845769402326358,2.699113746473196e-33,0.0000073263369084510045,3.712223041864568e-33,0.000006439692342712143,1.3037922076224998e-32,0.000005738143567745851,4.042323289900776e-33,0.000005178996323734733,8.902489018515816e-33,0.000004731276361464495,1.0028024111659898e-32,0.0000043722244976850104,5.1624104063350504e-33,0.000004084991300582522,2.780756892591239e-35,0.000003857013886692068,2.730703730936648e-33,0.0000036788852535340274,7.815230836375432e-34,0.0000035437081753654297,2.6681422247149672e-34,0.0000034463832566985434,4.286161336677459e-33,0.000003383346713510771,2.7477096322729828e-33,0.0000033522916166688055,4.8216712001801055e-33,0.000003352007202027685,8.758358309063125e-33,0.0000033823257704009,0.24719118748987987,2.912862925431777e-32,0.004068984261035908,3.2622924198188444e-32,0.0013637680484143912,1.1464085801657784e-32,0.0006321014099203383,1.3645854584728038e-32,0.0003421519255934878,1.515564342013285e-32,0.00020353909518761748,1.8956892800794183e-32,0.00012943154099711565,1.2732566525803778e-32,0.00008668077805860418,2.2284457337739611e-32,0.00006057699662709347,9.291491723239148e-33,0.00004389848669782823,8.272392730694872e-33,0.00003283322079159184,7.899175402864313e-33,0.000025251621994466118,3.98374075615929e-33,0.00001991034591250517,2.126515640881897e-33,0.000016054625888345904,1.361012178233567e-33,0.000013211401202887323,3.558095279789429e-33,0.00001107522411714954,6.111217923482035e-33,0.000009443855805989405,3.0138287050281356e-33,0.000008180583165955148,4.145065904561135e-33,0.000007190556403699336,1.4558135557862543e-32,0.000006407207484546366,4.513655633085309e-33,0.000005782864024942256,9.940513616834045e-33,0.000005282940197772199,1.1197285391149412e-32,0.000004882023113389815,5.764344200046502e-33,0.000004561298706870963,3.104991390432145e-35,0.00000430673927047118,3.0491020617333717e-33,0.000004107840951161512,8.72648181717644e-34,0.000003956902311032445,2.9792459233890475e-34,0.0000038482293683022405,4.785925042151086e-33,0.0000037778428039815253,3.0680908404275977e-33,0.000003743166702456702,5.38387501760463e-33,0.0000037428491252480106,9.779577357666683e-33,0.0000037767028195496896,0.23361852271408393,2.5260214768206436e-32,0.003528604639265098,2.829045144618354e-32,0.0011826534471016633,9.941603051166441e-33,0.0005481554669280229,1.1833623013854998e-32,0.0002967125932493288,1.3142905023110976e-32,0.00017650817734251974,1.6439331192179106e-32,0.00011224244350195164,1.1041623764173678e-32,0.00007516917637691494,1.9324980019813172e-32,0.00005253209587905602,8.057539350611313e-33,0.00003806856794752962,7.173781340683146e-33,0.000028472819695235466,6.850128971946348e-33,0.00002189809171096605,3.4546818596527064e-33,0.000017266161392905578,1.844104689157814e-33,0.000013922498529611039,1.180263569018725e-33,0.000011456867017674928,3.0855640390252774e-33,0.000009604383967492988,5.2996203801655435e-33,0.000008189668789989649,2.6135785415412708e-33,0.000007094164503829862,3.59458229439559e-33,0.000006235617799743298,1.2624748923321192e-32,0.000005556301180911559,3.9142216300672277e-33,0.000005014873373202856,8.620368184001916e-33,0.000004581341704691975,9.710234948986066e-33,0.000004233668233093889,4.9988130653094836e-33,0.000003955537486901264,2.692634407577616e-35,0.0000037347847017773663,2.6441674359993805e-33,0.0000035623009841629267,7.567565330594822e-34,0.0000034314076821406164,2.583588510638739e-34,0.000003337167000614174,4.150332422915287e-33,0.0000032761280922599854,2.6606344184932786e-33,0.0000032460571347771047,4.6688719212461756e-33,0.0000032457817332665507,8.480804992233923e-33,0.0000032751395029470736,0.21914734981806264,2.2842879526855274e-32,0.0031909265781099438,2.5583130629550223e-32,0.0010694766636808596,8.990218130981334e-33,0.0004956984494361445,1.0701176824986472e-32,0.0002683179887380062,1.1885164034855986e-32,0.00015961681511967075,1.4866131003670988e-32,0.00010150114075601705,9.984969793025646e-33,0.00006797568650413824,1.7475630928011357e-32,0.00004750491428793542,7.286454306024836e-33,0.00003442550743787948,6.487269582659323e-33,0.00002574804672313232,6.194589883160439e-33,0.00001980250268700081,3.1240780115212916e-33,0.000015613835757477457,1.66762878446943e-33,0.000012590152520199895,1.0673154905620492e-33,0.000010360475373683145,2.7902837827239874e-33,0.00000868527001501343,4.792460831907016e-33,0.000007405939310145586,2.3634660396294155e-33,0.00000641527186493453,3.250590347457907e-33,0.0000056388857926232185,1.1416594093063534e-32,0.000005024577964009857,3.5396410504622695e-33,0.0000045349633547332235,7.795421919853837e-33,0.000004142919511648603,8.78099133964322e-33,0.0000038285174648221985,4.520439975508666e-33,0.0000035770030898934045,2.4349564699496035e-35,0.0000033773757580565496,2.3911276583994123e-33,0.0000032213982725931313,6.843369494069361e-34,0.0000031030311107774206,2.3363459747685494e-34,0.000003017809011345915,3.753156669609218e-33,0.0000029626113638682537,2.4060187945489098e-33,0.0000029354181168851278,4.222073319724048e-33,0.0000029351690705652587,7.669214553638082e-33,0.0000029617173799182515,0.20243554253020074,2.1079376806659175e-32,0.0029445825174223557,2.3608076635008799e-32,0.000986911547344711,8.296160531522268e-33,0.00045742982559868515,9.87503078599972e-33,0.0002476034591857785,1.096761250284338e-32,0.00014729417044951658,1.3718444590802414e-32,0.00009366510862986569,9.214115953413389e-33,0.00006272786702865075,1.6126487417340582e-32,0.00004383746748154809,6.723929691991275e-33,0.000031767809403817776,5.9864431635462975e-33,0.0000237602609721022,5.71635875224677e-33,0.000018273721374024892,2.882894755052e-33,0.000014408425476403431,1.5388854754557087e-33,0.000011618174876534013,9.849172198580086e-34,0.00000956063197029195,2.574869914469427e-33,0.000008014754842917598,4.4224760537810686e-33,0.000006834190284209759,2.18100310692089e-33,0.0000059200037718156685,2.9996401590963263e-33,0.000005203555806205563,1.0535216825595015e-32,0.000004636673413843514,3.266375737581321e-33,0.000004184857747309279,7.193604283658865e-33,0.0000038230802453355946,8.103086345429427e-33,0.000003532950482752592,4.171455593573778e-33,0.000003300853374540715,2.2469743745545406e-35,0.000003116637556051197,2.2065292094619197e-33,0.000002972701753843201,6.315051656385621e-34,0.0000028634727049172624,2.1559767495585816e-34,0.0000027848298725169374,3.46340764788905e-33,0.000002733893561766147,2.2202707287658015e-33,0.0000027087996720452852,3.896123267085226e-33,0.0000027085698524547793,7.077140305240111e-33,0.0000027330685946459113,0.18510967109237356,1.975195129976785e-32,0.0027591541730920864,2.212141204423894e-32,0.0009247630515420695,7.773728810707407e-33,0.00042862422931935285,9.253173324704559e-33,0.0002320111980704549,1.0276952208684434e-32,0.00013801865719955566,1.28545569421432e-32,0.00008776676279917905,8.633878090966181e-33,0.00005877772317712983,1.5110958783326253e-32,0.000041076903304236015,6.30050560969708e-33,0.000029767304318327385,5.6094606073857125e-33,0.000022264012921030835,5.3563841437053696e-33,0.000017122975596282416,2.701351056363037e-33,0.000013501087860735472,1.4419776849151859e-33,0.000010886546905930869,9.228943122641277e-34,0.000008958573054804614,2.412723375093841e-33,0.000007510044001247519,4.143980746673577e-33,0.000006403822793490439,2.043659428249071e-33,0.00000554720508427959,2.810744685800261e-33,0.000004875873789462654,9.87178565952242e-33,0.0000043446895182514786,3.0606832017475917e-33,0.000003921325909179455,6.740603518968567e-33,0.0000035823305173385303,7.592813029566137e-33,0.0000033104710124910112,3.90876772539994e-33,0.000003092989688433571,2.1054763063017535e-35,0.000002920374439471259,2.067578082907969e-33,0.0000027855026649600117,5.917375732523663e-34,0.000002683152065381398,2.0202090484601015e-34,0.0000026094615853499225,3.2453074784799596e-33,0.0000025617328721831465,2.08045426148595e-33,0.000002538219212731334,3.650773821977919e-33,0.0000025380038655035183,6.63147359302229e-33,0.0000025609598554790813,0.16950445477077608,1.8751318168170428e-32,0.002619375523434639,2.1000742117848226e-32,0.0008779145891189666,7.379911993017163e-33,0.0004069101415133854,8.784407901957618e-33,0.00022025751924816886,9.756322185058676e-33,0.00013102663706562152,1.2203345556842487e-32,0.0000833205018006041,8.196486142146652e-33,0.000055800045867263785,1.4345438163144438e-32,0.00003899594888277968,5.981322225574803e-33,0.000028259293768523557,5.3252855378468026e-33,0.000021136118839428955,5.0850299185753357e-33,0.000016255526277825683,2.5645007104883843e-33,0.00001281712324270715,1.3689271480516592e-33,0.000010335034837202147,8.761405201046089e-34,0.000008504732070973374,2.290494897012952e-33,0.000007129585446375978,3.9340468333658736e-33,0.000006079405364609851,1.94012771623885e-33,0.000005266183877267953,2.6683524626528608e-33,0.000004628862201332568,9.371681358482429e-33,0.000004124587705904584,2.905629102508884e-33,0.000003722671681808892,6.399124790832916e-33,0.000003400849784140105,7.20816139874231e-33,0.000003142762671881124,3.710749695161082e-33,0.0000029362989437590337,1.9988129535066477e-35,0.000002772428377006052,1.9628346527261264e-33,0.000002644389201666657,5.61760169398888e-34,0.0000025472236797253312,1.917865331833692e-34,0.000002477266356721419,3.0809003201236083e-33,0.0000024319555784208434,1.9750585245675253e-33,0.000002409633120098251,3.465825753465692e-33,0.000002409428682353134,6.295523382950157e-33,0.00000243122172271478,0.15711468488843922,1.8010669816365892e-32,0.0025159142015803637,2.0171244964807598e-32,0.0008432383072904257,7.088416770917585e-33,0.0003908378140673067,8.437437242305137e-33,0.00021155768454104805,9.370962399616842e-33,0.00012585128555620744,1.1721332095595862e-32,0.00008002946957680577,7.872737491661143e-33,0.00005359602950790408,1.3778815324357452e-32,0.00003745566862045066,5.745069157483641e-33,0.00002714309494105418,5.114944914263881e-33,0.000020301274513202308,4.884179024025289e-33,0.000015613457883624806,2.4632068597099934e-33,0.000012310866502810299,1.3148566220837311e-33,0.00000992681678824335,8.415343112853189e-34,0.000008168808178348168,2.2000238562533223e-33,0.000006847977739517725,3.7786580080618364e-33,0.00000583927816273169,1.863495642566197e-33,0.000005058177678769394,2.5629566267029318e-33,0.000004446029233036678,9.001514296649966e-33,0.000003961672807930266,2.7908612026509717e-33,0.0000035756318512906646,6.146369161238455e-33,0.000003266521425740545,6.923450062097094e-33,0.0000030186283591802328,3.564180764858068e-33,0.0000028203196321396465,1.9198629028327064e-35,0.0000026629217018214134,1.885305689835712e-33,0.0000025399398778282586,5.39571502989239e-34,0.0000024466122452039734,1.842112588252345e-34,0.0000023794181293258113,2.9592094755809038e-33,0.000002335897057379015,1.8970467374590588e-33,0.0000023144563019754688,3.3289309437822135e-33,0.0000023142599392082063,6.046859850311491e-33,0.00000233519218784951,0.14801658772121976,1.748662996999471e-32,0.0024427109667688953,1.9584340856284778e-32,0.0008187033800771559,6.882171646581832e-33,0.0003794659667052629,8.191940913667416e-33,0.00020540218573751145,9.098304150572542e-33,0.0001221895067872379,1.1380287307519176e-32,0.00007770092592075097,7.643671710781526e-33,0.00005203659527498589,1.337790584462272e-32,0.00003636585558019632,5.5779101795346975e-33,0.000026353337344697417,4.966120080185126e-33,0.000019710587054850776,4.742068572193352e-33,0.000015159167501641184,2.3915372018069914e-33,0.000011952668575881084,1.2765994517917754e-33,0.00000963798535678049,8.170489636720216e-34,0.000007931127901797466,2.1360117914384816e-33,0.000006648728447894527,3.668713881484453e-33,0.0000056693780722566564,1.8092752287670175e-33,0.000004911004548578988,2.4883846418402166e-33,0.0000043166672215180836,8.739605538273971e-33,0.00000384640366853634,2.7096580885640334e-33,0.0000034715949895228907,5.967533927244594e-33,0.000003171478464897535,6.722004821920454e-33,0.0000029307981142351453,3.460477084789591e-33,0.0000027382593933027157,1.864002422855444e-35,0.0000025854411253770587,1.8304506892090016e-33,0.0000024660375900766005,5.238720886745193e-34,0.0000023754254254921655,1.788514337460529e-34,0.0000023101863948229864,2.8731080870831564e-33,0.0000022679316153622247,1.841850118399747e-33,0.0000022471147018414225,3.2320721107600914e-33,0.0000022469240524604726,5.870919946948991e-33,0.0000022672472547712385,0.1410158902371421,1.715116449952454e-32,0.0023958497256323305,1.92086326649137e-32,0.0008029972826161597,6.750143293878158e-33,0.0003721862490428755,8.034785800453324e-33,0.0002014617271704649,8.923761263373015e-33,0.00011984540958547668,1.1161966599512339e-32,0.00007621030264372733,7.497034655444003e-33,0.000051038319395325646,1.3121262598567145e-32,0.00003566820892831459,5.470902925087799e-33,0.00002584777196554957,4.870849475616415e-33,0.00001933245694224789,4.6510961968813366e-33,0.000014868352332188851,2.345657683916595e-33,0.000011723367241429428,1.2521090247379547e-33,0.00000945308916479581,8.013746047208846e-34,0.000007778976254653277,2.0950343016777726e-33,0.000006521178495695128,3.59833286293574e-33,0.000005560616087497652,1.774565889868109e-33,0.00000481679128654982,2.44064719179878e-33,0.000004233855793426188,8.571943965480833e-33,0.0000037726138291849126,2.657675703904828e-33,0.000003404995521904456,5.8530520871253194e-33,0.0000031106364663455855,6.593049127543791e-33,0.0000028745733545226093,3.394090904302433e-33,0.000002685728318005769,1.8282431913274871e-35,0.0000025358417328705666,1.795335117902146e-33,0.0000024187288483824204,5.138220677731251e-34,0.0000023298549977255274,1.7542032778287783e-34,0.000002265867519937265,2.8179900593214388e-33,0.000002224423360904551,1.806515859164849e-33,0.00000220400580138735,3.170067676910337e-33,0.000002203818809445507,5.758291560262965e-33,0.0000022237521291638938,0.13349877754010553,1.698740224536321e-32,0.0023729737423886133,1.9025225352561795e-32,0.0007953301271241649,6.685691770382591e-33,0.00036863255103520973,7.958068290431074e-33,0.00019953813611811488,8.838555663477573e-33,0.00011870110510252748,1.1055390231985796e-32,0.000075482633630256,7.425451685393479e-33,0.00005055099678623892,1.2995978537496913e-32,0.00003532764276464918,5.4186658075827476e-33,0.00002560097301482856,4.8243417711494956e-33,0.00001914786733450277,4.606686734331807e-33,0.00001472638675931761,2.3232609428778363e-33,0.000011611430524486934,1.240153673464139e-33,0.000009362829451500086,7.937229428351646e-34,0.00000770470125795759,2.075030555588254e-33,0.000006458913167281247,3.56397536488519e-33,0.000005507522373362988,1.7576220310245497e-33,0.000004770799738924474,2.4173434746807656e-33,0.0000041934302136619314,8.490097577361204e-33,0.0000037365922666394303,2.632299761407552e-33,0.0000033724840418768633,5.7971661440141184e-33,0.0000030809355769617033,6.530097566035952e-33,0.0000028471264361339616,3.361683543430089e-33,0.000002660084524347691,1.8107868124224182e-35,0.0000025116290819813086,1.7781929509145464e-33,0.0000023956344113587955,5.089160067264426e-34,0.00000230760914343924,1.7374538446901475e-34,0.000002244232629040723,2.791083407919929e-33,0.00000220318418593186,1.7892669365460258e-33,0.000002182961576767509,3.1397993281559905e-33,0.000002182776370256733,5.7033104068810516e-33,0.0000022025193632267458,0.13349877754010553,1.6987402245363204e-32,0.0023729737423886146,1.9025225352561795e-32,0.0007953301271241647,6.685691770382591e-33,0.00036863255103520973,7.95806829043107e-33,0.00019953813611811488,8.838555663477576e-33,0.00011870110510252746,1.1055390231985796e-32,0.000075482633630256,7.425451685393479e-33,0.00005055099678623892,1.2995978537496905e-32,0.00003532764276464918,5.4186658075827476e-33,0.00002560097301482856,4.8243417711494936e-33,0.00001914786733450277,4.606686734331806e-33,0.000014726386759317598,2.3232609428778363e-33,0.000011611430524486934,1.240153673464139e-33,0.00000936282945150009,7.937229428351644e-34,0.000007704701257957588,2.075030555588254e-33,0.000006458913167281247,3.563975364885188e-33,0.0000055075223733629925,1.7576220310245497e-33,0.000004770799738924474,2.4173434746807656e-33,0.000004193430213661932,8.490097577361204e-33,0.0000037365922666394286,2.632299761407552e-33,0.0000033724840418768633,5.797166144014116e-33,0.0000030809355769617033,6.530097566035952e-33,0.000002847126436133963,3.361683543430089e-33,0.000002660084524347691,1.8107868124224182e-35,0.0000025116290819813086,1.7781929509145454e-33,0.0000023956344113587942,5.089160067264426e-34,0.0000023076091434392403,1.7374538446901468e-34,0.000002244232629040723,2.791083407919929e-33,0.000002203184185931859,1.7892669365460258e-33,0.000002182961576767508,3.139799328155991e-33,0.0000021827763702567303,5.703310406881049e-33,0.0000022025193632267458,0.141015890237142,1.7151164499524524e-32,0.0023958497256323305,1.920863266491369e-32,0.00080299728261616,6.750143293878158e-33,0.0003721862490428755,8.034785800453329e-33,0.0002014617271704649,8.923761263373015e-33,0.00011984540958547668,1.1161966599512339e-32,0.00007621030264372733,7.497034655444002e-33,0.00005103831939532566,1.312126259856714e-32,0.000035668208928314615,5.470902925087799e-33,0.00002584777196554958,4.870849475616415e-33,0.00001933245694224789,4.6510961968813345e-33,0.000014868352332188843,2.345657683916595e-33,0.000011723367241429435,1.2521090247379547e-33,0.000009453089164795814,8.013746047208848e-34,0.000007778976254653273,2.0950343016777726e-33,0.000006521178495695128,3.598332862935741e-33,0.0000055606160874976515,1.7745658898681083e-33,0.00000481679128654982,2.44064719179878e-33,0.000004233855793426189,8.571943965480833e-33,0.000003772613829184914,2.657675703904827e-33,0.000003404995521904456,5.853052087125318e-33,0.0000031106364663455867,6.593049127543791e-33,0.0000028745733545226093,3.394090904302433e-33,0.000002685728318005767,1.8282431913274874e-35,0.0000025358417328705666,1.795335117902146e-33,0.0000024187288483824204,5.138220677731251e-34,0.0000023298549977255265,1.7542032778287761e-34,0.000002265867519937265,2.817990059321439e-33,0.000002224423360904551,1.8065158591648492e-33,0.00000220400580138735,3.1700676769103375e-33,0.000002203818809445507,5.758291560262963e-33,0.0000022237521291638946,0.14801658772121992,1.748662996999472e-32,0.0024427109667688957,1.9584340856284778e-32,0.000818703380077156,6.882171646581836e-33,0.00037946596670526304,8.191940913667416e-33,0.0002054021857375115,9.098304150572546e-33,0.000122189506787238,1.1380287307519176e-32,0.00007770092592075098,7.64367171078153e-33,0.000052036595274985915,1.3377905844622728e-32,0.00003636585558019632,5.577910179534702e-33,0.000026353337344697417,4.9661200801851256e-33,0.000019710587054850776,4.742068572193354e-33,0.00001515916750164119,2.391537201806993e-33,0.00001195266857588109,1.2765994517917748e-33,0.00000963798535678049,8.170489636720221e-34,0.000007931127901797466,2.1360117914384816e-33,0.000006648728447894529,3.668713881484455e-33,0.000005669378072256659,1.8092752287670175e-33,0.000004911004548578993,2.4883846418402173e-33,0.000004316667221518085,8.739605538273971e-33,0.000003846403668536343,2.7096580885640334e-33,0.0000034715949895228924,5.9675339272445985e-33,0.000003171478464897538,6.722004821920454e-33,0.000002930798114235146,3.46047708478959e-33,0.0000027382593933027186,1.8640024228554454e-35,0.0000025854411253770604,1.8304506892090036e-33,0.000002466037590076603,5.238720886745193e-34,0.0000023754254254921655,1.7885143374605296e-34,0.0000023101863948229877,2.8731080870831564e-33,0.0000022679316153622247,1.841850118399747e-33,0.0000022471147018414225,3.232072110760093e-33,0.0000022469240524604734,5.870919946948994e-33,0.0000022672472547712372,0.15711468488843905,1.80106698163659e-32,0.0025159142015803637,2.017124496480761e-32,0.0008432383072904257,7.08841677091759e-33,0.00039083781406730684,8.437437242305137e-33,0.00021155768454104805,9.370962399616845e-33,0.00012585128555620754,1.1721332095595864e-32,0.00008002946957680575,7.872737491661143e-33,0.00005359602950790411,1.3778815324357444e-32,0.00003745566862045069,5.745069157483645e-33,0.00002714309494105418,5.11494491426388e-33,0.000020301274513202305,4.884179024025291e-33,0.000015613457883624806,2.4632068597099944e-33,0.000012310866502810304,1.3148566220837306e-33,0.000009926816788243353,8.415343112853189e-34,0.00000816880817834817,2.2000238562533223e-33,0.000006847977739517723,3.7786580080618364e-33,0.0000058392781627316894,1.8634956425661967e-33,0.000005058177678769397,2.5629566267029338e-33,0.00000444602923303668,9.001514296649966e-33,0.000003961672807930267,2.7908612026509693e-33,0.0000035756318512906654,6.1463691612384574e-33,0.0000032665214257405466,6.923450062097094e-33,0.000003018628359180234,3.564180764858066e-33,0.0000028203196321396495,1.9198629028327072e-35,0.0000026629217018214134,1.8853056898357127e-33,0.0000025399398778282586,5.395715029892393e-34,0.0000024466122452039734,1.842112588252345e-34,0.0000023794181293258125,2.9592094755809038e-33,0.0000023358970573790157,1.89704673745906e-33,0.0000023144563019754688,3.328930943782213e-33,0.0000023142599392082063,6.046859850311491e-33,0.00000233519218784951,0.16950445477077597,1.8751318168170428e-32,0.002619375523434639,2.1000742117848234e-32,0.0008779145891189665,7.379911993017165e-33,0.00040691014151338534,8.784407901957614e-33,0.00022025751924816886,9.756322185058675e-33,0.0001310266370656216,1.2203345556842479e-32,0.0000833205018006041,8.196486142146652e-33,0.000055800045867263785,1.4345438163144438e-32,0.0000389959488827797,5.981322225574805e-33,0.000028259293768523557,5.3252855378468026e-33,0.00002113611883942895,5.085029918575338e-33,0.000016255526277825683,2.5645007104883853e-33,0.000012817123242707156,1.3689271480516588e-33,0.000010335034837202147,8.761405201046084e-34,0.000008504732070973374,2.2904948970129525e-33,0.0000071295854463759745,3.9340468333658756e-33,0.0000060794053646098546,1.9401277162388495e-33,0.000005266183877267956,2.6683524626528615e-33,0.00000462886220133257,9.371681358482425e-33,0.000004124587705904587,2.905629102508884e-33,0.0000037226716818088928,6.399124790832913e-33,0.0000034008497841401067,7.20816139874231e-33,0.000003142762671881124,3.710749695161081e-33,0.000002936298943759035,1.9988129535066485e-35,0.0000027724283770060527,1.9628346527261268e-33,0.000002644389201666659,5.617601693988883e-34,0.0000025472236797253312,1.9178653318336932e-34,0.0000024772663567214204,3.080900320123606e-33,0.0000024319555784208447,1.9750585245675253e-33,0.00000240963312009825,3.465825753465692e-33,0.000002409428682353134,6.295523382950162e-33,0.000002431221722714779,0.1851096710923735,1.975195129976785e-32,0.0027591541730920864,2.2121412044238952e-32,0.0009247630515420692,7.773728810707403e-33,0.00042862422931935285,9.253173324704557e-33,0.0002320111980704549,1.0276952208684432e-32,0.00013801865719955555,1.28545569421432e-32,0.00008776676279917909,8.633878090966181e-33,0.00005877772317712984,1.5110958783326253e-32,0.00004107690330423601,6.300505609697083e-33,0.00002976730431832739,5.609460607385713e-33,0.000022264012921030835,5.3563841437053675e-33,0.00001712297559628242,2.7013510563630392e-33,0.00001350108786073548,1.4419776849151852e-33,0.000010886546905930862,9.22894312264128e-34,0.000008958573054804614,2.412723375093839e-33,0.000007510044001247517,4.143980746673575e-33,0.000006403822793490443,2.04365942824907e-33,0.00000554720508427959,2.81074468580026e-33,0.000004875873789462656,9.871785659522417e-33,0.0000043446895182514786,3.0606832017475903e-33,0.0000039213259091794515,6.74060351896857e-33,0.0000035823305173385303,7.592813029566137e-33,0.0000033104710124910112,3.9087677253999376e-33,0.000003092989688433571,2.1054763063017543e-35,0.0000029203744394712596,2.067578082907969e-33,0.0000027855026649600104,5.917375732523665e-34,0.000002683152065381397,2.020209048460102e-34,0.0000026094615853499225,3.2453074784799596e-33,0.0000025617328721831474,2.08045426148595e-33,0.000002538219212731334,3.650773821977918e-33,0.0000025380038655035188,6.631473593022287e-33,0.0000025609598554790813,0.20243554253020107,2.1079376806659175e-32,0.002944582517422357,2.3608076635008812e-32,0.000986911547344711,8.296160531522265e-33,0.0004574298255986851,9.875030785999716e-33,0.0002476034591857786,1.0967612502843384e-32,0.00014729417044951652,1.371844459080242e-32,0.00009366510862986569,9.214115953413393e-33,0.00006272786702865079,1.6126487417340576e-32,0.00004383746748154809,6.723929691991276e-33,0.000031767809403817776,5.9864431635463e-33,0.000023760260972102204,5.7163587522467676e-33,0.000018273721374024892,2.882894755052002e-33,0.000014408425476403443,1.5388854754557083e-33,0.000011618174876534013,9.849172198580086e-34,0.000009560631970291955,2.574869914469426e-33,0.00000801475484291759,4.422476053781065e-33,0.000006834190284209761,2.1810031069208906e-33,0.0000059200037718156685,2.999640159096328e-33,0.000005203555806205563,1.0535216825595015e-32,0.000004636673413843514,3.266375737581319e-33,0.000004184857747309278,7.193604283658865e-33,0.000003823080245335596,8.103086345429433e-33,0.000003532950482752592,4.1714555935737745e-33,0.0000033008533745407167,2.2469743745545424e-35,0.000003116637556051196,2.2065292094619194e-33,0.000002972701753843201,6.315051656385623e-34,0.000002863472704917261,2.1559767495585816e-34,0.000002784829872516936,3.463407647889049e-33,0.000002733893561766148,2.220270728765802e-33,0.0000027087996720452852,3.8961232670852256e-33,0.000002708569852454781,7.07714030524011e-33,0.00000273306859464591,0.21914734981806283,2.284287952685527e-32,0.0031909265781099464,2.558313062955023e-32,0.0010694766636808596,8.990218130981334e-33,0.0004956984494361449,1.070117682498647e-32,0.0002683179887380062,1.1885164034855986e-32,0.0001596168151196707,1.4866131003670988e-32,0.00010150114075601705,9.98496979302565e-33,0.00006797568650413826,1.7475630928011357e-32,0.00004750491428793542,7.286454306024836e-33,0.000034425507437879466,6.487269582659323e-33,0.00002574804672313231,6.194589883160435e-33,0.000019802502687000815,3.1240780115212916e-33,0.00001561383575747746,1.66762878446943e-33,0.000012590152520199884,1.0673154905620492e-33,0.000010360475373683149,2.790283782723987e-33,0.000008685270015013426,4.792460831907012e-33,0.000007405939310145589,2.3634660396294166e-33,0.000006415271864934532,3.250590347457907e-33,0.0000056388857926232244,1.1416594093063532e-32,0.000005024577964009857,3.5396410504622695e-33,0.000004534963354733222,7.795421919853833e-33,0.000004142919511648601,8.780991339643225e-33,0.0000038285174648221985,4.5204399755086646e-33,0.0000035770030898934066,2.434956469949604e-35,0.0000033773757580565483,2.3911276583994123e-33,0.000003221398272593133,6.8433694940693635e-34,0.0000031030311107774206,2.3363459747685503e-34,0.0000030178090113459138,3.753156669609218e-33,0.000002962611363868254,2.4060187945489105e-33,0.0000029354181168851274,4.222073319724048e-33,0.000002935169070565259,7.669214553638076e-33,0.0000029617173799182498,0.2336185227140838,2.526021476820642e-32,0.003528604639265098,2.829045144618354e-32,0.0011826534471016633,9.941603051166445e-33,0.0005481554669280235,1.1833623013854994e-32,0.00029671259324932865,1.3142905023110976e-32,0.00017650817734251957,1.6439331192179112e-32,0.00011224244350195164,1.1041623764173678e-32,0.00007516917637691496,1.9324980019813172e-32,0.00005253209587905604,8.057539350611317e-33,0.00003806856794752962,7.173781340683146e-33,0.000028472819695235466,6.850128971946348e-33,0.00002189809171096605,3.4546818596527064e-33,0.000017266161392905578,1.8441046891578127e-33,0.000013922498529611039,1.1802635690187243e-33,0.000011456867017674928,3.0855640390252774e-33,0.000009604383967492988,5.299620380165543e-33,0.000008189668789989647,2.613578541541269e-33,0.0000070941645038298605,3.59458229439559e-33,0.000006235617799743301,1.2624748923321192e-32,0.000005556301180911559,3.914221630067228e-33,0.000005014873373202855,8.62036818400192e-33,0.000004581341704691975,9.710234948986077e-33,0.000004233668233093889,4.9988130653094836e-33,0.000003955537486901264,2.692634407577616e-35,0.0000037347847017773646,2.644167435999382e-33,0.0000035623009841629263,7.567565330594825e-34,0.0000034314076821406164,2.58358851063874e-34,0.0000033371670006141736,4.150332422915289e-33,0.0000032761280922599846,2.66063441849328e-33,0.0000032460571347771047,4.668871921246176e-33,0.0000032457817332665507,8.48080499223392e-33,0.0000032751395029470736,0.24719118748987973,2.9128629254317774e-32,0.004068984261035907,3.262292419818844e-32,0.0013637680484143919,1.1464085801657784e-32,0.0006321014099203381,1.364585458472805e-32,0.00034215192559348766,1.5155643420132843e-32,0.0002035390951876174,1.8956892800794183e-32,0.0001294315409971157,1.273256652580379e-32,0.00008668077805860418,2.228445733773962e-32,0.00006057699662709345,9.291491723239148e-33,0.00004389848669782826,8.272392730694872e-33,0.00003283322079159187,7.899175402864316e-33,0.000025251621994466108,3.98374075615929e-33,0.00001991034591250517,2.126515640881897e-33,0.0000160546258883459,1.3610121782335663e-33,0.000013211401202887323,3.558095279789432e-33,0.000011075224117149543,6.111217923482031e-33,0.000009443855805989405,3.013828705028137e-33,0.000008180583165955148,4.145065904561135e-33,0.000007190556403699336,1.4558135557862535e-32,0.00000640720748454637,4.513655633085313e-33,0.000005782864024942252,9.940513616834045e-33,0.000005282940197772199,1.1197285391149422e-32,0.0000048820231133898125,5.764344200046502e-33,0.0000045612987068709625,3.104991390432147e-35,0.000004306739270471178,3.0491020617333717e-33,0.000004107840951161512,8.726481817176445e-34,0.000003956902311032444,2.9792459233890513e-34,0.0000038482293683022405,4.785925042151086e-33,0.0000037778428039815223,3.0680908404275977e-33,0.000003743166702456702,5.383875017604632e-33,0.0000037428491252480106,9.779577357666685e-33,0.0000037767028195496896],"methodUsed":"Default","origin":"simulation"},"skinEffectLosses":{"harmonicFrequencies":[0,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000,100000,300000,500000,700000],"lossesPerHarmonic":[0,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000012798818231184317,0.00000141812604140276,5.075645878630756e-7,2.5679864154454823e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000014621334357554276,0.0000016200632463069167,5.798403737868812e-7,2.9336605401896773e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000016443850483924238,0.0000018220004512110735,6.521161597106868e-7,3.2993346649338734e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000018266366610294196,0.00000202393765611523,7.243919456344924e-7,3.6650087896780684e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7,0.000020088882736664152,0.0000022258748610193864,7.966677315582979e-7,4.030682914422264e-7],"methodUsed":"Default","origin":"simulation"}}]},"windingWindowCurrentDensityField":null,"windingWindowCurrentField":null,"windingWindowMagneticStrengthField":null}]})"));


        for (size_t windingIndex = 0; windingIndex < mas.get_magnetic().get_coil().get_functional_description().size(); ++windingIndex) {
            mas.get_mutable_magnetic().get_mutable_coil().get_mutable_functional_description()[windingIndex].set_wire("Dummy");
        }
        mas.get_mutable_magnetic().get_mutable_coil().set_turns_description(std::nullopt);
        mas.get_mutable_magnetic().get_mutable_coil().set_layers_description(std::nullopt);
        mas.get_mutable_magnetic().get_mutable_coil().set_sections_description(std::nullopt);

        OpenMagnetics::CoilAdviser coilAdviser;
        auto masMagneticsWithCoil = coilAdviser.get_advised_coil(mas, 1);
    }
}